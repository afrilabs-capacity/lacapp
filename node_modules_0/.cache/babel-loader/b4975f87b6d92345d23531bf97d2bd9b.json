{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\react\\\\lac\\\\src\\\\editor\\\\RichText.js\";\n\nimport React, { useContext } from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\nimport ArticleProvider from \"../context/ArticleContext\";\n\nvar RichText = function RichText(actionType) {\n  var _useContext = useContext(ArticleProvider.Context),\n      article = _useContext.article,\n      updateArticle = _useContext.updateArticle;\n\n  var handleEditorChange = function handleEditorChange(content) {\n    console.log('Content was updated:', content);\n    console.log('Action Type:', actionType);\n\n    if (actionType) {\n      updateArticle(\"bodyEn\", content);\n    } else {\n      updateArticle(\"bodyFr\", content);\n    }\n\n    console.log(\"articles\", article);\n  };\n\n  return /*#__PURE__*/React.createElement(Editor, {\n    apiKey: \"mymryl9rtn2npjz2vhp3yovdx2of4phahbqil1sq29upca83\",\n    initialValue: \"<p>Wow ! ... It Works !!!</p>\",\n    init: {\n      height: 500,\n      menubar: false,\n      plugins: ['advlist autolink lists link image', 'charmap print preview anchor help', 'searchreplace visualblocks code', 'insertdatetime media table paste wordcount'],\n      toolbar: 'undo redo | formatselect | bold italic | \\\r\n            alignleft aligncenter alignright | \\\r\n            bullist numlist outdent indent | help'\n    },\n    onEditorChange: function onEditorChange(e) {\n      return handleEditorChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  });\n};\n\nexport default RichText;","map":{"version":3,"sources":["C:/react/lac/src/editor/RichText.js"],"names":["React","useContext","Editor","ArticleProvider","RichText","actionType","Context","article","updateArticle","handleEditorChange","content","console","log","height","menubar","plugins","toolbar","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;;AAEA,IAAMC,QAAQ,GAAE,SAAVA,QAAU,CAACC,UAAD,EAAe;AAAA,oBACCJ,UAAU,CAACE,eAAe,CAACG,OAAjB,CADX;AAAA,MACtBC,OADsB,eACtBA,OADsB;AAAA,MACdC,aADc,eACdA,aADc;;AAI7B,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,OAAD,EAAa;AACtCC,IAAAA,OAAO,CAACC,GAAR,CACE,sBADF,EAEEF,OAFF;AAKAC,IAAAA,OAAO,CAACC,GAAR,CACE,cADF,EAEEP,UAFF;;AAKA,QAAGA,UAAH,EAAe;AAACG,MAAAA,aAAa,CAAC,QAAD,EAAWE,OAAX,CAAb;AAAiC,KAAjD,MAAsD;AAACF,MAAAA,aAAa,CAAC,QAAD,EAAWE,OAAX,CAAb;AAAkC;;AACzFC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBL,OAAvB;AACD,GAbD;;AAgBE,sBACE,oBAAC,MAAD;AACA,IAAA,MAAM,EAAC,kDADP;AAEE,IAAA,YAAY,EAAC,+BAFf;AAGE,IAAA,IAAI,EAAE;AACJM,MAAAA,MAAM,EAAE,GADJ;AAEJC,MAAAA,OAAO,EAAE,KAFL;AAGJC,MAAAA,OAAO,EAAE,CACP,mCADO,EAEP,mCAFO,EAGP,iCAHO,EAIP,4CAJO,CAHL;AASJC,MAAAA,OAAO,EACL;;;AAVE,KAHR;AAkBE,IAAA,cAAc,EAAE,wBAACC,CAAD;AAAA,aAAKR,kBAAkB,CAACQ,CAAD,CAAvB;AAAA,KAlBlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAuBH,CA3CD;;AA6CA,eAAeb,QAAf","sourcesContent":["import React,{useContext} from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport ArticleProvider from \"../context/ArticleContext\"\r\n\r\nconst RichText =(actionType)=> {\r\n  const {article,updateArticle}=useContext(ArticleProvider.Context)\r\n\r\n\r\n  const handleEditorChange = (content) => {\r\n    console.log(\r\n      'Content was updated:',\r\n      content\r\n    );\r\n\r\n    console.log(\r\n      'Action Type:',\r\n      actionType\r\n    );\r\n\r\n    if(actionType) {updateArticle(\"bodyEn\", content)}else {updateArticle(\"bodyFr\", content) }\r\n    console.log(\"articles\",article)\r\n  }\r\n\r\n  \r\n    return (\r\n      <Editor\r\n      apiKey=\"mymryl9rtn2npjz2vhp3yovdx2of4phahbqil1sq29upca83\"\r\n        initialValue=\"<p>Wow ! ... It Works !!!</p>\"\r\n        init={{\r\n          height: 500,\r\n          menubar: false,\r\n          plugins: [\r\n            'advlist autolink lists link image',\r\n            'charmap print preview anchor help',\r\n            'searchreplace visualblocks code',\r\n            'insertdatetime media table paste wordcount'\r\n          ],\r\n          toolbar:\r\n            'undo redo | formatselect | bold italic | \\\r\n            alignleft aligncenter alignright | \\\r\n            bullist numlist outdent indent | help'\r\n        }}\r\n\r\n        onEditorChange={(e)=>handleEditorChange(e)}\r\n      />\r\n    );\r\n\r\n}\r\n\r\nexport default RichText;"]},"metadata":{},"sourceType":"module"}