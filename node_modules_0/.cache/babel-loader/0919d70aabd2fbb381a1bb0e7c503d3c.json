{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\react\\\\lac\\\\src\\\\modals\\\\image-upload-modal.js\";\n\nimport React, { useContext } from \"react\";\nimport { CToaster, CToast, CToastHeader, CToastBody } from '@coreui/react';\nimport ArticleProvider from \"../context/ArticleContext\";\n\nvar ModalMe = function ModalMe(_ref) {\n  var showToast = _ref.showToast;\n\n  var _useContext = useContext(ArticleProvider.Context),\n      modal = _useContext.modal,\n      setModal = _useContext.setModal;\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CButton, {\n    onClick: toggle,\n    className: \"mr-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"Launch demo modal\"), /*#__PURE__*/React.createElement(CModal, {\n    show: modal,\n    onClose: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CModalHeader, {\n    closeButton: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"Modal title\"), /*#__PURE__*/React.createElement(CModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"Lorem ipsum dolor...\"), /*#__PURE__*/React.createElement(CModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, \"Do Something\"), ' ', /*#__PURE__*/React.createElement(CButton, {\n    color: \"secondary\",\n    onClick: setModal(false),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))));\n};\n\nexport default ModalMe;","map":{"version":3,"sources":["C:/react/lac/src/modals/image-upload-modal.js"],"names":["React","useContext","CToaster","CToast","CToastHeader","CToastBody","ArticleProvider","ModalMe","showToast","Context","modal","setModal","toggle"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;AACA,SACIC,QADJ,EAEIC,MAFJ,EAGIC,YAHJ,EAIIC,UAJJ,QAKS,eALT;AAME,OAAOC,eAAP,MAA4B,2BAA5B;;AAIF,IAAMC,OAAO,GAAC,SAARA,OAAQ,OAAe;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAAA,oBACFP,UAAU,CAACK,eAAe,CAACG,OAAjB,CADR;AAAA,MAClBC,KADkB,eAClBA,KADkB;AAAA,MACZC,QADY,eACZA,QADY;;AAEzB,sBACI,uDACF,oBAAC,OAAD;AACE,IAAA,OAAO,EAAEC,MADX;AAEE,IAAA,SAAS,EAAC,MAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADE,eAKF,oBAAC,MAAD;AACE,IAAA,IAAI,EAAEF,KADR;AAEE,IAAA,OAAO,EAAEE,MAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,YAAD;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,eAKE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALF,eAQE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EACkD,GADlD,eAEE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,OAAO,EAAED,QAAQ,CAAC,KAAD,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CARF,CALE,CADJ;AA0BH,CA5BD;;AAgCA,eAAeJ,OAAf","sourcesContent":["import React,{useContext} from \"react\"\r\nimport {\r\n    CToaster,\r\n    CToast,\r\n    CToastHeader,\r\n    CToastBody,\r\n  } from '@coreui/react'\r\n  import ArticleProvider from \"../context/ArticleContext\"\r\n\r\n\r\n\r\nconst ModalMe=({showToast})=>{\r\n    const {modal,setModal}=useContext(ArticleProvider.Context)\r\n    return (\r\n        <>\r\n      <CButton\r\n        onClick={toggle}\r\n        className=\"mr-1\"\r\n      >Launch demo modal</CButton>\r\n      <CModal\r\n        show={modal}\r\n        onClose={toggle}\r\n      >\r\n        <CModalHeader closeButton>Modal title</CModalHeader>\r\n        <CModalBody>\r\n          Lorem ipsum dolor...\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"primary\">Do Something</CButton>{' '}\r\n          <CButton\r\n            color=\"secondary\"\r\n            onClick={setModal(false)}\r\n          >Cancel</CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </>\r\n           \r\n      )\r\n\r\n}\r\n\r\n\r\n\r\nexport default ModalMe"]},"metadata":{},"sourceType":"module"}