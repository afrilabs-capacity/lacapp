{"ast":null,"code":"import _defineProperty from \"C:\\\\react\\\\lac\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\react\\\\lac\\\\src\\\\views\\\\dashboard\\\\DashboardUserSetting.js\";\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { CBadge, CCard, CCardBody, CCardHeader, CCol, CDataTable, CRow, CFormGroup, CInput, CLabel, CPagination, CButton } from '@coreui/react';\nimport UserProvider from \"../../context/UserContext\";\nimport UserRole from \"../../inputs/user-role\";\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport usersData from '../../views/users/UsersData';\nimport Paginations from \"../../pagination/pagination\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport LoginModal from '../../modals/login-modal';\n\nvar getBadge = function getBadge(status) {\n  switch (status) {\n    case 'Active':\n      return 'success';\n\n    case 'Inactive':\n      return 'secondary';\n\n    case 'Pending':\n      return 'warning';\n\n    case 'Banned':\n      return 'danger';\n\n    default:\n      return 'primary';\n  }\n};\n\nvar DashboardUserSetting = function DashboardUserSetting() {\n  var _React$createElement;\n\n  var _useContext = useContext(UserProvider.Context),\n      toast = _useContext.toast,\n      fetchUsersApi = _useContext.fetchUsersApi,\n      users = _useContext.users,\n      setUser = _useContext.setUser,\n      addUserApi = _useContext.addUserApi,\n      errors = _useContext.errors,\n      deleteUserApi = _useContext.deleteUserApi,\n      apiAction = _useContext.apiAction,\n      fetchingFailMsg = _useContext.fetchingFailMsg;\n\n  useEffect(function () {\n    fetchUsersApi();\n  }, []);\n  var Styles = {\n    errorColor: {\n      color: \"red\"\n    }\n  };\n  var formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n      role: 'editor'\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().max(15, 'Must be 7 characters or less').required('Name field required'),\n      email: Yup.string().email('Invalid email address').required('Required'),\n      role: Yup.string().required('Email address required')\n    }),\n    onSubmit: function onSubmit(values) {\n      //setUser(values)\n      addUserApi(values); //alert(JSON.stringify(values, null, 2));\n    }\n  });\n  useEffect(function () {// currentPage !== page && setPage(currentPage)\n  }, []);\n  return /*#__PURE__*/React.createElement(CRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    xl: 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"Update Password\"), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CFormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(CInput, {\n    id: \"name\",\n    placeholder: \"Enter your name\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  })), formik.touched.name && formik.errors.name ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: Styles.errorColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 12\n    }\n  }, formik.errors.name), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 69\n    }\n  })) : null)), /*#__PURE__*/React.createElement(CRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CFormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"ccnumber\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(CInput, (_React$createElement = {\n    id: \"email\",\n    type: \"email\",\n    placeholder: \"Enter email here..\"\n  }, _defineProperty(_React$createElement, \"placeholder\", \"Enter your name\"), _defineProperty(_React$createElement, \"onChange\", formik.handleChange), _defineProperty(_React$createElement, \"onBlur\", formik.handleBlur), _defineProperty(_React$createElement, \"value\", formik.values.email), _defineProperty(_React$createElement, \"__self\", _this), _defineProperty(_React$createElement, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 21\n  }), _React$createElement))), formik.touched.email && formik.errors.email ? /*#__PURE__*/React.createElement(\"div\", {\n    style: Styles.errorColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 10\n    }\n  }, formik.errors.email) : null)), /*#__PURE__*/React.createElement(CRow, {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(UserRole, {\n    formik: formik,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 20\n    }\n  }))), /*#__PURE__*/React.createElement(CRow, {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, apiAction ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary px-4 w-100\",\n    disabled: apiAction,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"spinner-grow spinner-grow-sm\",\n    role: \"status\",\n    \"aria-hidden\": \"true\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 23\n    }\n  }), \"\\xA0Loading...\") : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary px-4 w-100\",\n    disabled: apiAction,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, \"Add\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    className: \"mt-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 19\n    }\n  }, errors.length ? /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 36\n    }\n  }, \"Submission contains errors\") : \"\", errors.length ? errors.map(function (error, i) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      key: i,\n      className: \"text-left\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 62\n      }\n    }, error);\n  }) : \"\"))))))), /*#__PURE__*/React.createElement(LoginModal, {\n    context: UserProvider.Context,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default DashboardUserSetting;","map":{"version":3,"sources":["C:/react/lac/src/views/dashboard/DashboardUserSetting.js"],"names":["React","useState","useEffect","useContext","useHistory","useLocation","CBadge","CCard","CCardBody","CCardHeader","CCol","CDataTable","CRow","CFormGroup","CInput","CLabel","CPagination","CButton","UserProvider","UserRole","useFormik","Yup","usersData","Paginations","FontAwesomeIcon","faTrash","LoginModal","getBadge","status","DashboardUserSetting","Context","toast","fetchUsersApi","users","setUser","addUserApi","errors","deleteUserApi","apiAction","fetchingFailMsg","Styles","errorColor","color","formik","initialValues","name","email","password","role","validationSchema","object","string","max","required","onSubmit","values","handleSubmit","handleChange","handleBlur","touched","length","map","error","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect,useContext } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel,\r\n  CPagination,\r\n  CButton\r\n} from '@coreui/react'\r\nimport UserProvider from \"../../context/UserContext\"\r\nimport UserRole from \"../../inputs/user-role\"\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport usersData from '../../views/users/UsersData'\r\nimport Paginations from \"../../pagination/pagination\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash} from \"@fortawesome/free-solid-svg-icons\";\r\nimport LoginModal from '../../modals/login-modal'\r\n\r\n\r\nconst getBadge = status => {\r\n  switch (status) {\r\n    case 'Active': return 'success'\r\n    case 'Inactive': return 'secondary'\r\n    case 'Pending': return 'warning'\r\n    case 'Banned': return 'danger'\r\n    default: return 'primary'\r\n  }\r\n}\r\n\r\nconst DashboardUserSetting= () => {\r\n\r\n\r\n    const {toast,fetchUsersApi,users,setUser,addUserApi,errors,deleteUserApi,apiAction,fetchingFailMsg}=useContext(UserProvider.Context)\r\n\r\n    useEffect(()=>{\r\n    \r\n  fetchUsersApi()\r\n\r\n    },[])\r\n\r\n    const Styles={\r\n        errorColor:{\r\n            color:\"red\"\r\n        }\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n          name: '',\r\n          email: '',\r\n          password:'',\r\n          role: 'editor',\r\n        },\r\n        validationSchema: Yup.object({\r\n          name: Yup.string()\r\n            .max(15, 'Must be 7 characters or less')\r\n            .required('Name field required'),\r\n          email: Yup.string().email('Invalid email address').required('Required'),\r\n          role: Yup.string().required('Email address required'),\r\n        }),\r\n        onSubmit: values => {\r\n            //setUser(values)\r\n            addUserApi(values)\r\n          //alert(JSON.stringify(values, null, 2));\r\n        },\r\n      });\r\n\r\n  useEffect(() => {\r\n    // currentPage !== page && setPage(currentPage)\r\n  }, [])\r\n\r\n  return (\r\n      \r\n    <CRow>\r\n      <CCol xl={5}>\r\n        <CCard>\r\n          <CCardHeader>\r\n          Update Password\r\n          </CCardHeader>\r\n          <CCardBody>\r\n          <form onSubmit={formik.handleSubmit}>\r\n          <CRow>\r\n                <CCol xs=\"12\">\r\n                  <CFormGroup>\r\n                    <CLabel htmlFor=\"name\">Name</CLabel>\r\n                    <CInput \r\n                    id=\"name\" \r\n                    placeholder=\"Enter your name\" \r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.name}\r\n                     />\r\n                  </CFormGroup>\r\n                  {formik.touched.name && formik.errors.name ? (\r\n         <><div style={Styles.errorColor}>{formik.errors.name}</div><br /></>\r\n       ) : null}\r\n                </CCol>\r\n              </CRow>\r\n              <CRow>\r\n                <CCol xs=\"12\">\r\n                  <CFormGroup>\r\n                    <CLabel htmlFor=\"ccnumber\">Email</CLabel>\r\n                    <CInput id=\"email\"\r\n                     type=\"email\"\r\n                      placeholder=\"Enter email here..\" \r\n                      placeholder=\"Enter your name\" \r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.email}\r\n                      \r\n                       />\r\n                  </CFormGroup>\r\n                  {formik.touched.email && formik.errors.email ? (\r\n         <div style={Styles.errorColor}>{formik.errors.email}</div>\r\n       ) : null}\r\n                </CCol>\r\n              </CRow>\r\n\r\n              <CRow className=\"text-center\">\r\n              <CCol xs=\"12\">\r\n                   <UserRole formik={formik} />\r\n                  </CCol>\r\n                  </CRow>\r\n\r\n              \r\n              <CRow className=\"text-center\">\r\n              <CCol xs=\"12\">\r\n              {apiAction ? \r\n                    <button className=\"btn btn-primary px-4 w-100\"   disabled={apiAction}>\r\n                      <span\r\n                        className=\"spinner-grow spinner-grow-sm\"\r\n                        role=\"status\"\r\n                        aria-hidden=\"true\"\r\n                      ></span>\r\n                      &nbsp;Loading...\r\n                    </button> : \r\n                    <button className=\"btn btn-primary px-4 w-100\"  disabled={apiAction}>\r\n                    \r\n                      Add\r\n                    </button>}\r\n                  <div style={{color:\"red\"}} className=\"mt-2\">\r\n                  {errors.length ? <h3>Submission contains errors</h3>:\"\"}\r\n                      {errors.length ?errors.map( (error,i)=><p key={i} className=\"text-left\">{error}</p>):\"\"}\r\n                      </div>\r\n                  </CCol>\r\n              </CRow>\r\n         </form>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n\r\n\r\n      \r\n      <LoginModal context={UserProvider.Context}/>\r\n      \r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default DashboardUserSetting\r\n"]},"metadata":{},"sourceType":"module"}