{"ast":null,"code":"import _toConsumableArray from \"C:\\\\react\\\\lac\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\react\\\\lac\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\react\\\\lac\\\\src\\\\modals\\\\image-upload-modal.js\";\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { CModal, CModalHeader, CButton, CModalBody, CModalFooter, CRow, CCol, CProgress } from '@coreui/react';\nimport ArticleProvider from \"../context/ArticleContext\";\nimport PgCatProvider from \"../context/PgCatContext\";\nimport GalleryProvider from \"../context/GalleryContext\";\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport axios from \"axios\";\nvar API_URL = \"http://192.168.43.122:8080/laravel/site40/public/api/v1/\";\nvar PUBLIC_URL = \"http://192.168.43.122:8080/laravel/site40/public\";\nvar Styles = {\n  link: {\n    textDecoration: \"underline\",\n    fontSize: \"11px\",\n    color: \"green\"\n  },\n  Titles: {\n    color: \"black\"\n  },\n  Theme: {\n    background: \"rgb(250, 252, 255)\"\n  }\n};\n\nvar ModalMe = function ModalMe(_ref) {\n  var showToast = _ref.showToast;\n\n  var _useContext = useContext(ArticleProvider.Context),\n      updateArticle = _useContext.updateArticle,\n      article = _useContext.article,\n      setArticle = _useContext.setArticle,\n      featuredFor = _useContext.featuredFor,\n      setSelectedImageEn = _useContext.setSelectedImageEn,\n      setSelectedImageFr = _useContext.setSelectedImageFr,\n      modal = _useContext.modal,\n      setModal = _useContext.setModal;\n\n  var _useContext2 = useContext(GalleryProvider.Context),\n      boy = _useContext2.boy,\n      uploadProgress = _useContext2.uploadProgress,\n      setUploadProgress = _useContext2.setUploadProgress; //console.log(\"boy\",uploadProgress)\n  //const {answer}=useContext(GalleryProvider.Context)\n\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      gallery = _useState2[0],\n      updateGallery = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedImage = _useState4[0],\n      setSelectedImage = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedImageId = _useState6[0],\n      setSelectedImageId = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      fileType = _useState8[0],\n      setFileType = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      fileName = _useState10[0],\n      setFileName = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      fileSize = _useState12[0],\n      setFileSize = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      fileDimension = _useState14[0],\n      setFileDimension = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      fileUploadedOn = _useState16[0],\n      setFileUploadedOn = _useState16[1];\n\n  var _useState17 = useState({}),\n      _useState18 = _slicedToArray(_useState17, 2),\n      pagination = _useState18[0],\n      setPagination = _useState18[1];\n\n  var triggerSelectInput = function triggerSelectInput(e, input) {\n    e.preventDefault();\n    input.click();\n  };\n\n  var fetchGallery = function fetchGallery(async) {\n    axios.request({\n      method: \"get\",\n      url: API_URL + \"photo/all\",\n      // data: data, \n      onUploadProgress: function onUploadProgress(p) {\n        setUploadProgress(function (prevProgress) {\n          return prevProgress + Math.round(100 * p.loaded / p.total);\n        }); //console.log(\"upload progress\",p.total/p.loaded)\n      }\n    }).then(function (response) {\n      //console.log(\"response file name\",response.data.data.data.data)\n      updateGallery(function (prevGallery) {\n        return [].concat(_toConsumableArray(prevGallery), _toConsumableArray(response.data.data.data.data));\n      }); // console.log(\"initial api fetch\",response)\n    });\n  };\n\n  var LoadMore = function LoadMore(async) {\n    axios.request({\n      method: \"get\",\n      url: API_URL + \"photo/all\",\n      // data: data, \n      onUploadProgress: function onUploadProgress(p) {\n        setUploadProgress(function (prevProgress) {\n          return prevProgress + Math.round(100 * p.loaded / p.total);\n        }); //console.log(\"upload progress\",p.total/p.loaded)\n      }\n    }).then(function (response) {\n      //console.log(\"response file name\",response.data.data.data.data)\n      updateGallery(function (prevGallery) {\n        return [].concat(_toConsumableArray(prevGallery), _toConsumableArray(response.data.data.data.data));\n      }); // console.log(\"initial api fetch\",response)\n    });\n  };\n\n  useEffect(function () {\n    var uploadBt = document.getElementById(\"modal-upload-bt\");\n    var uploadInput = document.getElementById(\"modal-upload-input\");\n    uploadBt.addEventListener(\"click\", function (e) {\n      return triggerSelectInput(e, uploadInput);\n    }); //console.log(\"gallery from useEffect\",gallery)\n\n    fetchGallery();\n  }, []);\n\n  var _onChange = function onChange(e) {\n    //console.log(e.target.value)\n    setUploadProgress(0);\n    var file = null;\n    file = e.target.files[0] || e.dataTransfer.files[0];\n    e.target.value = \"\";\n    var allowed_mime_types = ['image/jpeg', 'image/png'];\n    var allowed_size_mb = 5;\n\n    if (allowed_mime_types.indexOf(file.type) == -1) {\n      alert('Error : Incorrect file type');\n      return;\n    }\n\n    if (file.size > allowed_size_mb * 1024 * 1024) {\n      alert('Error : Exceeded size');\n      return;\n    } //alert(\"on change for loading files\")\n\n\n    if (!file) return; //this.createImage(files[0]);\n\n    var reader = new FileReader();\n\n    reader.onload = function (e) {//setImage(reader.result)\n      //console.log(reader.result)\n    };\n\n    reader.readAsDataURL(file);\n    var data = new FormData();\n    data.append(\"file\", file);\n    axios.request({\n      method: \"post\",\n      url: API_URL + \"photo/upload\",\n      data: data,\n      onUploadProgress: function onUploadProgress(p) {\n        setUploadProgress(function (prevProgress) {\n          return prevProgress + Math.round(100 * p.loaded / p.total);\n        }); //console.log(\"upload progress\",p.total/p.loaded)\n      }\n    }).then(function (response) {\n      updateGallery([]);\n      updateGallery(function (prevGallery) {\n        return [].concat(_toConsumableArray(prevGallery), _toConsumableArray(response.data.data.data.data));\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CModal, {\n    size: \"lg\",\n    show: modal,\n    onClose: function onClose() {\n      return setModal(!modal);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CModalHeader, {\n    closeButton: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 35\n    }\n  }, \"Gallery\"), \" \"), /*#__PURE__*/React.createElement(CModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InfiniteScroll, {\n    dataLength: gallery.length,\n    next: function next() {\n      return alert(\"next items\");\n    },\n    hasMore: true,\n    loader: /*#__PURE__*/React.createElement(\"h4\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 19\n      }\n    }, \"Loading...\"),\n    scrollableTarget: \"scrollableDiv\",\n    endMessage: /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 15\n      }\n    }, \"Yay! You have seen it all\")),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    id: \"scrollableDiv\",\n    style: {\n      overflowY: \"auto\",\n      height: \"370px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 21\n    }\n  }, gallery.length && gallery.map(function (val, k) {\n    var imgSmall = PUBLIC_URL + val.img_small;\n    var imageBig = PUBLIC_URL + val.img_big; //alert(\"check\")\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3\",\n      style: {\n        padding: \"1em\"\n      },\n      key: k,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: imgSmall,\n      className: 'img-thumbnail',\n      onClick: function onClick() {\n        //let imageSource=document.getElementById(\"modal-selected-image\").src.value=val\n        setSelectedImage(imageBig); //setSelectedImageId(val.id)\n\n        setFileType(val.file_type);\n        setFileName(val.file_original_name);\n        setFileSize(val.file_size);\n        setFileUploadedOn(val.created_at);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 15\n      }\n    }));\n  })))))), /*#__PURE__*/React.createElement(CCol, {\n    md: \"4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: 'img-fluid',\n    id: \"modal-selected-image\",\n    src: selectedImage !== \"\" ? selectedImage : \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 15\n    }\n  }), selectedImage !== \"\" && /*#__PURE__*/React.createElement(\"p\", {\n    align: \"center\",\n    id: \"acpb_ft_rm_fr\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 38\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"\",\n    style: Styles.link,\n    id: \"acpb_fr_ft\",\n    className: \"acpb_featured_gallery_single_fr_remove\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 75\n    }\n  }, \"remove\")), selectedImage !== \"\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 18\n    }\n  }, \"File name:\"), \" \", fileName), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 18\n    }\n  }, \"File type:\"), \" \", fileType), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 18\n    }\n  }, \"File size:\"), \" \", fileSize, \"kb\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 18\n    }\n  }, \"Uploaded on:\"), \" \", fileUploadedOn)))), /*#__PURE__*/React.createElement(CRow, {\n    className: \"d-flex flex-row justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"modal-upload-input\",\n    type: \"file\",\n    hidden: true,\n    onChange: function onChange(e) {\n      return _onChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(CButton, {\n    id: \"modal-upload-bt\",\n    color: \"primary\",\n    size: \"md\",\n    block: true,\n    md: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 15\n    }\n  }, \"Add IMage\"), /*#__PURE__*/React.createElement(CProgress, {\n    className: \"progress-xs\",\n    color: \"success\",\n    value: uploadProgress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(CModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    color: \"primary\",\n    onClick: function onClick() {\n      if (featuredFor !== \"\") {\n        setModal(function (prev) {\n          return !prev;\n        }); //console.log(\"selected Image\",selectedImage)\n        //console.log(\"Featured For\",featuredFor)\n\n        if (featuredFor == \"acpb_en_ft\") {\n          updateArticle(\"featured_en\", selectedImage);\n          setSelectedImageEn(selectedImage);\n        } else {\n          updateArticle(\"featured_fr\", selectedImage);\n          setSelectedImageFr(selectedImage);\n        }\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 11\n    }\n  }, \"OK\"), ' ', /*#__PURE__*/React.createElement(CButton, {\n    color: \"secondary\",\n    onClick: function onClick() {\n      return setModal(!modal);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))));\n};\n\nexport default ModalMe;","map":{"version":3,"sources":["C:/react/lac/src/modals/image-upload-modal.js"],"names":["React","useContext","useEffect","useState","CModal","CModalHeader","CButton","CModalBody","CModalFooter","CRow","CCol","CProgress","ArticleProvider","PgCatProvider","GalleryProvider","InfiniteScroll","axios","API_URL","PUBLIC_URL","Styles","link","textDecoration","fontSize","color","Titles","Theme","background","ModalMe","showToast","Context","updateArticle","article","setArticle","featuredFor","setSelectedImageEn","setSelectedImageFr","modal","setModal","boy","uploadProgress","setUploadProgress","gallery","updateGallery","selectedImage","setSelectedImage","selectedImageId","setSelectedImageId","fileType","setFileType","fileName","setFileName","fileSize","setFileSize","fileDimension","setFileDimension","fileUploadedOn","setFileUploadedOn","pagination","setPagination","triggerSelectInput","e","input","preventDefault","click","fetchGallery","async","request","method","url","onUploadProgress","p","prevProgress","Math","round","loaded","total","then","response","prevGallery","data","LoadMore","uploadBt","document","getElementById","uploadInput","addEventListener","onChange","file","target","files","dataTransfer","value","allowed_mime_types","allowed_size_mb","indexOf","type","alert","size","reader","FileReader","onload","readAsDataURL","FormData","append","length","textAlign","overflowY","height","map","val","k","imgSmall","img_small","imageBig","img_big","padding","file_type","file_original_name","file_size","created_at","prev"],"mappings":"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","sourcesContent":["import React,{useContext,useEffect,useState} from \"react\"\r\nimport {\r\n    CModal,\r\n    CModalHeader,\r\n    CButton,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CRow,\r\n    CCol,\r\n    CProgress\r\n  } from '@coreui/react'\r\n  import ArticleProvider from \"../context/ArticleContext\"\r\n  import PgCatProvider from \"../context/PgCatContext\"\r\n  import GalleryProvider from \"../context/GalleryContext\";\r\n  import InfiniteScroll from 'react-infinite-scroll-component';\r\n  import axios from \"axios\";\r\n\r\n\r\n  const API_URL = \"http://192.168.43.122:8080/laravel/site40/public/api/v1/\";\r\n\r\n  const PUBLIC_URL = \"http://192.168.43.122:8080/laravel/site40/public\";\r\n\r\n  const Styles={\r\n    link:{\r\n      textDecoration:\"underline\",\r\n      fontSize:\"11px\",\r\n      color:\"green\"\r\n    },\r\n    Titles:{\r\n      color:\"black\"\r\n    },\r\n    Theme:{\r\n      background:\"rgb(250, 252, 255)\"\r\n    }\r\n  }\r\n    \r\n\r\n\r\nconst ModalMe=({showToast})=>{\r\n\r\n  const {updateArticle,article,setArticle,featuredFor,setSelectedImageEn,setSelectedImageFr,modal,setModal}=useContext(ArticleProvider.Context)\r\n\r\n\r\n  const {boy,uploadProgress,setUploadProgress} = useContext(GalleryProvider.Context)\r\n\r\n  //console.log(\"boy\",uploadProgress)\r\n\r\n  //const {answer}=useContext(GalleryProvider.Context)\r\n\r\n  const [gallery,updateGallery]=useState([])\r\n\r\n  const [selectedImage,setSelectedImage]=useState(\"\")\r\n  const [selectedImageId,setSelectedImageId]=useState(\"\")\r\n  const [fileType,setFileType]=useState(\"\")\r\n  const [fileName,setFileName]=useState(\"\")\r\n  const [fileSize,setFileSize]=useState(\"\")\r\n  const [fileDimension,setFileDimension]=useState(\"\")\r\n  const [fileUploadedOn,setFileUploadedOn]=useState(\"\")\r\n  const [pagination,setPagination] = useState({});\r\n\r\n\r\n\r\n  const triggerSelectInput=(e,input)=>{\r\n    e.preventDefault()\r\n     input.click()\r\n}\r\n\r\n const fetchGallery=async=>{\r\n\r\n  axios.request( {\r\n    method: \"get\", \r\n    url: API_URL+\"photo/all\", \r\n    // data: data, \r\n    onUploadProgress: (p) => {\r\n       setUploadProgress(prevProgress=>prevProgress+Math.round((100 * p.loaded) / p.total))\r\n       //console.log(\"upload progress\",p.total/p.loaded)\r\n    }\r\n\r\n\r\n  }).then (response => {\r\n      //console.log(\"response file name\",response.data.data.data.data)\r\n    \r\n      updateGallery(prevGallery=>[\r\n        ...prevGallery,...response.data.data.data.data\r\n      ])\r\n\r\n     // console.log(\"initial api fetch\",response)\r\n  })\r\n\r\n }\r\n\r\n\r\n const LoadMore=async=>{\r\n\r\n  axios.request( {\r\n    method: \"get\", \r\n    url: API_URL+\"photo/all\", \r\n    // data: data, \r\n    onUploadProgress: (p) => {\r\n       setUploadProgress(prevProgress=>prevProgress+Math.round((100 * p.loaded) / p.total))\r\n       //console.log(\"upload progress\",p.total/p.loaded)\r\n    }\r\n\r\n\r\n  }).then (response => {\r\n      //console.log(\"response file name\",response.data.data.data.data)\r\n    \r\n      updateGallery(prevGallery=>[\r\n        ...prevGallery,...response.data.data.data.data\r\n      ])\r\n\r\n     // console.log(\"initial api fetch\",response)\r\n  })\r\n\r\n }\r\n\r\n\r\n  useEffect(()=>{\r\n    const uploadBt=document.getElementById(\"modal-upload-bt\")\r\n    const uploadInput=document.getElementById(\"modal-upload-input\")\r\n    uploadBt.addEventListener(\"click\",(e)=>triggerSelectInput(e,uploadInput))\r\n    //console.log(\"gallery from useEffect\",gallery)\r\n\r\n     fetchGallery()\r\n},[])\r\n\r\nconst onChange=(e)=>{\r\n  //console.log(e.target.value)\r\n  setUploadProgress(0)\r\n  let file=null\r\n  file = e.target.files[0] || e.dataTransfer.files[0];\r\n  e.target.value = \"\";\r\n  let allowed_mime_types = [ 'image/jpeg', 'image/png' ];\r\n  let allowed_size_mb = 5;\r\n  \r\n  if(allowed_mime_types.indexOf(file.type) == -1) {\r\nalert('Error : Incorrect file type');\r\nreturn;\r\n}\r\n\r\nif(file.size > allowed_size_mb*1024*1024) {\r\nalert('Error : Exceeded size');\r\nreturn;\r\n}\r\n  //alert(\"on change for loading files\")\r\n  if (!file)\r\n  return;\r\n  //this.createImage(files[0]);\r\n  let reader = new FileReader();\r\n  reader.onload = (e) => {\r\n  //setImage(reader.result)\r\n  //console.log(reader.result)\r\n\r\n  };\r\n  reader.readAsDataURL(file);\r\n\r\n  let data = new FormData();\r\n\r\n  data.append(\"file\",file);\r\n  \r\n  axios.request( {\r\n      method: \"post\", \r\n      url: API_URL+\"photo/upload\", \r\n      data: data, \r\n      onUploadProgress: (p) => {\r\n         setUploadProgress(prevProgress=>prevProgress+Math.round((100 * p.loaded) / p.total))\r\n         //console.log(\"upload progress\",p.total/p.loaded)\r\n      }\r\n\r\n\r\n    }).then (response => {\r\n      updateGallery([])\r\n        updateGallery(prevGallery=>[\r\n          ...prevGallery,...response.data.data.data.data\r\n        ])\r\n    })\r\n}\r\n\r\n\r\n    \r\n    return (\r\n        <>\r\n      \r\n      <CModal\r\n      size=\"lg\"\r\n        show={modal}\r\n        onClose={()=>setModal(!modal)}\r\n      >\r\n        <CModalHeader closeButton><h1>Gallery</h1> </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n              <CCol md=\"8\">\r\n                {\r\n              <>\r\n            \r\n\r\n                    \r\n                    {\r\n                \r\n\r\n          <InfiniteScroll\r\n          dataLength={gallery.length}\r\n          next={()=>alert(\"next items\")}\r\n          hasMore={true}\r\n          loader={<h4>Loading...</h4>}\r\n         \r\n          scrollableTarget=\"scrollableDiv\"\r\n          endMessage={\r\n            <p style={{ textAlign: \"center\" }}>\r\n              <b>Yay! You have seen it all</b>\r\n            </p>\r\n          }\r\n        >\r\n        {/* <div className=\"row\"> */}\r\n\r\n                 <div className=\"container\">\r\n                    <div className=\"row\" id=\"scrollableDiv\" style={{overflowY:\"auto\",height:\"370px\"}}>\r\n          {\r\n\r\n            \r\n\r\n        gallery.length  && gallery.map((val, k) => {\r\n\r\n        let imgSmall=PUBLIC_URL+val.img_small\r\n        let imageBig=PUBLIC_URL+val.img_big\r\n\r\n        //alert(\"check\")\r\n          return (\r\n          <div className=\"col-md-3\" style={{padding:\"1em\"}} key={k}>\r\n              <img src={imgSmall} className={'img-thumbnail'} onClick={() => {\r\n        //let imageSource=document.getElementById(\"modal-selected-image\").src.value=val\r\n                setSelectedImage(imageBig)\r\n                //setSelectedImageId(val.id)\r\n                setFileType(val.file_type)\r\n                setFileName(val.file_original_name)\r\n                setFileSize(val.file_size)\r\n                setFileUploadedOn(val.created_at)\r\n              }} />\r\n          </div>\r\n          )\r\n          })\r\n          \r\n          }\r\n\r\n          {/* </div> */}\r\n                \r\n                </div>\r\n            </div>\r\n        </InfiniteScroll>\r\n\r\n\r\n                    }\r\n\r\n\r\n\r\n\r\n               \r\n            </>\r\n        \r\n                  \r\n              \r\n\r\n             \r\n                 \r\n                }\r\n\r\n              </CCol>\r\n\r\n\r\n              <CCol md=\"4\">\r\n              <img  className={'img-fluid'} id=\"modal-selected-image\" src={selectedImage!==\"\"?selectedImage:\"\"} />\r\n              {selectedImage!==\"\" && <p align=\"center\" id=\"acpb_ft_rm_fr\"><a href=\"\" style={Styles.link} id=\"acpb_fr_ft\" className=\"acpb_featured_gallery_single_fr_remove\">remove</a></p>} \r\n              {selectedImage!==\"\" && \r\n              <>\r\n              <p><b>File name:</b> {fileName}</p>\r\n              <p><b>File type:</b> {fileType}</p>\r\n              <p><b>File size:</b> {fileSize}kb</p>\r\n              <p><b>Uploaded on:</b> {fileUploadedOn}</p>\r\n              </>}\r\n              </CCol>\r\n          </CRow>\r\n          <CRow className=\"d-flex flex-row justify-content-center\">\r\n              {/* <CCol md=\"8\">Left</CCol>\r\n              <CCol md=\"4\">Right</CCol> */}\r\n              \r\n              <CCol md=\"4\">\r\n              <br />\r\n              <br />\r\n              <input id=\"modal-upload-input\" type=\"file\"  hidden={true} onChange={(e)=>onChange(e)} />\r\n              <CButton id=\"modal-upload-bt\" color=\"primary\" size=\"md\" block md=\"12\">Add IMage</CButton>\r\n              {/* ({uploadProgress}% uploaded) */}\r\n              <CProgress className=\"progress-xs\" color=\"success\" value={uploadProgress} />\r\n              </CCol>\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"primary\" onClick={()=>{\r\n            \r\n            if(featuredFor!==\"\") {\r\n              setModal(prev=>!prev)\r\n              //console.log(\"selected Image\",selectedImage)\r\n              //console.log(\"Featured For\",featuredFor)\r\n              if(featuredFor==\"acpb_en_ft\"){\r\n                updateArticle(\"featured_en\",selectedImage)\r\n                setSelectedImageEn(selectedImage)\r\n              }else{\r\n                updateArticle(\"featured_fr\",selectedImage)\r\n                setSelectedImageFr(selectedImage)\r\n              }\r\n              \r\n               \r\n            }\r\n            \r\n          \r\n\r\n            \r\n            }}>OK</CButton>{' '}\r\n          <CButton\r\n            color=\"secondary\"\r\n            onClick={()=>setModal(!modal)}\r\n          >Cancel</CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </>\r\n           \r\n      )\r\n\r\n}\r\n\r\n\r\n\r\nexport default ModalMe"]},"metadata":{},"sourceType":"module"}