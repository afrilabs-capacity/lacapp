{"ast":null,"code":"import _toConsumableArray from \"C:\\\\react\\\\lac\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\react\\\\lac\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\react\\\\lac\\\\src\\\\modals\\\\image-upload-modal.js\";\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { CModal, CModalHeader, CButton, CModalBody, CModalFooter, CRow, CCol } from '@coreui/react';\nimport ArticleProvider from \"../context/ArticleContext\";\nimport PgCatProvider from \"../context/PgCatContext\";\nimport GalleryProvider from \"../context/GalleryContext\";\nimport axios from \"axios\";\nvar API_URL = \"http://192.168.43.122:8080/laravel/site40/public/api/v1/\";\nvar PUBLIC_URL = \"http://192.168.43.122:8080/laravel/site40/public/\";\n\nvar ModalMe = function ModalMe(_ref) {\n  var showToast = _ref.showToast;\n\n  var _useContext = useContext(ArticleProvider.Context),\n      featuredFor = _useContext.featuredFor,\n      setSelectedImageEn = _useContext.setSelectedImageEn,\n      setSelectedImageFr = _useContext.setSelectedImageFr,\n      modal = _useContext.modal,\n      setModal = _useContext.setModal;\n\n  var _useContext2 = useContext(GalleryProvider.Context),\n      boy = _useContext2.boy,\n      uploadProgress = _useContext2.uploadProgress,\n      setUploadProgress = _useContext2.setUploadProgress;\n\n  console.log(\"boy\", uploadProgress); //const {answer}=useContext(GalleryProvider.Context)\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      gallery = _useState2[0],\n      updateGallery = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedImage = _useState4[0],\n      setSelectedImage = _useState4[1];\n\n  var triggerSelectInput = function triggerSelectInput(e, input) {\n    e.preventDefault();\n    input.click();\n  };\n\n  useEffect(function () {\n    var uploadBt = document.getElementById(\"modal-upload-bt\");\n    var uploadInput = document.getElementById(\"modal-upload-input\");\n    uploadBt.addEventListener(\"click\", function (e) {\n      return triggerSelectInput(e, uploadInput);\n    });\n  }, []);\n\n  var _onChange = function onChange(e) {\n    //console.log(e.target.value)\n    var file = null;\n    file = e.target.files[0] || e.dataTransfer.files[0];\n    e.target.value = \"\";\n    var allowed_mime_types = ['image/jpeg', 'image/png'];\n    var allowed_size_mb = 5;\n\n    if (allowed_mime_types.indexOf(file.type) == -1) {\n      alert('Error : Incorrect file type');\n      return;\n    }\n\n    if (file.size > allowed_size_mb * 1024 * 1024) {\n      alert('Error : Exceeded size');\n      return;\n    } //alert(\"on change for loading files\")\n\n\n    if (!file) return; //this.createImage(files[0]);\n\n    var reader = new FileReader();\n\n    reader.onload = function (e) {//setImage(reader.result)\n      //console.log(reader.result)\n    };\n\n    reader.readAsDataURL(file);\n    var data = new FormData();\n    data.append(\"file\", file);\n    axios.request({\n      method: \"post\",\n      url: API_URL + \"photo/upload\",\n      data: data,\n      onUploadProgress: function onUploadProgress(p) {\n        setUploadProgress(Math.round(event.loaded / event.total * 100)); //console.log(\"upload progress\",p.total/p.loaded)\n      }\n    }).then(function (response) {\n      //console.log(\"response\",response)\n      var imgUrl = PUBLIC_URL + response.data.data.path + \"/\" + response.data.data.image;\n      updateGallery(function (prevGallery) {\n        return [].concat(_toConsumableArray(prevGallery), [imgUrl]);\n      }); //console.log(\"image ray\",imgUrl)\n      // postType==\"en\" ? setImagePreviewUrlEn(`${PUBLIC_URL+response.data.data.path+\"/\"+response.data.data.image}`) : setImagePreviewUrlFr(reader.result)\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CModal, {\n    size: \"lg\",\n    show: modal,\n    onClose: function onClose() {\n      return setModal(!modal);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CModalHeader, {\n    closeButton: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"Gallery upload progress (\", uploadProgress, \")\"), /*#__PURE__*/React.createElement(CModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, gallery.map(function (val, k) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3\",\n      key: k,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: val,\n      className: 'img-thumbnail',\n      onClick: function onClick() {\n        //let imageSource=document.getElementById(\"modal-selected-image\").src.value=val\n        setSelectedImage(val);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }\n    }));\n  }))))), /*#__PURE__*/React.createElement(CCol, {\n    md: \"4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: 'img-fluid',\n    id: \"modal-selected-image\",\n    src: selectedImage !== \"\" ? selectedImage : \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(CRow, {\n    className: \"d-flex flex-row justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"modal-upload-input\",\n    type: \"file\",\n    hidden: true,\n    onChange: function onChange(e) {\n      return _onChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(CButton, {\n    id: \"modal-upload-bt\",\n    color: \"primary\",\n    size: \"md\",\n    block: true,\n    md: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, \"Add IMage\")))), /*#__PURE__*/React.createElement(CModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    color: \"primary\",\n    onClick: function onClick() {\n      if (featuredFor !== \"\") {\n        setModal(function (prev) {\n          return !prev;\n        });\n        console.log(\"selected Image\", selectedImage);\n        console.log(\"Featured For\", featuredFor);\n        featuredFor == \"acpb_en_ft\" ? setSelectedImageEn(selectedImage) : setSelectedImageFr(selectedImage);\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, \"OK\"), ' ', /*#__PURE__*/React.createElement(CButton, {\n    color: \"secondary\",\n    onClick: function onClick() {\n      return setModal(!modal);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))));\n};\n\nexport default ModalMe;","map":{"version":3,"sources":["C:/react/lac/src/modals/image-upload-modal.js"],"names":["React","useContext","useEffect","useState","CModal","CModalHeader","CButton","CModalBody","CModalFooter","CRow","CCol","ArticleProvider","PgCatProvider","GalleryProvider","axios","API_URL","PUBLIC_URL","ModalMe","showToast","Context","featuredFor","setSelectedImageEn","setSelectedImageFr","modal","setModal","boy","uploadProgress","setUploadProgress","console","log","gallery","updateGallery","selectedImage","setSelectedImage","triggerSelectInput","e","input","preventDefault","click","uploadBt","document","getElementById","uploadInput","addEventListener","onChange","file","target","files","dataTransfer","value","allowed_mime_types","allowed_size_mb","indexOf","type","alert","size","reader","FileReader","onload","readAsDataURL","data","FormData","append","request","method","url","onUploadProgress","p","Math","round","event","loaded","total","then","response","imgUrl","path","image","prevGallery","map","val","k","prev"],"mappings":"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","sourcesContent":["import React,{useContext,useEffect,useState} from \"react\"\r\nimport {\r\n    CModal,\r\n    CModalHeader,\r\n    CButton,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CRow,\r\n    CCol\r\n  } from '@coreui/react'\r\n  import ArticleProvider from \"../context/ArticleContext\"\r\n  import PgCatProvider from \"../context/PgCatContext\"\r\n  import GalleryProvider from \"../context/GalleryContext\";\r\n  import axios from \"axios\";\r\n\r\n\r\n  const API_URL = \"http://192.168.43.122:8080/laravel/site40/public/api/v1/\";\r\n\r\n  const PUBLIC_URL = \"http://192.168.43.122:8080/laravel/site40/public/\";\r\n\r\n\r\n\r\nconst ModalMe=({showToast})=>{\r\n\r\n  const {featuredFor,setSelectedImageEn,setSelectedImageFr,modal,setModal}=useContext(ArticleProvider.Context)\r\n\r\n\r\n  const {boy,uploadProgress,setUploadProgress} = useContext(GalleryProvider.Context)\r\n\r\n  console.log(\"boy\",uploadProgress)\r\n\r\n  //const {answer}=useContext(GalleryProvider.Context)\r\n\r\n  const [gallery,updateGallery]=useState([])\r\n\r\n  const [selectedImage,setSelectedImage]=useState(\"\")\r\n\r\n\r\n\r\n  const triggerSelectInput=(e,input)=>{\r\n    e.preventDefault()\r\n     input.click()\r\n}\r\n\r\n  useEffect(()=>{\r\n    const uploadBt=document.getElementById(\"modal-upload-bt\")\r\n    const uploadInput=document.getElementById(\"modal-upload-input\")\r\n    uploadBt.addEventListener(\"click\",(e)=>triggerSelectInput(e,uploadInput))\r\n},[])\r\n\r\nconst onChange=(e)=>{\r\n  //console.log(e.target.value)\r\n  let file=null\r\n  file = e.target.files[0] || e.dataTransfer.files[0];\r\n  e.target.value = \"\";\r\n  let allowed_mime_types = [ 'image/jpeg', 'image/png' ];\r\n  let allowed_size_mb = 5;\r\n  \r\n  if(allowed_mime_types.indexOf(file.type) == -1) {\r\nalert('Error : Incorrect file type');\r\nreturn;\r\n}\r\n\r\nif(file.size > allowed_size_mb*1024*1024) {\r\nalert('Error : Exceeded size');\r\nreturn;\r\n}\r\n  //alert(\"on change for loading files\")\r\n  if (!file)\r\n  return;\r\n  //this.createImage(files[0]);\r\n  let reader = new FileReader();\r\n  reader.onload = (e) => {\r\n  //setImage(reader.result)\r\n  //console.log(reader.result)\r\n\r\n  };\r\n  reader.readAsDataURL(file);\r\n\r\n  let data = new FormData();\r\n\r\n  data.append(\"file\",file);\r\n  \r\n  axios.request( {\r\n      method: \"post\", \r\n      url: API_URL+\"photo/upload\", \r\n      data: data, \r\n      onUploadProgress: (p) => {\r\n         setUploadProgress(Math.round((event.loaded / event.total) * 100))\r\n         //console.log(\"upload progress\",p.total/p.loaded)\r\n      }\r\n\r\n\r\n    }).then (response => {\r\n        //console.log(\"response\",response)\r\n        let imgUrl=PUBLIC_URL+response.data.data.path+\"/\"+response.data.data.image\r\n\r\n        updateGallery(prevGallery=>[...prevGallery,imgUrl])\r\n        //console.log(\"image ray\",imgUrl)\r\n      // postType==\"en\" ? setImagePreviewUrlEn(`${PUBLIC_URL+response.data.data.path+\"/\"+response.data.data.image}`) : setImagePreviewUrlFr(reader.result)\r\n    })\r\n}\r\n\r\n\r\n    \r\n    return (\r\n        <>\r\n      \r\n      <CModal\r\n      size=\"lg\"\r\n        show={modal}\r\n        onClose={()=>setModal(!modal)}\r\n      >\r\n        <CModalHeader closeButton>Gallery upload progress ({uploadProgress})</CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n              <CCol md=\"8\">\r\n                {\r\n              <>\r\n            <div className=\"row\">\r\n                \r\n                    <div className=\"row\">\r\n                    {gallery.map((val, k) => {\r\n                        return (\r\n                        <div className=\"col-md-3\" key={k}>\r\n                            <img src={val} className={'img-thumbnail'} onClick={() => {\r\n                    //let imageSource=document.getElementById(\"modal-selected-image\").src.value=val\r\n                              setSelectedImage(val)\r\n                            }} />\r\n                        </div>\r\n                        )\r\n                        })\r\n                    }\r\n                     </div>\r\n                \r\n                \r\n            </div>\r\n            </>\r\n        \r\n                  \r\n              \r\n\r\n             \r\n                 \r\n                }\r\n\r\n              </CCol>\r\n\r\n\r\n              <CCol md=\"4\">\r\n              <img  className={'img-fluid'} id=\"modal-selected-image\" src={selectedImage!==\"\"?selectedImage:\"\"} />\r\n              </CCol>\r\n          </CRow>\r\n          <CRow className=\"d-flex flex-row justify-content-center\">\r\n              {/* <CCol md=\"8\">Left</CCol>\r\n              <CCol md=\"4\">Right</CCol> */}\r\n              \r\n              <CCol md=\"4\">\r\n              <br />\r\n              <br />\r\n              <input id=\"modal-upload-input\" type=\"file\"  hidden={true} onChange={(e)=>onChange(e)} />\r\n              <CButton id=\"modal-upload-bt\" color=\"primary\" size=\"md\" block md=\"12\">Add IMage</CButton>\r\n              </CCol>\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"primary\" onClick={()=>{\r\n            \r\n            if(featuredFor!==\"\") {\r\n              setModal(prev=>!prev)\r\n              console.log(\"selected Image\",selectedImage)\r\n              console.log(\"Featured For\",featuredFor)\r\n              featuredFor==\"acpb_en_ft\" ? setSelectedImageEn(selectedImage):setSelectedImageFr(selectedImage)\r\n            }\r\n            \r\n          \r\n\r\n            \r\n            }}>OK</CButton>{' '}\r\n          <CButton\r\n            color=\"secondary\"\r\n            onClick={()=>setModal(!modal)}\r\n          >Cancel</CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </>\r\n           \r\n      )\r\n\r\n}\r\n\r\n\r\n\r\nexport default ModalMe"]},"metadata":{},"sourceType":"module"}