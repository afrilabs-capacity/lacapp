{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\react\\\\lac\\\\src\\\\editor\\\\RichText.js\";\n\nimport React, { useContext } from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\nimport ArticleProvider from \"../context/ArticleContext\";\n\nvar RichText = function RichText(_ref) {\n  var actionType = _ref.actionType;\n\n  var _useContext = useContext(ArticleProvider.Context),\n      currentArticle = _useContext.currentArticle,\n      editMode = _useContext.editMode,\n      article = _useContext.article,\n      updateArticle = _useContext.updateArticle;\n\n  var key = \"xxx\";\n\n  var setUpdateModeOrNot = function setUpdateModeOrNot() {\n    if (actionType == \"en\" && editMode == \"update\" && article.body_en !== null) {\n      key = Math.random();\n      console.log(\"Editor key\", key);\n      return article.body_en;\n    }\n\n    if (actionType == \"fr\" && editMode == \"update\" && article.body_fr !== null) {\n      key = Math.random();\n      console.log(\"Editor key\", key);\n      return article.body_fr;\n    }\n\n    return \"\";\n  };\n\n  var handleEditorChange = function handleEditorChange(content) {\n    actionType == \"en\" ? updateArticle(\"body_en\", content) : updateArticle(\"body_fr\", content);\n  };\n\n  return /*#__PURE__*/React.createElement(Editor, {\n    apiKey: \"mymryl9rtn2npjz2vhp3yovdx2of4phahbqil1sq29upca83\",\n    initialValue: setUpdateModeOrNot(),\n    init: {\n      height: 500,\n      menubar: false,\n      plugins: ['advlist autolink lists link image', 'charmap print preview anchor help', 'searchreplace visualblocks code', 'insertdatetime media table paste wordcount'],\n      toolbar: 'undo redo | formatselect | bold italic | \\\r\n            alignleft aligncenter alignright | \\\r\n            bullist numlist outdent indent | help'\n    },\n    onEditorChange: function onEditorChange(e) {\n      return handleEditorChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  });\n};\n\nexport default RichText;","map":{"version":3,"sources":["C:/react/lac/src/editor/RichText.js"],"names":["React","useContext","Editor","ArticleProvider","RichText","actionType","Context","currentArticle","editMode","article","updateArticle","key","setUpdateModeOrNot","body_en","Math","random","console","log","body_fr","handleEditorChange","content","height","menubar","plugins","toolbar","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;;AAEA,IAAMC,QAAQ,GAAE,SAAVA,QAAU,OAAiB;AAAA,MAAfC,UAAe,QAAfA,UAAe;;AAAA,oBACuBJ,UAAU,CAACE,eAAe,CAACG,OAAjB,CADjC;AAAA,MACxBC,cADwB,eACxBA,cADwB;AAAA,MACTC,QADS,eACTA,QADS;AAAA,MACAC,OADA,eACAA,OADA;AAAA,MACQC,aADR,eACQA,aADR;;AAGhC,MAAIC,GAAG,GAAC,KAAR;;AAEC,MAAMC,kBAAkB,GAAC,SAAnBA,kBAAmB,GAAI;AAE3B,QAAGP,UAAU,IAAE,IAAZ,IAAoBG,QAAQ,IAAE,QAA9B,IAA0CC,OAAO,CAACI,OAAR,KAAkB,IAA/D,EAAoE;AAClEF,MAAAA,GAAG,GAACG,IAAI,CAACC,MAAL,EAAJ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBN,GAAzB;AACA,aAAQF,OAAO,CAACI,OAAhB;AAED;;AAED,QAAGR,UAAU,IAAE,IAAZ,IAAoBG,QAAQ,IAAE,QAA9B,IAA0CC,OAAO,CAACS,OAAR,KAAkB,IAA/D,EAAoE;AAClEP,MAAAA,GAAG,GAACG,IAAI,CAACC,MAAL,EAAJ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBN,GAAzB;AACA,aAAQF,OAAO,CAACS,OAAhB;AAED;;AAED,WAAO,EAAP;AAGD,GAnBD;;AAsBA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,OAAD,EAAa;AACtCf,IAAAA,UAAU,IAAE,IAAZ,GAAmBK,aAAa,CAAC,SAAD,EAAYU,OAAZ,CAAhC,GAAuDV,aAAa,CAAC,SAAD,EAAYU,OAAZ,CAApE;AACD,GAFD;;AAKE,sBACE,oBAAC,MAAD;AAEA,IAAA,MAAM,EAAC,kDAFP;AAGC,IAAA,YAAY,EAAER,kBAAkB,EAHjC;AAKE,IAAA,IAAI,EAAE;AACJS,MAAAA,MAAM,EAAE,GADJ;AAEJC,MAAAA,OAAO,EAAE,KAFL;AAGJC,MAAAA,OAAO,EAAE,CACP,mCADO,EAEP,mCAFO,EAGP,iCAHO,EAIP,4CAJO,CAHL;AASJC,MAAAA,OAAO,EACL;;;AAVE,KALR;AAoBE,IAAA,cAAc,EAAE,wBAACC,CAAD;AAAA,aAAKN,kBAAkB,CAACM,CAAD,CAAvB;AAAA,KApBlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AA2BH,CA3DD;;AA6DA,eAAerB,QAAf","sourcesContent":["import React,{useContext} from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport ArticleProvider from \"../context/ArticleContext\"\r\n\r\nconst RichText =({actionType})=> {\r\n  const {currentArticle,editMode,article,updateArticle}=useContext(ArticleProvider.Context)\r\n\r\n let key=\"xxx\"\r\n\r\n  const setUpdateModeOrNot=()=>{\r\n\r\n    if(actionType==\"en\" && editMode==\"update\" && article.body_en!==null){\r\n      key=Math.random()\r\n      console.log(\"Editor key\",key)\r\n      return  article.body_en\r\n\r\n    }\r\n\r\n    if(actionType==\"fr\" && editMode==\"update\" && article.body_fr!==null){\r\n      key=Math.random()\r\n      console.log(\"Editor key\",key)\r\n      return  article.body_fr\r\n\r\n    }\r\n\r\n    return \"\"\r\n\r\n\r\n  }\r\n\r\n\r\n  const handleEditorChange = (content) => {\r\n    actionType==\"en\" ? updateArticle(\"body_en\", content):  updateArticle(\"body_fr\", content)\r\n  }\r\n\r\n  \r\n    return (\r\n      <Editor\r\n      \r\n      apiKey=\"mymryl9rtn2npjz2vhp3yovdx2of4phahbqil1sq29upca83\"\r\n       initialValue={setUpdateModeOrNot()}\r\n   \r\n        init={{\r\n          height: 500,\r\n          menubar: false,\r\n          plugins: [\r\n            'advlist autolink lists link image',\r\n            'charmap print preview anchor help',\r\n            'searchreplace visualblocks code',\r\n            'insertdatetime media table paste wordcount'\r\n          ],\r\n          toolbar:\r\n            'undo redo | formatselect | bold italic | \\\r\n            alignleft aligncenter alignright | \\\r\n            bullist numlist outdent indent | help'\r\n        }}\r\n\r\n        onEditorChange={(e)=>handleEditorChange(e)}\r\n\r\n        \r\n      />\r\n    );\r\n\r\n}\r\n\r\nexport default RichText;"]},"metadata":{},"sourceType":"module"}