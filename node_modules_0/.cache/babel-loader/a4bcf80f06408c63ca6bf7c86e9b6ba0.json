{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\react\\\\lac\\\\src\\\\editor\\\\RichText.js\";\n\nimport React, { useContext } from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\nimport ArticleProvider from \"../context/ArticleContext\";\n\nvar RichText = function RichText(_ref) {\n  var actionType = _ref.actionType;\n\n  var _useContext = useContext(ArticleProvider.Context),\n      currentArticle = _useContext.currentArticle,\n      editMode = _useContext.editMode,\n      article = _useContext.article,\n      updateArticle = _useContext.updateArticle;\n\n  var key = \"xxx\";\n  var myEditor = null;\n\n  var setUpdateModeOrNot = function setUpdateModeOrNot() {\n    if (actionType == \"en\" && editMode == \"update\" && article.body_en !== null) {\n      key = Math.random();\n      console.log(\"Editor key\", key);\n      return article.body_en;\n    }\n\n    if (actionType == \"fr\" && editMode == \"update\" && article.body_fr !== null) {\n      key = Math.random();\n      console.log(\"Editor key\", key);\n      return article.body_fr;\n    }\n\n    return \"\";\n  };\n\n  var handleEditorChange = function handleEditorChange(content) {\n    actionType == \"en\" ? updateArticle(\"body_en\", content) : updateArticle(\"body_fr\", content);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"my-file\",\n    type: \"file\",\n    name: \"my-file\",\n    style: {\n      display: \"none\"\n    },\n    onChange: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Editor, {\n    apiKey: \"mymryl9rtn2npjz2vhp3yovdx2of4phahbqil1sq29upca83\",\n    value: setUpdateModeOrNot(),\n    init: {\n      height: 500,\n      menubar: false,\n      plugins: ['advlist autolink lists link image', 'charmap print preview anchor help', 'searchreplace visualblocks code', 'insertdatetime media table paste wordcount'],\n      setup: function setup(editor) {\n        return editor.addButton('mybutton', {\n          text: \"My Button\",\n          onclick: function onclick() {\n            alert(\"My Button clicked!\");\n          }\n        });\n      },\n      toolbar: 'insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image',\n      file_browser_callback_types: 'image',\n      file_picker_callback: function file_picker_callback(callback, value, meta) {\n        if (meta.filetype == 'image') {\n          var input = document.getElementById('my-file');\n          input.click();\n\n          input.onchange = function () {\n            var file = input.files[0];\n            var reader = new FileReader();\n\n            reader.onload = function (e) {\n              console.log('name', e.target.result);\n              callback(e.target.result, {\n                alt: file.name\n              });\n            };\n\n            reader.readAsDataURL(file);\n          };\n        }\n      },\n      content_style: 'img { width:100%}',\n      image_dimensions: false,\n      image_class_list: [{\n        title: 'None',\n        value: 'mce-responsive'\n      }],\n      contextmenu: 'link image table',\n      paste_data_images: true\n    },\n    onEditorChange: function onEditorChange(e) {\n      return handleEditorChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default RichText;","map":{"version":3,"sources":["C:/react/lac/src/editor/RichText.js"],"names":["React","useContext","Editor","ArticleProvider","RichText","actionType","Context","currentArticle","editMode","article","updateArticle","key","myEditor","setUpdateModeOrNot","body_en","Math","random","console","log","body_fr","handleEditorChange","content","display","height","menubar","plugins","setup","editor","addButton","text","onclick","alert","toolbar","file_browser_callback_types","file_picker_callback","callback","value","meta","filetype","input","document","getElementById","click","onchange","file","files","reader","FileReader","onload","e","target","result","alt","name","readAsDataURL","content_style","image_dimensions","image_class_list","title","contextmenu","paste_data_images"],"mappings":"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","sourcesContent":["import React,{useContext} from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport ArticleProvider from \"../context/ArticleContext\"\r\n\r\nconst RichText =({actionType})=> {\r\n  const {currentArticle,editMode,article,updateArticle}=useContext(ArticleProvider.Context)\r\n\r\n let key=\"xxx\"\r\n\r\n let myEditor=null\r\n\r\n  const setUpdateModeOrNot=()=>{\r\n\r\n    if(actionType==\"en\" && editMode==\"update\" && article.body_en!==null){\r\n      key=Math.random()\r\n      console.log(\"Editor key\",key)\r\n      return  article.body_en\r\n\r\n    }\r\n\r\n    if(actionType==\"fr\" && editMode==\"update\" && article.body_fr!==null){\r\n      key=Math.random()\r\n      console.log(\"Editor key\",key)\r\n      return  article.body_fr\r\n\r\n    }\r\n\r\n    return \"\"\r\n\r\n\r\n  }\r\n\r\n\r\n  const handleEditorChange = (content) => {\r\n    actionType==\"en\" ? updateArticle(\"body_en\", content):  updateArticle(\"body_fr\", content)\r\n  }\r\n\r\n  \r\n    return (\r\n      <>\r\n      <input id=\"my-file\" type=\"file\" name=\"my-file\" style={{display:\"none\"}} onChange=\"\" />\r\n\r\n      <Editor\r\n      \r\n      apiKey=\"mymryl9rtn2npjz2vhp3yovdx2of4phahbqil1sq29upca83\"\r\n       value={setUpdateModeOrNot()}\r\n   \r\n        init={{\r\n          height: 500,\r\n          menubar: false,\r\n          plugins: [\r\n            'advlist autolink lists link image',\r\n            'charmap print preview anchor help',\r\n            'searchreplace visualblocks code',\r\n            'insertdatetime media table paste wordcount'\r\n          ],\r\n          setup: (editor) => {\r\n  return editor.addButton('mybutton', {\r\n  text: \"My Button\",\r\n  onclick: function () {\r\n     alert(\"My Button clicked!\");\r\n  }\r\n})\r\n          },\r\n         \r\n        toolbar: 'insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image',\r\n              \r\n              file_browser_callback_types: 'image',\r\n              file_picker_callback: function (callback, value, meta) {\r\n                if (meta.filetype == 'image') {\r\n                    var input = document.getElementById('my-file');\r\n                    input.click();\r\n                    input.onchange = function () {\r\n                        var file = input.files[0];\r\n                        var reader = new FileReader();\r\n                        reader.onload = function (e) {\r\n                            console.log('name',e.target.result);\r\n                            callback(e.target.result, {\r\n                                alt: file.name\r\n                            });\r\n                        };\r\n                        reader.readAsDataURL(file);\r\n                    };\r\n                }\r\n            },\r\n            content_style: 'img { width:100%}',\r\n            image_dimensions: false,\r\n            image_class_list: [\r\n    {title: 'None', value: 'mce-responsive'},\r\n\r\n  \r\n  ],\r\n  contextmenu: 'link image table',\r\n              paste_data_images: true,\r\n\r\n              }}\r\n\r\n        onEditorChange={(e)=>handleEditorChange(e)}\r\n\r\n        \r\n      /></>\r\n    );\r\n\r\n}\r\n\r\nexport default RichText;"]},"metadata":{},"sourceType":"module"}