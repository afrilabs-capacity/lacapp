{"ast":null,"code":"import _classCallCheck from \"C:\\\\react\\\\lac\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\react\\\\lac\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\react\\\\lac\\\\src\\\\views\\\\dashboard\\\\DashboardAddPostTest.js\";\n\nimport React, { useEffect, lazy } from 'react';\nimport { CBadge, CButton, CButtonGroup, CCard, CCardBody, CCardFooter, CCardHeader, CCol, CProgress, CRow, CCallout } from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport FormikPostEnglish from \"../../formik-wrappers/FormikPostEnglish\";\nimport EditorJS from '@editorjs/editorjs';\n\nvar DashboardAddPostTest = function DashboardAddPostTest() {\n  var editor = new EditorJS({\n    autofocus: true,\n    holder: 'editorjs',\n    tools: {\n      image: SimpleImage\n    },\n    data: {\n      time: 1552744582955,\n      blocks: [{\n        type: \"image\",\n        data: {\n          url: \"https://cdn.pixabay.com/photo/2017/09/01/21/53/blue-2705642_1280.jpg\"\n        }\n      }],\n      version: \"2.11.10\"\n    }\n  });\n\n  var saveEditor = function saveEditor() {\n    var output = document.getElementById('output');\n    editor.save().then(function (savedData) {\n      console.log(JSON.stringify(savedData, null, 4));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"9\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"English\"), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"editorjs\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return saveEditor();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Save\"))))));\n};\n\nvar SimpleImage = /*#__PURE__*/function () {\n  function SimpleImage(_ref) {\n    var data = _ref.data;\n\n    _classCallCheck(this, SimpleImage);\n\n    this.data = data;\n  }\n\n  _createClass(SimpleImage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      this.wrapper = document.createElement('div');\n      this.wrapper.setAttribute(\"style\", \"padding: 20px 0;\");\n\n      if (this.data && this.data.url) {\n        this._createImage(this.data.url, this.data.caption);\n\n        return this.wrapper;\n      }\n\n      var input = document.createElement('input');\n      input.setAttribute(\"style\", \"width: 100%;\\n        padding: 10px;\\n        border: 1px solid #e4e4e4;\\n        border-radius: 3px;\\n        outline: none;\\n        font-size: 14px;\");\n      this.wrapper.classList.add('simple-image');\n      this.wrapper.appendChild(input);\n      input.placeholder = 'Paste an image URL...';\n      input.value = this.data && this.data.url ? this.data.url : '';\n      input.addEventListener('paste', function (event) {\n        _this2._createImage(event.clipboardData.getData('text'));\n      });\n      return this.wrapper;\n    }\n  }, {\n    key: \"save\",\n    value: function save(blockContent) {\n      var image = blockContent.querySelector('img');\n      var caption = blockContent.querySelector('input');\n      console.log(\"block data\", blockContent);\n      return {\n        url: image.src || 'h',\n        caption: caption.value\n      };\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(savedData) {\n      if (!savedData.url.trim()) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"_createImage\",\n    value: function _createImage(url, captionText) {\n      var image = document.createElement('img');\n      image.setAttribute(\"style\", \"width: 100%;\");\n      var caption = document.createElement('div');\n      image.src = url;\n      caption.contentEditable = true; //caption.placeholder = 'Caption...';\n\n      caption.innerHtml = captionText || '';\n      this.wrapper.innerHTML = '';\n      this.wrapper.appendChild(image);\n      this.wrapper.appendChild(caption);\n    }\n  }, {\n    key: \"save\",\n    value: function save(blockContent) {\n      var image = blockContent.querySelector('img');\n      var caption = blockContent.querySelector('input');\n      console.log(\"block data\", image);\n      return {\n        url: image != null ? image.src : \"\",\n        caption: caption.value\n      };\n    }\n  }], [{\n    key: \"toolbox\",\n    get: function get() {\n      return {\n        title: 'Image',\n        icon: '<svg width=\"17\" height=\"15\" viewBox=\"0 0 336 276\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M291 150V79c0-19-15-34-34-34H79c-19 0-34 15-34 34v42l67-44 81 72 56-29 42 30zm0 52l-43-30-56 30-81-67-66 39v23c0 19 15 34 34 34h178c17 0 31-13 34-29zM79 0h178c44 0 79 35 79 79v118c0 44-35 79-79 79H79c-44 0-79-35-79-79V79C0 35 35 0 79 0z\"/></svg>'\n      };\n    }\n  }]);\n\n  return SimpleImage;\n}();\n\nexport default DashboardAddPostTest;","map":{"version":3,"sources":["C:/react/lac/src/views/dashboard/DashboardAddPostTest.js"],"names":["React","useEffect","lazy","CBadge","CButton","CButtonGroup","CCard","CCardBody","CCardFooter","CCardHeader","CCol","CProgress","CRow","CCallout","CIcon","FormikPostEnglish","EditorJS","DashboardAddPostTest","editor","autofocus","holder","tools","image","SimpleImage","data","time","blocks","type","url","version","saveEditor","output","document","getElementById","save","then","savedData","console","log","JSON","stringify","wrapper","createElement","setAttribute","_createImage","caption","input","classList","add","appendChild","placeholder","value","addEventListener","event","clipboardData","getData","blockContent","querySelector","src","trim","captionText","contentEditable","innerHtml","innerHTML","title","icon"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,IAA1B,QAAsC,OAAtC;AACA,SACEC,MADF,EAEEC,OAFF,EAGEC,YAHF,EAIEC,KAJF,EAKEC,SALF,EAMEC,WANF,EAOEC,WAPF,EAQEC,IARF,EASEC,SATF,EAUEC,IAVF,EAWEC,QAXF,QAYO,eAZP;AAaA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,iBAAP,MAA8B,yCAA9B;AACA,OAAOC,QAAP,MAAqB,oBAArB;;AAGA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAG/B,MAAMC,MAAM,GAAG,IAAIF,QAAJ,CAAa;AACxBG,IAAAA,SAAS,EAAE,IADa;AAExBC,IAAAA,MAAM,EAAC,UAFiB;AAGxBC,IAAAA,KAAK,EAAE;AACHC,MAAAA,KAAK,EAAEC;AADJ,KAHiB;AAMtBC,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAE,aADF;AAEJC,MAAAA,MAAM,EAAE,CACN;AACEC,QAAAA,IAAI,EAAE,OADR;AAEEH,QAAAA,IAAI,EAAE;AACJI,UAAAA,GAAG,EAAE;AADD;AAFR,OADM,CAFJ;AAUJC,MAAAA,OAAO,EAAE;AAVL;AANgB,GAAb,CAAf;;AAqBE,MAAMC,UAAU,GAAE,SAAZA,UAAY,GAAI;AACpB,QAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf;AACAf,IAAAA,MAAM,CAACgB,IAAP,GAAcC,IAAd,CAAoB,UAAAC,SAAS,EAAI;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,SAAf,EAA0B,IAA1B,EAAgC,CAAhC,CAAZ;AACD,KAFH;AAGD,GALD;;AAQD,sBACD,uDACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAIN,UAAU,EAAd;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,CAJF,CADF,CADF,CADF,CADC;AAuBJ,CAvDD;;IA0DMP,W;AAGF,6BAAmB;AAAA,QAANC,IAAM,QAANA,IAAM;;AAAA;;AACf,SAAKA,IAAL,GAAYA,IAAZ;AACD;;;;6BASK;AAAA;;AACJ,WAAKiB,OAAL,GAAeT,QAAQ,CAACU,aAAT,CAAuB,KAAvB,CAAf;AACA,WAAKD,OAAL,CAAaE,YAAb,CAA0B,OAA1B,EAAkC,kBAAlC;;AAGA,UAAI,KAAKnB,IAAL,IAAa,KAAKA,IAAL,CAAUI,GAA3B,EAA+B;AAC3B,aAAKgB,YAAL,CAAkB,KAAKpB,IAAL,CAAUI,GAA5B,EAAiC,KAAKJ,IAAL,CAAUqB,OAA3C;;AACA,eAAO,KAAKJ,OAAZ;AACD;;AAEH,UAAMK,KAAK,GAAGd,QAAQ,CAACU,aAAT,CAAuB,OAAvB,CAAd;AACAI,MAAAA,KAAK,CAACH,YAAN,CAAmB,OAAnB;AAOA,WAAKF,OAAL,CAAaM,SAAb,CAAuBC,GAAvB,CAA2B,cAA3B;AACA,WAAKP,OAAL,CAAaQ,WAAb,CAAyBH,KAAzB;AAEAA,MAAAA,KAAK,CAACI,WAAN,GAAoB,uBAApB;AACAJ,MAAAA,KAAK,CAACK,KAAN,GAAc,KAAK3B,IAAL,IAAa,KAAKA,IAAL,CAAUI,GAAvB,GAA6B,KAAKJ,IAAL,CAAUI,GAAvC,GAA6C,EAA3D;AAEAkB,MAAAA,KAAK,CAACM,gBAAN,CAAuB,OAAvB,EAAgC,UAACC,KAAD,EAAW;AACvC,QAAA,MAAI,CAACT,YAAL,CAAkBS,KAAK,CAACC,aAAN,CAAoBC,OAApB,CAA4B,MAA5B,CAAlB;AACD,OAFH;AAIA,aAAO,KAAKd,OAAZ;AACH;;;yBAEEe,Y,EAAa;AACZ,UAAMlC,KAAK,GAAGkC,YAAY,CAACC,aAAb,CAA2B,KAA3B,CAAd;AACA,UAAMZ,OAAO,GAAGW,YAAY,CAACC,aAAb,CAA2B,OAA3B,CAAhB;AAEApB,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBkB,YAAzB;AAEA,aAAO;AACL5B,QAAAA,GAAG,EAAEN,KAAK,CAACoC,GAAN,IAAa,GADb;AAELb,QAAAA,OAAO,EAAEA,OAAO,CAACM;AAFZ,OAAP;AAIH;;;6BAEQf,S,EAAU;AACf,UAAI,CAACA,SAAS,CAACR,GAAV,CAAc+B,IAAd,EAAL,EAA0B;AACxB,eAAO,KAAP;AACD;;AAED,aAAO,IAAP;AACD;;;iCAEY/B,G,EAAKgC,W,EAAY;AAC5B,UAAMtC,KAAK,GAAGU,QAAQ,CAACU,aAAT,CAAuB,KAAvB,CAAd;AACApB,MAAAA,KAAK,CAACqB,YAAN,CAAmB,OAAnB,EAA2B,cAA3B;AACA,UAAME,OAAO,GAAGb,QAAQ,CAACU,aAAT,CAAuB,KAAvB,CAAhB;AAEApB,MAAAA,KAAK,CAACoC,GAAN,GAAY9B,GAAZ;AACAiB,MAAAA,OAAO,CAACgB,eAAR,GAA0B,IAA1B,CAN4B,CAO5B;;AACAhB,MAAAA,OAAO,CAACiB,SAAR,GAAoBF,WAAW,IAAI,EAAnC;AAEA,WAAKnB,OAAL,CAAasB,SAAb,GAAyB,EAAzB;AACA,WAAKtB,OAAL,CAAaQ,WAAb,CAAyB3B,KAAzB;AACA,WAAKmB,OAAL,CAAaQ,WAAb,CAAyBJ,OAAzB;AACD;;;yBAGIW,Y,EAAa;AAChB,UAAMlC,KAAK,GAAGkC,YAAY,CAACC,aAAb,CAA2B,KAA3B,CAAd;AACA,UAAMZ,OAAO,GAAGW,YAAY,CAACC,aAAb,CAA2B,OAA3B,CAAhB;AAEApB,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBhB,KAAzB;AAEA,aAAO;AACLM,QAAAA,GAAG,EAAEN,KAAK,IAAE,IAAP,GAAaA,KAAK,CAACoC,GAAnB,GAAwB,EADxB;AAELb,QAAAA,OAAO,EAAEA,OAAO,CAACM;AAFZ,OAAP;AAIH;;;wBApFoB;AACnB,aAAO;AACLa,QAAAA,KAAK,EAAE,OADF;AAELC,QAAAA,IAAI,EAAE;AAFD,OAAP;AAID;;;;;;AAmFL,eAAehD,oBAAf","sourcesContent":["import React, {useEffect, lazy } from 'react'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CButtonGroup,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CProgress,\r\n  CRow,\r\n  CCallout\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport FormikPostEnglish from \"../../formik-wrappers/FormikPostEnglish\"\r\nimport EditorJS from '@editorjs/editorjs';\r\n\r\n\r\nconst DashboardAddPostTest = () => {\r\n\r\n\r\n    const editor = new EditorJS({\r\n        autofocus: true,\r\n        holder:'editorjs',\r\n        tools: {\r\n            image: SimpleImage\r\n          },\r\n          data: {\r\n            time: 1552744582955,\r\n            blocks: [\r\n              {\r\n                type: \"image\",\r\n                data: {\r\n                  url: \"https://cdn.pixabay.com/photo/2017/09/01/21/53/blue-2705642_1280.jpg\"\r\n                }\r\n              }\r\n            ],\r\n            version: \"2.11.10\"\r\n          }\r\n      });\r\n\r\n\r\n      const saveEditor= ()=>{\r\n        const output = document.getElementById('output');\r\n        editor.save().then( savedData => {\r\n            console.log(JSON.stringify(savedData, null, 4));\r\n          })\r\n      }\r\n\r\n\r\n     return (\r\n    <>\r\n      <CRow>\r\n        <CCol md=\"9\">\r\n          <CCard>\r\n            <CCardHeader>\r\n              English\r\n            </CCardHeader>\r\n            <CCardBody>\r\n            <div id=\"editorjs\"></div>\r\n            <button onClick={()=>saveEditor()}>Save</button>\r\n\r\n\r\n        </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n\r\n\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nclass SimpleImage {\r\n\r\n\r\n    constructor({data}){\r\n        this.data = data;\r\n      }\r\n\r\n    static get toolbox() {\r\n      return {\r\n        title: 'Image',\r\n        icon: '<svg width=\"17\" height=\"15\" viewBox=\"0 0 336 276\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M291 150V79c0-19-15-34-34-34H79c-19 0-34 15-34 34v42l67-44 81 72 56-29 42 30zm0 52l-43-30-56 30-81-67-66 39v23c0 19 15 34 34 34h178c17 0 31-13 34-29zM79 0h178c44 0 79 35 79 79v118c0 44-35 79-79 79H79c-44 0-79-35-79-79V79C0 35 35 0 79 0z\"/></svg>'\r\n      };\r\n    }\r\n  \r\n    render(){\r\n        this.wrapper = document.createElement('div');\r\n        this.wrapper.setAttribute(\"style\",\"padding: 20px 0;\")\r\n\r\n\r\n        if (this.data && this.data.url){\r\n            this._createImage(this.data.url, this.data.caption);\r\n            return this.wrapper;\r\n          }\r\n\r\n        const input = document.createElement('input');\r\n        input.setAttribute(\"style\",`width: 100%;\r\n        padding: 10px;\r\n        border: 1px solid #e4e4e4;\r\n        border-radius: 3px;\r\n        outline: none;\r\n        font-size: 14px;`)\r\n    \r\n        this.wrapper.classList.add('simple-image');\r\n        this.wrapper.appendChild(input);\r\n    \r\n        input.placeholder = 'Paste an image URL...';\r\n        input.value = this.data && this.data.url ? this.data.url : '';\r\n\r\n        input.addEventListener('paste', (event) => {\r\n            this._createImage(event.clipboardData.getData('text'));\r\n          });\r\n    \r\n        return this.wrapper;\r\n    }\r\n  \r\n  save(blockContent){\r\n        const image = blockContent.querySelector('img');\r\n        const caption = blockContent.querySelector('input');\r\n\r\n        console.log(\"block data\",blockContent)\r\n    \r\n        return {\r\n          url: image.src || 'h',\r\n          caption: caption.value\r\n        }\r\n    }\r\n\r\n    validate(savedData){\r\n        if (!savedData.url.trim()){\r\n          return false;\r\n        }\r\n    \r\n        return true;\r\n      }\r\n\r\n      _createImage(url, captionText){\r\n        const image = document.createElement('img');\r\n        image.setAttribute(\"style\",\"width: 100%;\")\r\n        const caption = document.createElement('div');\r\n    \r\n        image.src = url;\r\n        caption.contentEditable = true;\r\n        //caption.placeholder = 'Caption...';\r\n        caption.innerHtml = captionText || '';\r\n    \r\n        this.wrapper.innerHTML = '';\r\n        this.wrapper.appendChild(image);\r\n        this.wrapper.appendChild(caption);\r\n      }\r\n\r\n\r\n      save(blockContent){\r\n        const image = blockContent.querySelector('img');\r\n        const caption = blockContent.querySelector('input');\r\n\r\n        console.log(\"block data\",image)\r\n    \r\n        return {\r\n          url: image!=null? image.src: \"\",\r\n          caption: caption.value\r\n        }\r\n    }\r\n\r\n  }\r\n\r\nexport default DashboardAddPostTest\r\n"]},"metadata":{},"sourceType":"module"}