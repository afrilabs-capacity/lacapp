{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\react\\\\lac\\\\src\\\\modals\\\\image-upload-modal.js\";\n\nimport React, { useContext, useEffect } from \"react\";\nimport { CModal, CModalHeader, CButton, CModalBody, CModalFooter, CRow, CCol } from '@coreui/react';\nimport ArticleProvider from \"../context/ArticleContext\";\nimport axios from \"axios\";\nvar API_URL = \"http://192.168.43.122:8080/laravel/site40/public/api/v1/\";\nvar PUBLIC_URL = \"http://192.168.43.122:8080/laravel/site40/public/\";\n\nvar ModalMe = function ModalMe(_ref) {\n  var showToast = _ref.showToast;\n\n  var triggerSelectInput = function triggerSelectInput(e, input) {\n    e.preventDefault();\n    alert(\"add me\");\n  };\n\n  useEffect(function () {\n    var uploadBt = document.getElementById(\"modal-upload-bt\");\n    var uploadInput = document.getElementById(\"modal-upload-input\");\n    uploadBt.addEventListener(\"click\", function (e) {\n      return triggerSelectInput(e, uploadInput);\n    });\n  }, []);\n\n  var onChange = function onChange(e) {\n    //console.log(e.target.value)\n    var file = e.target.files[0] || e.dataTransfer.files[0];\n    var allowed_mime_types = ['image/jpeg', 'image/png'];\n    var allowed_size_mb = 5;\n\n    if (allowed_mime_types.indexOf(file.type) == -1) {\n      alert('Error : Incorrect file type');\n      return;\n    }\n\n    if (file.size > allowed_size_mb * 1024 * 1024) {\n      alert('Error : Exceeded size');\n      return;\n    } //alert(\"on change for loading files\")\n\n\n    if (!file) return; //this.createImage(files[0]);\n\n    var reader = new FileReader();\n\n    reader.onload = function (e) {//setImage(reader.result)\n    };\n\n    reader.readAsDataURL(file);\n    var data = new FormData();\n    data.append(\"file\", file);\n    axios.request({\n      method: \"post\",\n      url: API_URL + \"photo/upload\",\n      data: data,\n      onUploadProgress: function onUploadProgress(p) {//console.log(p); \n        //this.setState({\n        //fileprogress: p.loaded / p.total\n        //})\n        //console.log(\"loaded\",p.loaded)\n        //console.log(\"total\",p.total)\n      }\n    }).then(function (response) {\n      console.log(\"response\", response); // postType==\"en\" ? setImagePreviewUrlEn(`${PUBLIC_URL+response.data.data.path+\"/\"+response.data.data.image}`) : setImagePreviewUrlFr(reader.result)\n    });\n  };\n\n  var _useContext = useContext(ArticleProvider.Context),\n      modal = _useContext.modal,\n      setModal = _useContext.setModal;\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CModal, {\n    size: \"lg\",\n    show: modal,\n    onClose: function onClose() {\n      return setModal(!modal);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CModalHeader, {\n    closeButton: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"Gallery\"), /*#__PURE__*/React.createElement(CModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, \"Left\"), /*#__PURE__*/React.createElement(CCol, {\n    md: \"4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, \"Right\")), /*#__PURE__*/React.createElement(CRow, {\n    className: \"d-flex flex-row justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"img-fluid\",\n    src: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(CCol, {\n    md: \"4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"modal-upload-input\",\n    type: \"file\",\n    hidden: true,\n    onChange: function onChange(e) {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(CButton, {\n    id: \"modal-upload-bt\",\n    color: \"primary\",\n    size: \"md\",\n    block: true,\n    md: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, \"Add IMage\")))), /*#__PURE__*/React.createElement(CModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, \"Do Something\"), ' ', /*#__PURE__*/React.createElement(CButton, {\n    color: \"secondary\",\n    onClick: function onClick() {\n      return setModal(!modal);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))));\n};\n\nexport default ModalMe;","map":{"version":3,"sources":["C:/react/lac/src/modals/image-upload-modal.js"],"names":["React","useContext","useEffect","CModal","CModalHeader","CButton","CModalBody","CModalFooter","CRow","CCol","ArticleProvider","axios","API_URL","PUBLIC_URL","ModalMe","showToast","triggerSelectInput","e","input","preventDefault","alert","uploadBt","document","getElementById","uploadInput","addEventListener","onChange","file","target","files","dataTransfer","allowed_mime_types","allowed_size_mb","indexOf","type","size","reader","FileReader","onload","readAsDataURL","data","FormData","append","request","method","url","onUploadProgress","p","then","response","console","log","Context","modal","setModal"],"mappings":"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","sourcesContent":["import React,{useContext,useEffect} from \"react\"\r\nimport {\r\n    CModal,\r\n    CModalHeader,\r\n    CButton,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CRow,\r\n    CCol\r\n  } from '@coreui/react'\r\n  import ArticleProvider from \"../context/ArticleContext\"\r\n  import axios from \"axios\";\r\n\r\n  const API_URL = \"http://192.168.43.122:8080/laravel/site40/public/api/v1/\";\r\n\r\n  const PUBLIC_URL = \"http://192.168.43.122:8080/laravel/site40/public/\";\r\n\r\nconst ModalMe=({showToast})=>{\r\n\r\n\r\n  const triggerSelectInput=(e,input)=>{\r\n    e.preventDefault()\r\n   alert(\"add me\")\r\n}\r\n\r\n  useEffect(()=>{\r\n    const uploadBt=document.getElementById(\"modal-upload-bt\")\r\n    const uploadInput=document.getElementById(\"modal-upload-input\")\r\n    uploadBt.addEventListener(\"click\",(e)=>triggerSelectInput(e,uploadInput))\r\n},[])\r\n\r\nconst onChange=(e)=>{\r\n  //console.log(e.target.value)\r\n  let file = e.target.files[0] || e.dataTransfer.files[0];\r\n  let allowed_mime_types = [ 'image/jpeg', 'image/png' ];\r\n  let allowed_size_mb = 5;\r\n  \r\n  if(allowed_mime_types.indexOf(file.type) == -1) {\r\nalert('Error : Incorrect file type');\r\nreturn;\r\n}\r\n\r\nif(file.size > allowed_size_mb*1024*1024) {\r\nalert('Error : Exceeded size');\r\nreturn;\r\n}\r\n  //alert(\"on change for loading files\")\r\n  if (!file)\r\n  return;\r\n  //this.createImage(files[0]);\r\n  let reader = new FileReader();\r\n  reader.onload = (e) => {\r\n  //setImage(reader.result)\r\n\r\n  };\r\n  reader.readAsDataURL(file);\r\n\r\n  let data = new FormData();\r\n  data.append(\"file\",file);\r\n  \r\n  axios.request( {\r\n      method: \"post\", \r\n      url: API_URL+\"photo/upload\", \r\n      data: data, \r\n      onUploadProgress: (p) => {\r\n        //console.log(p); \r\n        //this.setState({\r\n          //fileprogress: p.loaded / p.total\r\n        //})\r\n        //console.log(\"loaded\",p.loaded)\r\n        //console.log(\"total\",p.total)\r\n      }\r\n\r\n\r\n    }).then (response => {\r\n        console.log(\"response\",response)\r\n      // postType==\"en\" ? setImagePreviewUrlEn(`${PUBLIC_URL+response.data.data.path+\"/\"+response.data.data.image}`) : setImagePreviewUrlFr(reader.result)\r\n    })\r\n}\r\n\r\n\r\n    const {modal,setModal}=useContext(ArticleProvider.Context)\r\n    return (\r\n        <>\r\n      \r\n      <CModal\r\n      size=\"lg\"\r\n        show={modal}\r\n        onClose={()=>setModal(!modal)}\r\n      >\r\n        <CModalHeader closeButton>Gallery</CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n              <CCol md=\"8\">Left</CCol>\r\n              <CCol md=\"4\">Right</CCol>\r\n          </CRow>\r\n          <CRow className=\"d-flex flex-row justify-content-center\">\r\n              {/* <CCol md=\"8\">Left</CCol>\r\n              <CCol md=\"4\">Right</CCol> */}\r\n              <img className=\"img-fluid\" src=\"\" />\r\n              <CCol md=\"4\">\r\n              <input id=\"modal-upload-input\" type=\"file\"  hidden={true} onChange={(e)=>{}} />\r\n              <CButton id=\"modal-upload-bt\" color=\"primary\" size=\"md\" block md=\"12\">Add IMage</CButton>\r\n              </CCol>\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"primary\">Do Something</CButton>{' '}\r\n          <CButton\r\n            color=\"secondary\"\r\n            onClick={()=>setModal(!modal)}\r\n          >Cancel</CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </>\r\n           \r\n      )\r\n\r\n}\r\n\r\n\r\n\r\nexport default ModalMe"]},"metadata":{},"sourceType":"module"}