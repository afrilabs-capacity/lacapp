{"ast":null,"code":"import _defineProperty from\"C:\\\\react\\\\lac\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import React,{useState,useEffect,useContext}from'react';import{useHistory,useLocation}from'react-router-dom';import{CBadge,CCard,CCardBody,CCardHeader,CCol,CDataTable,CRow,CFormGroup,CInput,CLabel,CPagination,CButton}from'@coreui/react';import UserProvider from\"../../context/UserContext\";import UserRole from\"../../inputs/user-role\";import{useFormik}from'formik';import*as Yup from'yup';import LoginModal from'../../modals/login-modal';var getBadge=function getBadge(status){switch(status){case'Active':return'success';case'Inactive':return'secondary';case'Pending':return'warning';case'Banned':return'danger';default:return'primary';}};var DashboardUserSetting=function DashboardUserSetting(){var _React$createElement;var _useContext=useContext(UserProvider.Context),updatePasswordUserApi=_useContext.updatePasswordUserApi,toast=_useContext.toast,fetchUsersApi=_useContext.fetchUsersApi,users=_useContext.users,setUser=_useContext.setUser,addUserApi=_useContext.addUserApi,errors=_useContext.errors,deleteUserApi=_useContext.deleteUserApi,apiAction=_useContext.apiAction,fetchingFailMsg=_useContext.fetchingFailMsg;var Styles={errorColor:{color:\"red\"}};var formik=useFormik({initialValues:{password:'',passwordConfirmation:''},validationSchema:Yup.object({password:Yup.string().required('Password is required').min(6,'Your password must be  6 characters or more.'),passwordConfirmation:Yup.string().required(\"PLease confirm password again\").oneOf([Yup.ref('password'),null],'Passwords must match')}),onSubmit:function onSubmit(values){//setUser(values)\nupdatePasswordUserApi(values);//alert(JSON.stringify(values, null, 2));\n}});useEffect(function(){// currentPage !== page && setPage(currentPage)\n},[]);return/*#__PURE__*/React.createElement(CRow,null,/*#__PURE__*/React.createElement(CCol,{xl:5},/*#__PURE__*/React.createElement(CCard,null,/*#__PURE__*/React.createElement(CCardHeader,null,\"Update Password\"),/*#__PURE__*/React.createElement(CCardBody,null,/*#__PURE__*/React.createElement(\"form\",{onSubmit:formik.handleSubmit},/*#__PURE__*/React.createElement(CRow,null,/*#__PURE__*/React.createElement(CCol,{xs:\"12\"},/*#__PURE__*/React.createElement(CFormGroup,null,/*#__PURE__*/React.createElement(CLabel,{htmlFor:\"name\"},\"New Password\"),/*#__PURE__*/React.createElement(CInput,{id:\"password\",type:\"password\",placeholder:\"Enter your new password\",onChange:formik.handleChange,onBlur:formik.handleBlur,value:formik.values.name})),formik.touched.password&&formik.errors.password?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{style:Styles.errorColor},formik.errors.password),/*#__PURE__*/React.createElement(\"br\",null)):null)),/*#__PURE__*/React.createElement(CRow,null,/*#__PURE__*/React.createElement(CCol,{xs:\"12\"},/*#__PURE__*/React.createElement(CFormGroup,null,/*#__PURE__*/React.createElement(CLabel,{htmlFor:\"ccnumber\"},\"Confirm New Password\"),/*#__PURE__*/React.createElement(CInput,(_React$createElement={id:\"passwordConfirmation\",type:\"password\",placeholder:\"Confirm password here..\"},_defineProperty(_React$createElement,\"placeholder\",\"Enter your name\"),_defineProperty(_React$createElement,\"onChange\",formik.handleChange),_defineProperty(_React$createElement,\"onBlur\",formik.handleBlur),_defineProperty(_React$createElement,\"value\",formik.values.passwordConfirmation),_React$createElement))),formik.touched.passwordConfirmation&&formik.errors.passwordConfirmation?/*#__PURE__*/React.createElement(\"div\",{style:Styles.errorColor},formik.errors.passwordConfirmation,/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null)):null)),/*#__PURE__*/React.createElement(CRow,{className:\"text-center\"},/*#__PURE__*/React.createElement(CCol,{xs:\"12\"},apiAction?/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary px-4 w-100\",disabled:apiAction},/*#__PURE__*/React.createElement(\"span\",{className:\"spinner-grow spinner-grow-sm\",role:\"status\",\"aria-hidden\":\"true\"}),\"\\xA0Loading...\"):/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary px-4 w-100\",disabled:apiAction},\"Update Password\"),/*#__PURE__*/React.createElement(\"div\",{style:{color:\"red\"},className:\"mt-2\"},errors.length?/*#__PURE__*/React.createElement(\"h3\",null,\"Submission contains errors\"):\"\",errors.length?errors.map(function(error,i){return/*#__PURE__*/React.createElement(\"p\",{key:i,className:\"text-left\"},error);}):\"\"))))))),/*#__PURE__*/React.createElement(LoginModal,{context:UserProvider.Context}));};export default DashboardUserSetting;","map":{"version":3,"sources":["C:/react/lac/src/views/dashboard/DashboardUserSetting.js"],"names":["React","useState","useEffect","useContext","useHistory","useLocation","CBadge","CCard","CCardBody","CCardHeader","CCol","CDataTable","CRow","CFormGroup","CInput","CLabel","CPagination","CButton","UserProvider","UserRole","useFormik","Yup","LoginModal","getBadge","status","DashboardUserSetting","Context","updatePasswordUserApi","toast","fetchUsersApi","users","setUser","addUserApi","errors","deleteUserApi","apiAction","fetchingFailMsg","Styles","errorColor","color","formik","initialValues","password","passwordConfirmation","validationSchema","object","string","required","min","oneOf","ref","onSubmit","values","handleSubmit","handleChange","handleBlur","name","touched","length","map","error","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect,useContext } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel,\r\n  CPagination,\r\n  CButton\r\n} from '@coreui/react'\r\nimport UserProvider from \"../../context/UserContext\"\r\nimport UserRole from \"../../inputs/user-role\"\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport LoginModal from '../../modals/login-modal'\r\n\r\n\r\n\r\nconst getBadge = status => {\r\n  switch (status) {\r\n    case 'Active': return 'success'\r\n    case 'Inactive': return 'secondary'\r\n    case 'Pending': return 'warning'\r\n    case 'Banned': return 'danger'\r\n    default: return 'primary'\r\n  }\r\n}\r\n\r\nconst DashboardUserSetting= () => {\r\n\r\n\r\n    const {updatePasswordUserApi,toast,fetchUsersApi,users,setUser,addUserApi,errors,deleteUserApi,apiAction,fetchingFailMsg}=useContext(UserProvider.Context)\r\n\r\n \r\n\r\n    const Styles={\r\n        errorColor:{\r\n            color:\"red\"\r\n        }\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            password: '',\r\n            passwordConfirmation: '',\r\n        },\r\n        validationSchema: Yup.object({\r\n          password: Yup.string().required('Password is required').min(6, 'Your password must be  6 characters or more.'),\r\n          passwordConfirmation: Yup.string().required(\"PLease confirm password again\")\r\n             .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n        }),\r\n        onSubmit: values => {\r\n            //setUser(values)\r\n            updatePasswordUserApi(values)\r\n          //alert(JSON.stringify(values, null, 2));\r\n        },\r\n      });\r\n\r\n  useEffect(() => {\r\n    // currentPage !== page && setPage(currentPage)\r\n  }, [])\r\n\r\n  return (\r\n      \r\n    <CRow>\r\n      <CCol xl={5}>\r\n        <CCard>\r\n          <CCardHeader>\r\n          Update Password\r\n          </CCardHeader>\r\n          <CCardBody>\r\n          <form onSubmit={formik.handleSubmit}>\r\n          <CRow>\r\n                <CCol xs=\"12\">\r\n                  <CFormGroup>\r\n                    <CLabel htmlFor=\"name\">New Password</CLabel>\r\n                    <CInput \r\n                    id=\"password\"\r\n                    type=\"password\" \r\n                    placeholder=\"Enter your new password\" \r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.name}\r\n                     />\r\n                  </CFormGroup>\r\n                  {formik.touched.password && formik.errors.password ? (\r\n         <><div style={Styles.errorColor}>{formik.errors.password}</div><br /></>\r\n       ) : null}\r\n                </CCol>\r\n              </CRow>\r\n              <CRow>\r\n                <CCol xs=\"12\">\r\n                  <CFormGroup>\r\n                    <CLabel htmlFor=\"ccnumber\">Confirm New Password</CLabel>\r\n                    <CInput id=\"passwordConfirmation\"\r\n                    type=\"password\" \r\n                      placeholder=\"Confirm password here..\" \r\n                      placeholder=\"Enter your name\" \r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.passwordConfirmation}\r\n                      \r\n                       />\r\n                  </CFormGroup>\r\n                  {formik.touched.passwordConfirmation && formik.errors.passwordConfirmation ? (\r\n         <div style={Styles.errorColor}>{formik.errors.passwordConfirmation}<br />\r\n         <br /></div>\r\n         \r\n       ) : null}\r\n                </CCol>\r\n              </CRow>\r\n\r\n              \r\n\r\n              \r\n              <CRow className=\"text-center\">\r\n              <CCol xs=\"12\">\r\n              {apiAction ? \r\n                    <button className=\"btn btn-primary px-4 w-100\"   disabled={apiAction}>\r\n                      <span\r\n                        className=\"spinner-grow spinner-grow-sm\"\r\n                        role=\"status\"\r\n                        aria-hidden=\"true\"\r\n                      ></span>\r\n                      &nbsp;Loading...\r\n                    </button> : \r\n                    <button className=\"btn btn-primary px-4 w-100\"  disabled={apiAction}>\r\n                    \r\n                      Update Password\r\n                    </button>}\r\n                  <div style={{color:\"red\"}} className=\"mt-2\">\r\n                  {errors.length ? <h3>Submission contains errors</h3>:\"\"}\r\n                      {errors.length ?errors.map( (error,i)=><p key={i} className=\"text-left\">{error}</p>):\"\"}\r\n                      </div>\r\n                  </CCol>\r\n              </CRow>\r\n         </form>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n\r\n\r\n      \r\n      <LoginModal context={UserProvider.Context}/>\r\n      \r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default DashboardUserSetting\r\n"]},"metadata":{},"sourceType":"module"}