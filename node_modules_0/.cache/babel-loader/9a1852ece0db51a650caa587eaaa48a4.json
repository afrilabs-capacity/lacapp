{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\react\\\\lac\\\\src\\\\inputs\\\\title-input.js\";\n\nimport React, { useContext } from 'react';\nimport { CInputGroup, CInputGroupPrepend, CInputGroupText, CInput } from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport ArticleProvider from \"../context/ArticleContext\";\n\nvar TitleInput = function TitleInput(_ref) {\n  var actionType = _ref.actionType;\n\n  var _useContext = useContext(ArticleProvider.Context),\n      editMode = _useContext.editMode,\n      article = _useContext.article,\n      updateArticle = _useContext.updateArticle;\n\n  var key = \"xxx\";\n\n  var setUpdateModeOrNot = function setUpdateModeOrNot() {\n    if (actionType == \"en\" && editMode === \"update\" && !article.title_en == \"\") {\n      key = Math.random();\n      console.log(\"title key\", key);\n      return article.title_en;\n    }\n\n    if (actionType == \"fr\" && editMode === \"update\" && !article.title_fr == \"\") {\n      key = Math.random();\n      console.log(\"title key\", key);\n      return article.title_fr;\n    }\n\n    return \"\";\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(CInputGroup, {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CInputGroupPrepend, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(CInputGroupText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(CIcon, {\n    name: \"cil-user\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }\n  }))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    key: key,\n    class: \"form-control\",\n    placeholder: \"Title here..\",\n    defaultValue: setUpdateModeOrNot(),\n    onChange: function onChange(e) {\n      actionType == \"en\" ? updateArticle(\"title_en\", e.target.value) : updateArticle(\"title_fr\", e.target.value); //console.log(\"article\",article)\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 10\n    }\n  })));\n};\n\nexport default TitleInput;","map":{"version":3,"sources":["C:/react/lac/src/inputs/title-input.js"],"names":["React","useContext","CInputGroup","CInputGroupPrepend","CInputGroupText","CInput","CIcon","ArticleProvider","TitleInput","actionType","Context","editMode","article","updateArticle","key","setUpdateModeOrNot","title_en","Math","random","console","log","title_fr","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;AACA,SACIC,WADJ,EAEIC,kBAFJ,EAGIC,eAHJ,EAIIC,MAJJ,QAKS,eALT;AAME,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;;AAEF,IAAMC,UAAU,GAAE,SAAZA,UAAY,OAAgB;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAAA,oBACSR,UAAU,CAACM,eAAe,CAACG,OAAjB,CADnB;AAAA,MACvBC,QADuB,eACvBA,QADuB;AAAA,MACdC,OADc,eACdA,OADc;AAAA,MACNC,aADM,eACNA,aADM;;AAG9B,MAAIC,GAAG,GAAC,KAAR;;AAEA,MAAMC,kBAAkB,GAAC,SAAnBA,kBAAmB,GAAI;AAE3B,QAAGN,UAAU,IAAE,IAAZ,IAAoBE,QAAQ,KAAG,QAA/B,IAA2C,CAACC,OAAO,CAACI,QAAT,IAAmB,EAAjE,EAAoE;AAClEF,MAAAA,GAAG,GAACG,IAAI,CAACC,MAAL,EAAJ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBN,GAAxB;AACA,aAAQF,OAAO,CAACI,QAAhB;AAED;;AAGD,QAAGP,UAAU,IAAE,IAAZ,IAAoBE,QAAQ,KAAG,QAA/B,IAA2C,CAACC,OAAO,CAACS,QAAT,IAAmB,EAAjE,EAAoE;AAClEP,MAAAA,GAAG,GAACG,IAAI,CAACC,MAAL,EAAJ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBN,GAAxB;AACA,aAAQF,OAAO,CAACS,QAAhB;AAED;;AAED,WAAO,EAAP;AAGD,GApBD;;AAsBA,sBAAO;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACP,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAE,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADH,eAYK;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,GAAG,EAAEP,GAAzB;AAA8B,IAAA,KAAK,EAAC,cAApC;AAAmD,IAAA,WAAW,EAAC,cAA/D;AAA+E,IAAA,YAAY,EAAEC,kBAAkB,EAA/G;AAEF,IAAA,QAAQ,EAAE,kBAACO,CAAD,EAAK;AACdb,MAAAA,UAAU,IAAE,IAAZ,GAAmBI,aAAa,CAAC,UAAD,EAAaS,CAAC,CAACC,MAAF,CAASC,KAAtB,CAAhC,GAA+DX,aAAa,CAAC,UAAD,EAAaS,CAAC,CAACC,MAAF,CAASC,KAAtB,CAA5E,CADc,CAEb;AACC,KALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZL,CADO,CAAP;AA0BH,CArDD;;AAuDA,eAAehB,UAAf","sourcesContent":["import React,{useContext} from 'react'\r\nimport {\r\n    CInputGroup,\r\n    CInputGroupPrepend,\r\n    CInputGroupText,\r\n    CInput,\r\n  } from '@coreui/react'\r\n  import CIcon from '@coreui/icons-react'\r\n  import ArticleProvider from \"../context/ArticleContext\"\r\n\r\nconst TitleInput =({actionType})=>{\r\n    const {editMode,article,updateArticle}=useContext(ArticleProvider.Context)\r\n      \r\n    let key=\"xxx\"\r\n\r\n    const setUpdateModeOrNot=()=>{\r\n\r\n      if(actionType==\"en\" && editMode===\"update\" && !article.title_en==\"\"){\r\n        key=Math.random()\r\n        console.log(\"title key\",key)\r\n        return  article.title_en\r\n\r\n      }\r\n\r\n\r\n      if(actionType==\"fr\" && editMode===\"update\" && !article.title_fr==\"\"){\r\n        key=Math.random()\r\n        console.log(\"title key\",key)\r\n        return  article.title_fr\r\n\r\n      }\r\n\r\n      return \"\"\r\n\r\n\r\n    }\r\n\r\n    return <div className=\"mb-3\">\r\n    <CInputGroup className={\"\"}>\r\n       <CInputGroupPrepend>\r\n         <CInputGroupText>\r\n           <CIcon name=\"cil-user\" />\r\n         </CInputGroupText>\r\n       </CInputGroupPrepend>\r\n\r\n       {/* <CInput type=\"text\" key={key}  placeholder=\"Title here..\"  defaultValue={setUpdateModeOrNot()} \r\n       onChange={(e)=>{\r\n        actionType==\"en\" ? updateArticle(\"title_en\", e.target.value):  updateArticle(\"title_fr\", e.target.value)\r\n         //console.log(\"article\",article)\r\n         }} />   */}\r\n         <input  type=\"text\" key={key} class=\"form-control\" placeholder=\"Title here..\"  defaultValue={setUpdateModeOrNot()} \r\n       \r\n       onChange={(e)=>{\r\n        actionType==\"en\" ? updateArticle(\"title_en\", e.target.value):  updateArticle(\"title_fr\", e.target.value)\r\n         //console.log(\"article\",article)\r\n         }} />\r\n\r\n\r\n     </CInputGroup>\r\n    \r\n     {/* <ErrorMessage name={name}  component={TextError} /> */}\r\n     </div>\r\n\r\n}\r\n\r\nexport default TitleInput"]},"metadata":{},"sourceType":"module"}