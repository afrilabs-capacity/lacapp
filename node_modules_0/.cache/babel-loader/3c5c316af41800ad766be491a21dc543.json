{"ast":null,"code":"import _slicedToArray from \"C:\\\\react\\\\lac\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\react\\\\lac\\\\src\\\\context\\\\PcategoryContext.js\";\n\nimport React, { createContext, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nvar PgCatContext = createContext({});\n\nvar PgCatProvider = function PgCatProvider(props) {\n  // Initial values are obtained from the props\n  var initialCategories = props.categories,\n      children = props.children; // Use State to keep the values\n\n  var _useState = useState(initialUsers),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1]; //const [selectedUser, setSelectedUser] = useState(initialSelectedUsers);\n\n\n  var addNewUser = function addNewUser(userName) {\n    var newUser = {\n      id: new Date().getTime().toString(),\n      name: userName\n    };\n    setUsers(users.concat([newUser]));\n  }; // Make the context object:\n\n\n  var usersContext = {\n    users: users,\n    setUsers: setUsers,\n    selectedUser: selectedUser,\n    setSelectedUser: setSelectedUser,\n    addNewUser: addNewUser\n  }; // pass the value in provider and return\n\n  return /*#__PURE__*/React.createElement(PgCatContext.Provider, {\n    value: usersContext,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }\n  });\n};\n\nexport { PgCatProvider, PgCatContext };\nPgCatProvider.propTypes = {\n  ucategories: PropTypes.array,\n  selectedUser: PropTypes.object\n};\nPgCatProvider.defaultProps = {\n  categories: [\"Previous\", \"ongoing\", \"upcoming\"],\n  selectedUser: {}\n};","map":{"version":3,"sources":["C:/react/lac/src/context/PcategoryContext.js"],"names":["React","createContext","useState","PropTypes","PgCatContext","PgCatProvider","props","initialCategories","categories","children","initialUsers","users","setUsers","addNewUser","userName","newUser","id","Date","getTime","toString","name","concat","usersContext","selectedUser","setSelectedUser","propTypes","ucategories","array","object","defaultProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,YAAY,GAAGH,aAAa,CAAC,EAAD,CAAlC;;AAEC,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAC9B;AAD8B,MAGhBC,iBAHgB,GAM1BD,KAN0B,CAG5BE,UAH4B;AAAA,MAK5BC,QAL4B,GAM1BH,KAN0B,CAK5BG,QAL4B,EAQ9B;;AAR8B,kBASJP,QAAQ,CAACQ,YAAD,CATJ;AAAA;AAAA,MASvBC,KATuB;AAAA,MAShBC,QATgB,kBAU9B;;;AAEA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,QAAQ,EAAI;AAC7B,QAAMC,OAAO,GAAG;AAAEC,MAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,OAAX,GAAqBC,QAArB,EAAN;AAAuCC,MAAAA,IAAI,EAAEN;AAA7C,KAAhB;AACAF,IAAAA,QAAQ,CAACD,KAAK,CAACU,MAAN,CAAa,CAACN,OAAD,CAAb,CAAD,CAAR;AACD,GAHD,CAZ8B,CAiB9B;;;AACA,MAAMO,YAAY,GAAG;AACnBX,IAAAA,KAAK,EAALA,KADmB;AAEnBC,IAAAA,QAAQ,EAARA,QAFmB;AAGnBW,IAAAA,YAAY,EAAZA,YAHmB;AAInBC,IAAAA,eAAe,EAAfA,eAJmB;AAKnBX,IAAAA,UAAU,EAAVA;AALmB,GAArB,CAlB8B,CA0B9B;;AACA,sBAAO,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAES,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CA5BA;;AA8BD,SACIjB,aADJ,EAEID,YAFJ;AAKAC,aAAa,CAACoB,SAAd,GAA0B;AACxBC,EAAAA,WAAW,EAAEvB,SAAS,CAACwB,KADC;AAExBJ,EAAAA,YAAY,EAAEpB,SAAS,CAACyB;AAFA,CAA1B;AAKAvB,aAAa,CAACwB,YAAd,GAA6B;AAC3BrB,EAAAA,UAAU,EAAE,CAAC,UAAD,EAAY,SAAZ,EAAsB,UAAtB,CADe;AAE3Be,EAAAA,YAAY,EAAE;AAFa,CAA7B","sourcesContent":["import React, { createContext, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PgCatContext = createContext({});\r\n\r\n const PgCatProvider = props => {\r\n  // Initial values are obtained from the props\r\n  const {\r\n    categories: initialCategories,\r\n    //selectedUser: initialSelectedUsers,\r\n    children\r\n  } = props;\r\n\r\n  // Use State to keep the values\r\n  const [users, setUsers] = useState(initialUsers);\r\n  //const [selectedUser, setSelectedUser] = useState(initialSelectedUsers);\r\n\r\n  const addNewUser = userName => {\r\n    const newUser = { id: new Date().getTime().toString(), name: userName };\r\n    setUsers(users.concat([newUser]));\r\n  };\r\n\r\n  // Make the context object:\r\n  const usersContext = {\r\n    users,\r\n    setUsers,\r\n    selectedUser,\r\n    setSelectedUser,\r\n    addNewUser\r\n  };\r\n\r\n  // pass the value in provider and return\r\n  return <PgCatContext.Provider value={usersContext} />;\r\n};\r\n\r\nexport {\r\n    PgCatProvider,\r\n    PgCatContext\r\n};\r\n\r\nPgCatProvider.propTypes = {\r\n  ucategories: PropTypes.array,\r\n  selectedUser: PropTypes.object\r\n};\r\n\r\nPgCatProvider.defaultProps = {\r\n  categories: [\"Previous\",\"ongoing\",\"upcoming\"],\r\n  selectedUser: {}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}