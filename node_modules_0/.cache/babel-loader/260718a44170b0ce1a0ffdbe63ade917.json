{"ast":null,"code":"import _defineProperty from \"C:\\\\react\\\\lac\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\react\\\\lac\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\react\\\\lac\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\react\\\\lac\\\\src\\\\context\\\\ArticleContext.js\";\n\nimport React, { createContext, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nvar Context = createContext({});\nvar initialArticle = {\n  titleEn: \"\",\n  bodyEn: null,\n  featuredEn: null,\n  titleFr: \"\",\n  bodyFr: null,\n  featuredFr: null\n};\n\nvar Provider = function Provider(props) {\n  // Initial values are obtained from the props\n  var initialArticle = props.article,\n      children = props.children; // Use State to keep the values\n\n  var _useState = useState(initialArticle),\n      _useState2 = _slicedToArray(_useState, 2),\n      article = _useState2[0],\n      setArticle = _useState2[1]; //   const [titleEn, setTitleEn] = useState(\"\");\n  //   const [bodyEn, setBodyEn] = useState(null);\n  //   const [featuredEn, setFeaturedEn] = useState(null);\n  //   const [titleFr, setTitleFr] = useState(\"\");\n  //   const [bodyFr, setBodyFr] = useState(null);\n  //   const [featuredFr, setFeaturedFr] = useState(null);\n\n\n  var updateArticle = function updateArticle(dataKey, data) {\n    switch (dataKey) {\n      case 'titleEn':\n        console.log(\"We in data key\", dataKey);\n        setArticle(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState.article[dataKey]), {}, _defineProperty({}, dataKey, data));\n        });\n\n      default:\n        return \"action mismatch\";\n    }\n  }; //const [selectedUser, setSelectedUser] = useState(initialSelectedUsers);\n  // Make the context object:\n\n\n  var articleContext = {\n    article: article,\n    updateArticle: updateArticle\n  }; // pass the value in provider and return\n\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: articleContext,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 10\n    }\n  }, children);\n};\n\nvar ArticleProvider = {\n  Provider: Provider,\n  Context: Context\n};\nProvider.propTypes = {\n  article: PropTypes.object // article:PropTypes.shape(\n  // {\n  // titleEn: PropTypes.string,\n  // bodyEn: PropTypes.string,\n  // featuredEn:PropTypes.string,\n  // titleFr: PropTypes.string,\n  // bodyFr: PropTypes.string,\n  // featuredFr:PropTypes.string\n  // }\n  // )\n\n};\nProvider.defaultProps = {\n  article: {\n    titleEn: \"\",\n    bodyEn: null,\n    featuredEn: null,\n    titleFr: \"\",\n    bodyFr: null,\n    featuredFr: null\n  } //   titleEn: \"\",\n  //   bodyEn:  \"\",\n  //   featuredEn: \"\",\n  //   titleFr: \"\",\n  //   bodyFr: \"\",\n  //   featuredFr:\"\",\n  //   //selectedUser: {}\n\n};\nexport default ArticleProvider;","map":{"version":3,"sources":["C:/react/lac/src/context/ArticleContext.js"],"names":["React","createContext","useState","PropTypes","Context","initialArticle","titleEn","bodyEn","featuredEn","titleFr","bodyFr","featuredFr","Provider","props","article","children","setArticle","updateArticle","dataKey","data","console","log","prevState","articleContext","ArticleProvider","propTypes","object","defaultProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,OAAO,GAAGH,aAAa,CAAC,EAAD,CAA7B;AAEA,IAAMI,cAAc,GAAC;AACjBC,EAAAA,OAAO,EAAE,EADQ;AAEjBC,EAAAA,MAAM,EAAE,IAFS;AAGjBC,EAAAA,UAAU,EAAC,IAHM;AAIjBC,EAAAA,OAAO,EAAE,EAJQ;AAKjBC,EAAAA,MAAM,EAAE,IALS;AAMjBC,EAAAA,UAAU,EAAC;AANM,CAArB;;AAUC,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AACzB;AADyB,MAGfR,cAHe,GAKrBQ,KALqB,CAGvBC,OAHuB;AAAA,MAIvBC,QAJuB,GAKrBF,KALqB,CAIvBE,QAJuB,EAOzB;;AAPyB,kBAWKb,QAAQ,CAACG,cAAD,CAXb;AAAA;AAAA,MAWlBS,OAXkB;AAAA,MAWTE,UAXS,kBAY3B;AACA;AACA;AAEA;AACA;AACA;;;AAGE,MAAMC,aAAa,GAAC,SAAdA,aAAc,CAACC,OAAD,EAASC,IAAT,EAAgB;AAEhC,YAAOD,OAAP;AACQ,WAAK,SAAL;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BH,OAA7B;AACAF,QAAAA,UAAU,CAAC,UAAAM,SAAS;AAAA,iDAAQA,SAAS,CAACR,OAAV,CAAkBI,OAAlB,CAAR,2BAAoCA,OAApC,EAA6CC,IAA7C;AAAA,SAAV,CAAV;;AACD;AACD,eAAO,iBAAP;AALN;AAUH,GAZD,CArByB,CAsC3B;AAEE;;;AACA,MAAMI,cAAc,GAAG;AACrBT,IAAAA,OAAO,EAAPA,OADqB;AAErBG,IAAAA,aAAa,EAAbA;AAFqB,GAAvB,CAzCyB,CA8CzB;;AACA,sBAAO,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAEM,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CR,QAA1C,CAAP;AACD,CAhDA;;AAkDD,IAAMS,eAAe,GAAE;AACnBZ,EAAAA,QAAQ,EAARA,QADmB;AAEnBR,EAAAA,OAAO,EAAPA;AAFmB,CAAvB;AAKAQ,QAAQ,CAACa,SAAT,GAAqB;AACjBX,EAAAA,OAAO,EAACX,SAAS,CAACuB,MADD,CAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAXiB,CAArB;AAiBAd,QAAQ,CAACe,YAAT,GAAwB;AACtBb,EAAAA,OAAO,EAAE;AACPR,IAAAA,OAAO,EAAE,EADF;AAEPC,IAAAA,MAAM,EAAE,IAFD;AAGPC,IAAAA,UAAU,EAAC,IAHJ;AAIPC,IAAAA,OAAO,EAAE,EAJF;AAKPC,IAAAA,MAAM,EAAE,IALD;AAMPC,IAAAA,UAAU,EAAC;AANJ,GADa,CASxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAfwB,CAAxB;AAmBA,eAAea,eAAf","sourcesContent":["import React, { createContext, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Context = createContext({});\r\n\r\nconst initialArticle={\r\n    titleEn: \"\",\r\n    bodyEn: null,\r\n    featuredEn:null,\r\n    titleFr: \"\",\r\n    bodyFr: null,\r\n    featuredFr:null\r\n\r\n}\r\n\r\n const Provider = props => {\r\n  // Initial values are obtained from the props\r\n  const {\r\n    article:initialArticle,\r\n    children\r\n  } = props;\r\n\r\n  // Use State to keep the values\r\n\r\n\r\n\r\n  const [article, setArticle] = useState(initialArticle);\r\n//   const [titleEn, setTitleEn] = useState(\"\");\r\n//   const [bodyEn, setBodyEn] = useState(null);\r\n//   const [featuredEn, setFeaturedEn] = useState(null);\r\n\r\n//   const [titleFr, setTitleFr] = useState(\"\");\r\n//   const [bodyFr, setBodyFr] = useState(null);\r\n//   const [featuredFr, setFeaturedFr] = useState(null);\r\n\r\n\r\n  const updateArticle=(dataKey,data)=>{\r\n\r\n      switch(dataKey){\r\n              case 'titleEn':\r\n              console.log(\"We in data key\",dataKey)\r\n              setArticle(prevState=> ({...prevState.article[dataKey],[dataKey]:data}))\r\n             default:\r\n            return \"action mismatch\"\r\n\r\n\r\n      }\r\n   \r\n  }\r\n\r\n\r\n\r\n\r\n//const [selectedUser, setSelectedUser] = useState(initialSelectedUsers);\r\n\r\n  // Make the context object:\r\n  const articleContext = {\r\n    article,\r\n    updateArticle,\r\n  };\r\n\r\n  // pass the value in provider and return\r\n  return <Context.Provider value={articleContext}>{children}</Context.Provider>;\r\n};\r\n\r\nconst ArticleProvider= {\r\n    Provider,\r\n    Context\r\n};\r\n\r\nProvider.propTypes = {\r\n    article:PropTypes.object,\r\n    // article:PropTypes.shape(\r\n    // {\r\n    // titleEn: PropTypes.string,\r\n    // bodyEn: PropTypes.string,\r\n    // featuredEn:PropTypes.string,\r\n    // titleFr: PropTypes.string,\r\n    // bodyFr: PropTypes.string,\r\n    // featuredFr:PropTypes.string\r\n    // }\r\n    // )\r\n    \r\n  \r\n   \r\n};\r\n\r\nProvider.defaultProps = {\r\n  article: {\r\n    titleEn: \"\",\r\n    bodyEn: null,\r\n    featuredEn:null,\r\n    titleFr: \"\",\r\n    bodyFr: null,\r\n    featuredFr:null\r\n  },\r\n//   titleEn: \"\",\r\n//   bodyEn:  \"\",\r\n//   featuredEn: \"\",\r\n//   titleFr: \"\",\r\n//   bodyFr: \"\",\r\n//   featuredFr:\"\",\r\n//   //selectedUser: {}\r\n};\r\n\r\n\r\nexport default ArticleProvider"]},"metadata":{},"sourceType":"module"}