{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\react\\\\lac\\\\src\\\\editor\\\\RichText.js\";\n\nimport React, { useContext } from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\nimport ArticleProvider from \"../context/ArticleContext\";\n\nvar RichText = function RichText(_ref) {\n  var actionType = _ref.actionType;\n\n  var _useContext = useContext(ArticleProvider.Context),\n      article = _useContext.article,\n      updateArticle = _useContext.updateArticle;\n\n  var setUpdateModeOrNot = function setUpdateModeOrNot() {\n    if (actionType == \"en\" && editMode == \"update\" && !article.title_en == \"\") {\n      return article.title_en;\n    }\n\n    if (actionType == \"fr\" && editMode == \"update\" && !article.title_fr == \"\") {\n      return article.title_fr;\n    }\n\n    return \"\";\n  };\n\n  var handleEditorChange = function handleEditorChange(content) {\n    // console.log(\n    //   'Content was updated:',\n    //   content\n    // );\n    // console.log(\n    //   'Action Type:',\n    //   actionType\n    // );\n    if (actionType == \"en\") {\n      updateArticle(\"body_en\", content);\n    } else {\n      updateArticle(\"body_fr\", content);\n    }\n\n    console.log(\"articles\", article);\n  };\n\n  return /*#__PURE__*/React.createElement(Editor, {\n    apiKey: \"mymryl9rtn2npjz2vhp3yovdx2of4phahbqil1sq29upca83\",\n    initialValue: \"<p>Wow ! ... It Works !!!</p>\",\n    init: {\n      height: 500,\n      menubar: false,\n      plugins: ['advlist autolink lists link image', 'charmap print preview anchor help', 'searchreplace visualblocks code', 'insertdatetime media table paste wordcount'],\n      toolbar: 'undo redo | formatselect | bold italic | \\\r\n            alignleft aligncenter alignright | \\\r\n            bullist numlist outdent indent | help'\n    },\n    onEditorChange: function onEditorChange(e) {\n      return handleEditorChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  });\n};\n\nexport default RichText;","map":{"version":3,"sources":["C:/react/lac/src/editor/RichText.js"],"names":["React","useContext","Editor","ArticleProvider","RichText","actionType","Context","article","updateArticle","setUpdateModeOrNot","editMode","title_en","title_fr","handleEditorChange","content","console","log","height","menubar","plugins","toolbar","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;;AAEA,IAAMC,QAAQ,GAAE,SAAVA,QAAU,OAAiB;AAAA,MAAfC,UAAe,QAAfA,UAAe;;AAAA,oBACDJ,UAAU,CAACE,eAAe,CAACG,OAAjB,CADT;AAAA,MACxBC,OADwB,eACxBA,OADwB;AAAA,MAChBC,aADgB,eAChBA,aADgB;;AAK/B,MAAMC,kBAAkB,GAAC,SAAnBA,kBAAmB,GAAI;AAE3B,QAAGJ,UAAU,IAAE,IAAZ,IAAoBK,QAAQ,IAAE,QAA9B,IAA0C,CAACH,OAAO,CAACI,QAAT,IAAmB,EAAhE,EAAmE;AAEjE,aAAQJ,OAAO,CAACI,QAAhB;AAED;;AAGD,QAAGN,UAAU,IAAE,IAAZ,IAAoBK,QAAQ,IAAE,QAA9B,IAA0C,CAACH,OAAO,CAACK,QAAT,IAAmB,EAAhE,EAAmE;AAEjE,aAAQL,OAAO,CAACK,QAAhB;AAED;;AAED,WAAO,EAAP;AAGD,GAlBD;;AAqBA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,OAAD,EAAa;AACtC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,QAAGT,UAAU,IAAE,IAAf,EAAqB;AAACG,MAAAA,aAAa,CAAC,SAAD,EAAYM,OAAZ,CAAb;AAAkC,KAAxD,MAA6D;AAACN,MAAAA,aAAa,CAAC,SAAD,EAAYM,OAAZ,CAAb;AAAmC;;AACjGC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBT,OAAvB;AACD,GAbD;;AAgBE,sBACE,oBAAC,MAAD;AACA,IAAA,MAAM,EAAC,kDADP;AAEE,IAAA,YAAY,EAAC,+BAFf;AAGE,IAAA,IAAI,EAAE;AACJU,MAAAA,MAAM,EAAE,GADJ;AAEJC,MAAAA,OAAO,EAAE,KAFL;AAGJC,MAAAA,OAAO,EAAE,CACP,mCADO,EAEP,mCAFO,EAGP,iCAHO,EAIP,4CAJO,CAHL;AASJC,MAAAA,OAAO,EACL;;;AAVE,KAHR;AAkBE,IAAA,cAAc,EAAE,wBAACC,CAAD;AAAA,aAAKR,kBAAkB,CAACQ,CAAD,CAAvB;AAAA,KAlBlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAyBH,CAnED;;AAqEA,eAAejB,QAAf","sourcesContent":["import React,{useContext} from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport ArticleProvider from \"../context/ArticleContext\"\r\n\r\nconst RichText =({actionType})=> {\r\n  const {article,updateArticle}=useContext(ArticleProvider.Context)\r\n\r\n\r\n\r\n  const setUpdateModeOrNot=()=>{\r\n\r\n    if(actionType==\"en\" && editMode==\"update\" && !article.title_en==\"\"){\r\n      \r\n      return  article.title_en\r\n\r\n    }\r\n\r\n\r\n    if(actionType==\"fr\" && editMode==\"update\" && !article.title_fr==\"\"){\r\n      \r\n      return  article.title_fr\r\n\r\n    }\r\n\r\n    return \"\"\r\n\r\n\r\n  }\r\n\r\n\r\n  const handleEditorChange = (content) => {\r\n    // console.log(\r\n    //   'Content was updated:',\r\n    //   content\r\n    // );\r\n\r\n    // console.log(\r\n    //   'Action Type:',\r\n    //   actionType\r\n    // );\r\n\r\n    if(actionType==\"en\") {updateArticle(\"body_en\", content)}else {updateArticle(\"body_fr\", content) }\r\n    console.log(\"articles\",article)\r\n  }\r\n\r\n  \r\n    return (\r\n      <Editor\r\n      apiKey=\"mymryl9rtn2npjz2vhp3yovdx2of4phahbqil1sq29upca83\"\r\n        initialValue=\"<p>Wow ! ... It Works !!!</p>\"\r\n        init={{\r\n          height: 500,\r\n          menubar: false,\r\n          plugins: [\r\n            'advlist autolink lists link image',\r\n            'charmap print preview anchor help',\r\n            'searchreplace visualblocks code',\r\n            'insertdatetime media table paste wordcount'\r\n          ],\r\n          toolbar:\r\n            'undo redo | formatselect | bold italic | \\\r\n            alignleft aligncenter alignright | \\\r\n            bullist numlist outdent indent | help'\r\n        }}\r\n\r\n        onEditorChange={(e)=>handleEditorChange(e)}\r\n\r\n        \r\n      />\r\n    );\r\n\r\n}\r\n\r\nexport default RichText;"]},"metadata":{},"sourceType":"module"}