{"ast":null,"code":"import React from'react';import{useSelector,useDispatch}from'react-redux';import{CCreateElement,CSidebar,CSidebarBrand,CSidebarNav,CSidebarNavDivider,CSidebarNavTitle,CSidebarMinimizer,CSidebarNavDropdown,CSidebarNavItem}from'@coreui/react';import CIcon from'@coreui/icons-react';// sidebar nav config\nimport navigation from'./_nav';import customNavigation from'./_customNav';var TheSidebar=function TheSidebar(){var dispatch=useDispatch();var show=useSelector(function(state){return state.sidebarShow;});var styles={noBorder:{border:\"none\"},noBorderTop:{borderBTop:\"none\"},navStyle:{boxShadow:\" 5px 0 9px -2px rgba(0,0,0,0.2)\",transition:\"0.3s\",// border:\"none\",\nbackgroundColor:\"white\"}};return/*#__PURE__*/React.createElement(CSidebar,{show:show,onShowChange:function onShowChange(val){return dispatch({type:'set',sidebarShow:val});}},/*#__PURE__*/React.createElement(CSidebarNav,{className:\"shadow bg-white\"},/*#__PURE__*/React.createElement(CSidebarBrand,{className:\"d-md-down-none\",style:{backgroundColor:\"white\",padding:\"1em\"},to:\"/\"},/*#__PURE__*/React.createElement(\"img\",{src:\"https://drive.google.com/uc?export=view&id=17pIK2duMqUQkvarbKCiQfudDT1DQhkVI\",width:\"150px\"})),/*#__PURE__*/React.createElement(CCreateElement,{items:customNavigation,components:{CSidebarNavDivider:CSidebarNavDivider,CSidebarNavDropdown:CSidebarNavDropdown,CSidebarNavItem:CSidebarNavItem,CSidebarNavTitle:CSidebarNavTitle}})));};export default React.memo(TheSidebar);","map":{"version":3,"sources":["C:/react/lac/src/containers/TheSidebar.js"],"names":["React","useSelector","useDispatch","CCreateElement","CSidebar","CSidebarBrand","CSidebarNav","CSidebarNavDivider","CSidebarNavTitle","CSidebarMinimizer","CSidebarNavDropdown","CSidebarNavItem","CIcon","navigation","customNavigation","TheSidebar","dispatch","show","state","sidebarShow","styles","noBorder","border","noBorderTop","borderBTop","navStyle","boxShadow","transition","backgroundColor","val","type","padding","memo"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OACEC,cADF,CAEEC,QAFF,CAGEC,aAHF,CAIEC,WAJF,CAKEC,kBALF,CAMEC,gBANF,CAOEC,iBAPF,CAQEC,mBARF,CASEC,eATF,KAUO,eAVP,CAYA,MAAOC,CAAAA,KAAP,KAAkB,qBAAlB,CAEA;AACA,MAAOC,CAAAA,UAAP,KAAuB,QAAvB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,cAA7B,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,GAAMC,CAAAA,QAAQ,CAAGd,WAAW,EAA5B,CACA,GAAMe,CAAAA,IAAI,CAAGhB,WAAW,CAAC,SAAAiB,KAAK,QAAIA,CAAAA,KAAK,CAACC,WAAV,EAAN,CAAxB,CAEA,GAAMC,CAAAA,MAAM,CAAC,CACXC,QAAQ,CAAC,CACLC,MAAM,CAAC,MADF,CADE,CAIXC,WAAW,CAAC,CACRC,UAAU,CAAC,MADH,CAJD,CAOXC,QAAQ,CAAC,CACLC,SAAS,CAAE,iCADN,CAELC,UAAU,CAAE,MAFP,CAGL;AACAC,eAAe,CAAC,OAJX,CAPE,CAAb,CAgBA,mBACE,oBAAC,QAAD,EACE,IAAI,CAAEX,IADR,CAEE,YAAY,CAAE,sBAACY,GAAD,QAASb,CAAAA,QAAQ,CAAC,CAACc,IAAI,CAAE,KAAP,CAAcX,WAAW,CAAEU,GAA3B,CAAD,CAAjB,EAFhB,eAQE,oBAAC,WAAD,EAAa,SAAS,CAAC,iBAAvB,eACN,oBAAC,aAAD,EAAe,SAAS,CAAC,gBAAzB,CAA0C,KAAK,CAAE,CAACD,eAAe,CAAC,OAAjB,CAAyBG,OAAO,CAAC,KAAjC,CAAjD,CAA0F,EAAE,CAAC,GAA7F,eAWS,2BAAK,GAAG,CAAC,8EAAT,CAAwF,KAAK,CAAC,OAA9F,EAXT,CADM,cAcE,oBAAC,cAAD,EACE,KAAK,CAAEjB,gBADT,CAEE,UAAU,CAAE,CACVP,kBAAkB,CAAlBA,kBADU,CAEVG,mBAAmB,CAAnBA,mBAFU,CAGVC,eAAe,CAAfA,eAHU,CAIVH,gBAAgB,CAAhBA,gBAJU,CAFd,EAdF,CARF,CADF,CAoCD,CAxDD,CA0DA,cAAeR,CAAAA,KAAK,CAACgC,IAAN,CAAWjB,UAAX,CAAf","sourcesContent":["import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CCreateElement,\n  CSidebar,\n  CSidebarBrand,\n  CSidebarNav,\n  CSidebarNavDivider,\n  CSidebarNavTitle,\n  CSidebarMinimizer,\n  CSidebarNavDropdown,\n  CSidebarNavItem,\n} from '@coreui/react'\n\nimport CIcon from '@coreui/icons-react'\n\n// sidebar nav config\nimport navigation from './_nav'\nimport customNavigation from './_customNav'\n\nconst TheSidebar = () => {\n  const dispatch = useDispatch()\n  const show = useSelector(state => state.sidebarShow)\n\n  const styles={\n    noBorder:{\n        border:\"none\"\n    },\n    noBorderTop:{\n        borderBTop:\"none\"\n    },\n    navStyle:{\n        boxShadow: \" 5px 0 9px -2px rgba(0,0,0,0.2)\",\n        transition: \"0.3s\",\n        // border:\"none\",\n        backgroundColor:\"white\",\n       \n    }\n}\n\n  return (\n    <CSidebar\n      show={show}\n      onShowChange={(val) => dispatch({type: 'set', sidebarShow: val })}\n      \n    >\n      \n\n\n      <CSidebarNav className=\"shadow bg-white\">\n<CSidebarBrand className=\"d-md-down-none\" style={{backgroundColor:\"white\",padding:\"1em\"}} to=\"/\">\n        {/* <CIcon\n          className=\"c-sidebar-brand-full\"\n          name=\"logo-negative\"\n          height={35}\n        />\n        <CIcon\n          className=\"c-sidebar-brand-minimized\"\n          name=\"sygnet\"\n          height={35}\n        /> */}\n        {<img src=\"https://drive.google.com/uc?export=view&id=17pIK2duMqUQkvarbKCiQfudDT1DQhkVI\" width=\"150px\"></img>}\n      </CSidebarBrand>\n        <CCreateElement\n          items={customNavigation}\n          components={{\n            CSidebarNavDivider,\n            CSidebarNavDropdown,\n            CSidebarNavItem,\n            CSidebarNavTitle\n          }}\n        />\n      </CSidebarNav>\n      {/* <CSidebarMinimizer className=\"c-d-md-down-none\"/> */}\n    </CSidebar>\n  )\n}\n\nexport default React.memo(TheSidebar)\n"]},"metadata":{},"sourceType":"module"}