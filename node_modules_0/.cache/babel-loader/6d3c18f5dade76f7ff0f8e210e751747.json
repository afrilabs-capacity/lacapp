{"ast":null,"code":"import _slicedToArray from \"C:\\\\react\\\\lac\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\react\\\\lac\\\\src\\\\Uploaders\\\\image-uploader.js\";\n\nimport React, { useState, useEffect } from 'react';\n\nvar ImageUpload = function ImageUpload(_ref) {\n  var postType = _ref.postType,\n      target = _ref.target;\n\n  //console.log(\"target\",target)\n  var triggerSelectInput = function triggerSelectInput(e, input) {\n    e.preventDefault();\n    input.click();\n  };\n\n  useEffect(function () {\n    var uploadBt = document.getElementById(target);\n    var uploadInputName = postType == \"en\" ? \"upload_input_en\" : \"upload_input_fr\";\n    var uploadInput = document.getElementById(uploadInputName);\n    uploadBt.addEventListener(\"click\", function (e) {\n      return triggerSelectInput(e, uploadInput);\n    });\n  }, [imagePreviewUrlEn, imagePreviewUrlEn]);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      imagePreviewUrlEn = _useState2[0],\n      setImagePreviewUrlEn = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      imagePreviewUrlFr = _useState4[0],\n      setImagePreviewUrlFr = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      image = _useState6[0],\n      setImage = _useState6[1];\n\n  console.log(\"French Banner\", imagePreviewUrlFr); //console.log(\"English Banner\",imagePreviewUrlEn)\n\n  var _onChange = function onChange(e) {\n    //console.log(e.target.value)\n    var files = e.target.files[0] || e.dataTransfer.files[0]; //alert(\"on change for loading files\")\n\n    if (!files) return; //this.createImage(files[0]);\n\n    var reader = new FileReader();\n\n    reader.onload = function (e) {\n      setImage(reader.result);\n      postType == \"en\" ? setImagePreviewUrlEn(reader.result) : setImagePreviewUrlFr(reader.result); //console.log(\"image\",e.target.result)\n    };\n\n    reader.readAsDataURL(files);\n  };\n\n  var onFormSubmit = function onFormSubmit(e) {//console.log(e.target.value)\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: function onSubmit() {\n      return onFormSubmit;\n    },\n    encType: \"multipart/form-data\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, postType == \"en\" ? /*#__PURE__*/React.createElement(\"input\", {\n    id: \"upload_input_en\",\n    type: \"file\",\n    hidden: true,\n    onChange: function onChange(e) {\n      return _onChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }) : \"\", /*#__PURE__*/React.createElement(\"img\", {\n    className: \"img-fluid\",\n    src: imagePreviewUrlEn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), postType == \"fr\" ? /*#__PURE__*/React.createElement(\"input\", {\n    id: \"upload_input_fr\",\n    type: \"file\",\n    hidden: true,\n    onChange: function onChange(e) {\n      return _onChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }) : \"\", /*#__PURE__*/React.createElement(\"img\", {\n    className: \"img-fluid\",\n    src: imagePreviewUrlFr,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default ImageUpload;","map":{"version":3,"sources":["C:/react/lac/src/Uploaders/image-uploader.js"],"names":["React","useState","useEffect","ImageUpload","postType","target","triggerSelectInput","e","input","preventDefault","click","uploadBt","document","getElementById","uploadInputName","uploadInput","addEventListener","imagePreviewUrlEn","setImagePreviewUrlEn","imagePreviewUrlFr","setImagePreviewUrlFr","image","setImage","console","log","onChange","files","dataTransfer","reader","FileReader","onload","result","readAsDataURL","onFormSubmit"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\r\n\r\n\r\n\r\n\r\nconst ImageUpload= ({postType,target})=>{\r\n\r\n    //console.log(\"target\",target)\r\n\r\n    const triggerSelectInput=(e,input)=>{\r\n        e.preventDefault()\r\n        input.click()\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const uploadBt=document.getElementById(target)\r\n        const uploadInputName=postType==\"en\" ? \"upload_input_en\" : \"upload_input_fr\"\r\n        const uploadInput=document.getElementById(uploadInputName)\r\n        uploadBt.addEventListener(\"click\",(e)=>triggerSelectInput(e,uploadInput))\r\n    },[imagePreviewUrlEn,imagePreviewUrlEn])\r\n\r\n    const [imagePreviewUrlEn,setImagePreviewUrlEn]=useState(null)\r\n    const [imagePreviewUrlFr,setImagePreviewUrlFr]=useState(null)\r\n    const [image,setImage]=useState(\"\")\r\n\r\n    console.log(\"French Banner\",imagePreviewUrlFr)\r\n    //console.log(\"English Banner\",imagePreviewUrlEn)\r\n\r\n  \r\n\r\n    const onChange=(e)=>{\r\n        //console.log(e.target.value)\r\n        let files = e.target.files[0] || e.dataTransfer.files[0];\r\n        //alert(\"on change for loading files\")\r\n        if (!files)\r\n        return;\r\n        //this.createImage(files[0]);\r\n        let reader = new FileReader();\r\n        reader.onload = (e) => {\r\n        setImage(reader.result)\r\n        postType==\"en\" ? setImagePreviewUrlEn(reader.result) : setImagePreviewUrlFr(reader.result)\r\n        //console.log(\"image\",e.target.result)\r\n        };\r\n        reader.readAsDataURL(files);\r\n    }\r\n\r\n    const onFormSubmit=(e)=>{\r\n        //console.log(e.target.value)\r\n    }\r\n\r\n    return (<form onSubmit={()=>onFormSubmit}  encType=\"multipart/form-data\" >\r\n       \r\n         {postType==\"en\"?\r\n        <input id=\"upload_input_en\" type=\"file\" hidden={true} onChange={(e)=>onChange(e)} />:\"\" }\r\n        <img className=\"img-fluid\" src={imagePreviewUrlEn} />\r\n\r\n        {postType==\"fr\"?\r\n        <input id=\"upload_input_fr\" type=\"file\" hidden={true} onChange={(e)=>onChange(e)} />:\"\" }\r\n        <img className=\"img-fluid\" src={imagePreviewUrlFr} />\r\n\r\n\r\n\r\n        </form>)\r\n     \r\n    \r\n}\r\n\r\nexport default ImageUpload"]},"metadata":{},"sourceType":"module"}