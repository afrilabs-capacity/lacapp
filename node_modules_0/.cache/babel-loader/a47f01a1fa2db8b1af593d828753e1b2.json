{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\react\\\\lac\\\\src\\\\alerts\\\\toaster.js\";\n\nimport React, { useContext } from \"react\";\nimport { CToaster, CToast, CToastHeader, CToastBody } from '@coreui/react';\nimport ArticleProvider from \"../context/ArticleContext\";\n\nvar ToastMe = function ToastMe(_ref) {\n  var showToast = _ref.showToast;\n\n  var _useContext = useContext(ArticleProvider.Context),\n      toast = _useContext.toast,\n      errors = _useContext.errors,\n      setToast = _useContext.setToast;\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CToaster, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CToast, {\n    style: {\n      background: \"pink\",\n      color: \"wine\"\n    },\n    show: showToast,\n    autohide: \"3000\",\n    fade: true,\n    className: \"success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CToastHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, \"Toast title\"), /*#__PURE__*/React.createElement(CToastBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }, errors.length ? errors.map(function (error) {\n    setToast(true);\n    return /*#__PURE__*/React.createElement(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 36\n      }\n    }, error);\n  }) : \"\" //errors.length? setToast(true):\"\"  \n  )))));\n};\n\nexport default ToastMe;","map":{"version":3,"sources":["C:/react/lac/src/alerts/toaster.js"],"names":["React","useContext","CToaster","CToast","CToastHeader","CToastBody","ArticleProvider","ToastMe","showToast","Context","toast","errors","setToast","background","color","length","map","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;AACA,SACIC,QADJ,EAEIC,MAFJ,EAGIC,YAHJ,EAIIC,UAJJ,QAKS,eALT;AAME,OAAOC,eAAP,MAA4B,2BAA5B;;AAIF,IAAMC,OAAO,GAAC,SAARA,OAAQ,OAAe;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAAA,oBACKP,UAAU,CAACK,eAAe,CAACG,OAAjB,CADf;AAAA,MAClBC,KADkB,eAClBA,KADkB;AAAA,MACZC,MADY,eACZA,MADY;AAAA,MACLC,QADK,eACLA,QADK;;AAEzB,sBACI,uDACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEM,oBAAC,MAAD;AACE,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAC,MAAZ;AAAmBC,MAAAA,KAAK,EAAC;AAAzB,KADT;AAEE,IAAA,IAAI,EAAEN,SAFR;AAGE,IAAA,QAAQ,EAAE,MAHZ;AAIE,IAAA,IAAI,EAAE,IAJR;AAKE,IAAA,SAAS,EAAC,SALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF,eAUE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEDG,MAAM,CAACI,MAAP,GAAeJ,MAAM,CAACK,GAAP,CAAW,UAAAC,KAAK,EAAG;AAC9BL,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACA,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKK,KAAL,CAAR;AACC,GAHU,CAAf,GAKO,EAPN,CAQA;AARA,GADJ,CAVF,CAFN,CADJ,CADJ;AAkCH,CApCD;;AAwCA,eAAeV,OAAf","sourcesContent":["import React,{useContext} from \"react\"\r\nimport {\r\n    CToaster,\r\n    CToast,\r\n    CToastHeader,\r\n    CToastBody,\r\n  } from '@coreui/react'\r\n  import ArticleProvider from \"../context/ArticleContext\"\r\n\r\n\r\n\r\nconst ToastMe=({showToast})=>{\r\n    const {toast,errors,setToast}=useContext(ArticleProvider.Context)\r\n    return (\r\n        <>\r\n            <CToaster>\r\n            \r\n                  <CToast\r\n                    style={{background:\"pink\",color:\"wine\"}}\r\n                    show={showToast}\r\n                    autohide={\"3000\"}\r\n                    fade={true}\r\n                    className=\"success\"\r\n                  >\r\n                    <CToastHeader >\r\n                      Toast title\r\n                    </CToastHeader>\r\n                    <CToastBody>\r\n                        <ul>\r\n                    {\r\n                       errors.length? errors.map(error=> {\r\n                           setToast(true)\r\n                           return (<li>{error}</li>)\r\n                           }\r\n                           \r\n                           ) :\"\"\r\n                        //errors.length? setToast(true):\"\"  \r\n                           \r\n                    }\r\n                      </ul>\r\n                    </CToastBody>\r\n                  </CToast>\r\n            </CToaster>\r\n         \r\n        </>\r\n      )\r\n\r\n}\r\n\r\n\r\n\r\nexport default ToastMe"]},"metadata":{},"sourceType":"module"}