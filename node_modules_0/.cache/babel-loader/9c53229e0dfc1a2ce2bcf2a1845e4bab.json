{"ast":null,"code":"import _slicedToArray from \"C:\\\\react\\\\lac\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\react\\\\lac\\\\src\\\\context\\\\PgCatContext.js\";\n\nimport React, { createContext, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nvar Context = createContext({});\n\nvar Provider = function Provider(props) {\n  // Initial values are obtained from the props\n  var initialCategories = props.categories,\n      children = props.children; // Use State to keep the values\n\n  var _useState = useState(initialCategories),\n      _useState2 = _slicedToArray(_useState, 2),\n      categories = _useState2[0],\n      setCategories = _useState2[1]; //const [selectedUser, setSelectedUser] = useState(initialSelectedUsers);\n  // Make the context object:\n\n\n  var categoriesContext = {\n    categories: categories,\n    setCategories: setCategories\n  }; // pass the value in provider and return\n\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: categoriesContext,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }\n  }, children);\n};\n\nvar PgCatProvider = {\n  Provider: Provider,\n  Context: Context\n};\nPgCatProvider.propTypes = {\n  categories: PropTypes.array //selectedUser: PropTypes.object\n\n};\nPgCatProvider.defaultProps = {\n  categories: [] //selectedUser: {}\n\n};\nexport default PgCatProvider;","map":{"version":3,"sources":["C:/react/lac/src/context/PgCatContext.js"],"names":["React","createContext","useState","PropTypes","Context","Provider","props","initialCategories","categories","children","setCategories","categoriesContext","PgCatProvider","propTypes","array","defaultProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,OAAO,GAAGH,aAAa,CAAC,EAAD,CAA7B;;AAEC,IAAMI,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AACzB;AADyB,MAGXC,iBAHW,GAMrBD,KANqB,CAGvBE,UAHuB;AAAA,MAKvBC,QALuB,GAMrBH,KANqB,CAKvBG,QALuB,EAQzB;;AARyB,kBASWP,QAAQ,CAACK,iBAAD,CATnB;AAAA;AAAA,MASlBC,UATkB;AAAA,MASNE,aATM,kBAUzB;AAEA;;;AACA,MAAMC,iBAAiB,GAAG;AACxBH,IAAAA,UAAU,EAAVA,UADwB;AAExBE,IAAAA,aAAa,EAAbA;AAFwB,GAA1B,CAbyB,CAkBzB;;AACA,sBAAO,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAEC,iBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6CF,QAA7C,CAAP;AACD,CApBA;;AAsBD,IAAMG,aAAa,GAAE;AACjBP,EAAAA,QAAQ,EAARA,QADiB;AAEjBD,EAAAA,OAAO,EAAPA;AAFiB,CAArB;AAKAQ,aAAa,CAACC,SAAd,GAA0B;AACxBL,EAAAA,UAAU,EAAEL,SAAS,CAACW,KADE,CAExB;;AAFwB,CAA1B;AAKAF,aAAa,CAACG,YAAd,GAA6B;AAC3BP,EAAAA,UAAU,EAAE,EADe,CAE3B;;AAF2B,CAA7B;AAMA,eAAeI,aAAf","sourcesContent":["import React, { createContext, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Context = createContext({});\r\n\r\n const Provider = props => {\r\n  // Initial values are obtained from the props\r\n  const {\r\n    categories: initialCategories,\r\n    //selectedUser: initialSelectedUsers,\r\n    children\r\n  } = props;\r\n\r\n  // Use State to keep the values\r\n  const [categories, setCategories] = useState(initialCategories);\r\n  //const [selectedUser, setSelectedUser] = useState(initialSelectedUsers);\r\n\r\n  // Make the context object:\r\n  const categoriesContext = {\r\n    categories,\r\n    setCategories,\r\n  };\r\n\r\n  // pass the value in provider and return\r\n  return <Context.Provider value={categoriesContext}>{children}</Context.Provider>;\r\n};\r\n\r\nconst PgCatProvider= {\r\n    Provider,\r\n    Context\r\n};\r\n\r\nPgCatProvider.propTypes = {\r\n  categories: PropTypes.array,\r\n  //selectedUser: PropTypes.object\r\n};\r\n\r\nPgCatProvider.defaultProps = {\r\n  categories: [],\r\n  //selectedUser: {}\r\n};\r\n\r\n\r\nexport default PgCatProvider"]},"metadata":{},"sourceType":"module"}