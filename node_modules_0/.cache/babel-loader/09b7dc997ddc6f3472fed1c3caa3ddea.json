{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\react\\\\lac\\\\src\\\\alerts\\\\toaster.js\";\n\nimport React, { useContext } from \"react\";\nimport { CToaster, CToast, CToastHeader, CToastBody } from '@coreui/react';\nimport ArticleProvider from \"../context/ArticleContext\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nvar toaster = toast;\n\nvar ToastMe = function ToastMe(_ref) {\n  var showToast = _ref.showToast;\n\n  var _useContext = useContext(ArticleProvider.Context),\n      toast = _useContext.toast,\n      toastType = _useContext.toastType,\n      errors = _useContext.errors,\n      setToast = _useContext.setToast;\n\n  var notify = function notify() {\n    return toastType == \"success\" ? toaster.success(\"Wow so easy !\") : toaster.error(errors.length ? errors.map(function (error, i) {\n      setToast(true);\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }\n      }, error);\n    }) : \"\");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: notify,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Notify !\"), /*#__PURE__*/React.createElement(ToastContainer, {\n    position: \"top-right\",\n    autoClose: 5000,\n    hideProgressBar: false,\n    newestOnTop: false,\n    closeOnClick: true,\n    rtl: false,\n    pauseOnFocusLoss: true,\n    draggable: true,\n    pauseOnHover: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 1\n    }\n  })));\n};\n\nexport default ToastMe;","map":{"version":3,"sources":["C:/react/lac/src/alerts/toaster.js"],"names":["React","useContext","CToaster","CToast","CToastHeader","CToastBody","ArticleProvider","ToastContainer","toast","toaster","ToastMe","showToast","Context","toastType","errors","setToast","notify","success","error","length","map","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;AACA,SACIC,QADJ,EAEIC,MAFJ,EAGIC,YAHJ,EAIIC,UAJJ,QAKS,eALT;AAME,OAAOC,eAAP,MAA4B,2BAA5B;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AAGF,IAAIC,OAAO,GAACD,KAAZ;;AAGA,IAAME,OAAO,GAAC,SAARA,OAAQ,OAAe;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAAA,oBACeV,UAAU,CAACK,eAAe,CAACM,OAAjB,CADzB;AAAA,MAClBJ,KADkB,eAClBA,KADkB;AAAA,MACZK,SADY,eACZA,SADY;AAAA,MACFC,MADE,eACFA,MADE;AAAA,MACKC,QADL,eACKA,QADL;;AAG3B,MAAIC,MAAM,GAAG,SAATA,MAAS;AAAA,WAAMH,SAAS,IAAE,SAAX,GAAuBJ,OAAO,CAACQ,OAAR,CAAgB,eAAhB,CAAvB,GAAyDR,OAAO,CAACS,KAAR,CAAcJ,MAAM,CAACK,MAAP,GAAeL,MAAM,CAACM,GAAP,CAAW,UAACF,KAAD,EAAOG,CAAP,EAAY;AAC9HN,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACA,0BAAQ;AAAI,QAAA,GAAG,EAAEM,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaH,KAAb,CAAR;AACC,KAHsG,CAAf,GAKrF,EALuE,CAA/D;AAAA,GAAb;;AAOE,sBACI,uDA+BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEF,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,cAAD;AACA,IAAA,QAAQ,EAAC,WADT;AAEA,IAAA,SAAS,EAAE,IAFX;AAGA,IAAA,eAAe,EAAE,KAHjB;AAIA,IAAA,WAAW,EAAE,KAJb;AAKA,IAAA,YAAY,MALZ;AAMA,IAAA,GAAG,EAAE,KANL;AAOA,IAAA,gBAAgB,MAPhB;AAQA,IAAA,SAAS,MART;AASA,IAAA,YAAY,MATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAcN,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdM,CA/BE,CADJ;AAqDH,CA/DD;;AAmEA,eAAeN,OAAf","sourcesContent":["import React,{useContext} from \"react\"\r\nimport {\r\n    CToaster,\r\n    CToast,\r\n    CToastHeader,\r\n    CToastBody,\r\n  } from '@coreui/react'\r\n  import ArticleProvider from \"../context/ArticleContext\"\r\n  import { ToastContainer, toast } from 'react-toastify';\r\n  import 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nlet toaster=toast\r\n   \r\n\r\nconst ToastMe=({showToast})=>{\r\n    const {toast,toastType,errors,setToast}=useContext(ArticleProvider.Context)\r\n\r\n  let notify = () => toastType==\"success\" ? toaster.success(\"Wow so easy !\"): toaster.error(errors.length? errors.map((error,i)=> {\r\n    setToast(true)\r\n    return (<li key={i}>{error}</li>)\r\n    }\r\n    \r\n    ) :\"\")\r\n   \r\n    return (\r\n        <>\r\n            {/* <CToaster>\r\n            \r\n                  <CToast\r\n                    style={{background:toastType==\"success\" ? \"green\": \"pink\",color:toastType==\"success\" ? \"white\": \"wine\"}}\r\n                    show={showToast}\r\n                    autohide={5000}\r\n                    fade={true}\r\n                    className=\"success\"\r\n                  >\r\n                    <CToastHeader >\r\n                      {toastType==\"success\" ? \"Success\": \"Error\"}\r\n                    </CToastHeader>\r\n                    <CToastBody>\r\n                        <ul>\r\n                    {\r\n                       errors.length? errors.map((error,i)=> {\r\n                           setToast(true)\r\n                           return (<li key={i}>{error}</li>)\r\n                           }\r\n                           \r\n                           ) :\"\"\r\n                        //errors.length? setToast(true):\"\"  \r\n                           \r\n                    }\r\n                      </ul>\r\n                    </CToastBody>\r\n                  </CToast>\r\n            </CToaster> */}\r\n\r\n            \r\n      <div>\r\n        <button onClick={notify}>Notify !</button>\r\n        <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        />\r\n{ }\r\n<ToastContainer />\r\n      </div>\r\n    \r\n         \r\n        </>\r\n      )\r\n\r\n}\r\n\r\n\r\n\r\nexport default ToastMe"]},"metadata":{},"sourceType":"module"}