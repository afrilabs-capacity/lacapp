{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\react\\\\lac\\\\src\\\\views\\\\dashboard\\\\DashboardAddUser.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { CBadge, CCard, CCardBody, CCardHeader, CCol, CDataTable, CRow, CPagination } from '@coreui/react';\nimport usersData from '../../views/UsersData';\n\nvar getBadge = function getBadge(status) {\n  switch (status) {\n    case 'Active':\n      return 'success';\n\n    case 'Inactive':\n      return 'secondary';\n\n    case 'Pending':\n      return 'warning';\n\n    case 'Banned':\n      return 'danger';\n\n    default:\n      return 'primary';\n  }\n};\n\nvar DashboardAddUser = function DashboardAddUser() {\n  //   const history = useHistory()\n  //   const queryPage = useLocation().search.match(/page=([0-9]+)/, '')\n  //   const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1)\n  //   const [page, setPage] = useState(currentPage)\n  //   const pageChange = newPage => {\n  //     currentPage !== newPage && history.push(`/users?page=${newPage}`)\n  //   }\n  useEffect(function () {// currentPage !== page && setPage(currentPage)\n  }, []);\n  return /*#__PURE__*/React.createElement(CRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    xl: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Users\", /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-muted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \" example\")), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CDataTable, {\n    items: usersData,\n    fields: [{\n      key: 'name',\n      _classes: 'font-weight-bold'\n    }, 'registered', 'role', 'status'],\n    hover: true,\n    striped: true,\n    itemsPerPage: 5,\n    clickableRows: true,\n    onRowClick: function onRowClick(item) {\n      return history.push(\"/users/\".concat(item.id));\n    },\n    scopedSlots: {\n      'status': function status(item) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(CBadge, {\n          color: getBadge(item.status),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }\n        }, item.status));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CPagination, {\n    activePage: page,\n    onActivePageChange: pageChange,\n    pages: 5,\n    doubleArrows: false,\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })))));\n};\n\nexport default DashboardAddUser;","map":{"version":3,"sources":["C:/react/lac/src/views/dashboard/DashboardAddUser.js"],"names":["React","useState","useEffect","useHistory","useLocation","CBadge","CCard","CCardBody","CCardHeader","CCol","CDataTable","CRow","CPagination","usersData","getBadge","status","DashboardAddUser","key","_classes","item","history","push","id","page","pageChange"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,kBAAxC;AACA,SACEC,MADF,EAEEC,KAFF,EAGEC,SAHF,EAIEC,WAJF,EAKEC,IALF,EAMEC,UANF,EAOEC,IAPF,EAQEC,WARF,QASO,eATP;AAWC,OAAOC,SAAP,MAAsB,uBAAtB;;AAED,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,MAAM,EAAI;AACzB,UAAQA,MAAR;AACE,SAAK,QAAL;AAAe,aAAO,SAAP;;AACf,SAAK,UAAL;AAAiB,aAAO,WAAP;;AACjB,SAAK,SAAL;AAAgB,aAAO,SAAP;;AAChB,SAAK,QAAL;AAAe,aAAO,QAAP;;AACf;AAAS,aAAO,SAAP;AALX;AAOD,CARD;;AAUA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC/B;AACA;AACA;AACA;AAEA;AACA;AACA;AAEEd,EAAAA,SAAS,CAAC,YAAM,CACd;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEE;AAAO,IAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF,eAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,UAAD;AACE,IAAA,KAAK,EAAEW,SADT;AAEE,IAAA,MAAM,EAAE,CACN;AAAEI,MAAAA,GAAG,EAAE,MAAP;AAAeC,MAAAA,QAAQ,EAAE;AAAzB,KADM,EAEN,YAFM,EAEQ,MAFR,EAEgB,QAFhB,CAFV;AAME,IAAA,KAAK,MANP;AAOE,IAAA,OAAO,MAPT;AAQE,IAAA,YAAY,EAAE,CARhB;AASE,IAAA,aAAa,MATf;AAUE,IAAA,UAAU,EAAE,oBAACC,IAAD;AAAA,aAAUC,OAAO,CAACC,IAAR,kBAAuBF,IAAI,CAACG,EAA5B,EAAV;AAAA,KAVd;AAWE,IAAA,WAAW,EAAI;AACb,gBACE,gBAACH,IAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAEL,QAAQ,CAACK,IAAI,CAACJ,MAAN,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGI,IAAI,CAACJ,MADR,CADF,CADF;AAAA;AAFW,KAXjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAuBA,oBAAC,WAAD;AACE,IAAA,UAAU,EAAEQ,IADd;AAEE,IAAA,kBAAkB,EAAEC,UAFtB;AAGE,IAAA,KAAK,EAAE,CAHT;AAIE,IAAA,YAAY,EAAE,KAJhB;AAKE,IAAA,KAAK,EAAC,QALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBA,CALF,CADF,CADF,CADF;AA2CD,CAzDD;;AA2DA,eAAeR,gBAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CPagination\r\n} from '@coreui/react'\r\n\r\n import usersData from '../../views/UsersData'\r\n\r\nconst getBadge = status => {\r\n  switch (status) {\r\n    case 'Active': return 'success'\r\n    case 'Inactive': return 'secondary'\r\n    case 'Pending': return 'warning'\r\n    case 'Banned': return 'danger'\r\n    default: return 'primary'\r\n  }\r\n}\r\n\r\nconst DashboardAddUser = () => {\r\n//   const history = useHistory()\r\n//   const queryPage = useLocation().search.match(/page=([0-9]+)/, '')\r\n//   const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1)\r\n//   const [page, setPage] = useState(currentPage)\r\n\r\n//   const pageChange = newPage => {\r\n//     currentPage !== newPage && history.push(`/users?page=${newPage}`)\r\n//   }\r\n\r\n  useEffect(() => {\r\n    // currentPage !== page && setPage(currentPage)\r\n  }, [])\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xl={6}>\r\n        <CCard>\r\n          <CCardHeader>\r\n            Users\r\n            <small className=\"text-muted\"> example</small>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n          <CDataTable\r\n            items={usersData}\r\n            fields={[\r\n              { key: 'name', _classes: 'font-weight-bold' },\r\n              'registered', 'role', 'status'\r\n            ]}\r\n            hover\r\n            striped\r\n            itemsPerPage={5}\r\n            clickableRows\r\n            onRowClick={(item) => history.push(`/users/${item.id}`)}\r\n            scopedSlots = {{\r\n              'status':\r\n                (item)=>(\r\n                  <td>\r\n                    <CBadge color={getBadge(item.status)}>\r\n                      {item.status}\r\n                    </CBadge>\r\n                  </td>\r\n                )\r\n            }}\r\n          />\r\n          <CPagination\r\n            activePage={page}\r\n            onActivePageChange={pageChange}\r\n            pages={5}\r\n            doubleArrows={false} \r\n            align=\"center\"\r\n          />\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default DashboardAddUser\r\n"]},"metadata":{},"sourceType":"module"}