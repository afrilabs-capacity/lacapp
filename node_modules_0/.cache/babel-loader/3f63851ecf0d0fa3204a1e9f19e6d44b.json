{"ast":null,"code":"import _defineProperty from \"C:\\\\react\\\\lac\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\react\\\\lac\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"C:\\\\react\\\\lac\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\react\\\\lac\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\react\\\\lac\\\\src\\\\context\\\\ArticleContext.js\";\n\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { useAlert } from 'react-alert';\nimport authHeader from \"../services/auth-header\";\nvar Context = createContext({});\nvar initialArticle = {\n  id: null,\n  title_en: \"\",\n  body_en: null,\n  featured_en: null,\n  title_fr: \"\",\n  body_fr: null,\n  featured_fr: null,\n  status: \"draft\",\n  category: \"\",\n  created_at: null,\n  updated_at: null\n};\nvar initialEditArticle = {\n  id: null,\n  title_en: \"\",\n  body_en: null,\n  featured_en: null,\n  title_fr: \"\",\n  body_fr: null,\n  featured_fr: null,\n  status: \"draft\",\n  category: \"\",\n  created_at: null,\n  updated_at: null\n};\nvar initialLoginAction = {\n  func: null,\n  params: null\n};\nvar API_URL = \"http://192.168.43.122:8080/laravel/site40/public/api/v1/\";\n\nvar Provider = function Provider(props) {\n  // Initial values are obtained from the props\n  var history = useHistory();\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var location = useLocation();\n  var alert = useAlert();\n  var errorCount;\n  var children = props.children; // Use State to keep the values\n\n  var _useState = useState(initialArticle),\n      _useState2 = _slicedToArray(_useState, 2),\n      article = _useState2[0],\n      setArticle = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      articles = _useState4[0],\n      setArticles = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pagination = _useState6[0],\n      setPagination = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      toast = _useState8[0],\n      setToast = _useState8[1];\n\n  var _useState9 = useState(\"error\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      toastType = _useState10[0],\n      setToastType = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      modal = _useState12[0],\n      setModal = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      authModal = _useState14[0],\n      setAuthModal = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      errors = _useState16[0],\n      setErrors = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      selectedImageEn = _useState18[0],\n      setSelectedImageEn = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      selectedImageFr = _useState20[0],\n      setSelectedImageFr = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      featuredFor = _useState22[0],\n      setFeaturedFor = _useState22[1];\n\n  var _useState23 = useState(\"new\"),\n      _useState24 = _slicedToArray(_useState23, 2),\n      editMode = _useState24[0],\n      setEditMode = _useState24[1];\n\n  var _useState25 = useState(\"\"),\n      _useState26 = _slicedToArray(_useState25, 2),\n      currentArticle = _useState26[0],\n      setCurrentArticle = _useState26[1];\n\n  var _useState27 = useState(1),\n      _useState28 = _slicedToArray(_useState27, 2),\n      currentPage = _useState28[0],\n      setCurrentPage = _useState28[1];\n\n  var _useState29 = useState(\"\"),\n      _useState30 = _slicedToArray(_useState29, 2),\n      searchPhrase = _useState30[0],\n      setSearchPhrase = _useState30[1];\n\n  var _useState31 = useState(false),\n      _useState32 = _slicedToArray(_useState31, 2),\n      fetching = _useState32[0],\n      setFetching = _useState32[1];\n\n  var _useState33 = useState(null),\n      _useState34 = _slicedToArray(_useState33, 2),\n      fetchingFailMsg = _useState34[0],\n      setFetchingFailMsg = _useState34[1];\n\n  var _useState35 = useState(initialLoginAction),\n      _useState36 = _slicedToArray(_useState35, 2),\n      loginAction = _useState36[0],\n      setLoginAction = _useState36[1]; // const [featuredFor,setFeaturedFor]=useState(\"\")\n\n\n  useEffect(function () {\n    //console.log(\"id\",id)\n    updateFeatured();\n    console.log(\"articles rebuilt\", articles[0]);\n    console.log(\"pagination rebuilt\", pagination);\n    console.log(\"article rebuilt\", article);\n  }, [article, articles, pagination]);\n\n  var KeysToErrorArray = function KeysToErrorArray(errors) {\n    Object.keys(errors).map(function (key, index) {\n      return setErrors(function (prevError) {\n        return [].concat(_toConsumableArray(prevError), [errors[key]]);\n      });\n    });\n  };\n\n  var updateArticle = function updateArticle(dataKey, data) {\n    //console.log(\"data key\", dataKey) \n    return setArticle(function (prevState) {\n      var newState = _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, dataKey, data));\n\n      return newState;\n    });\n  };\n\n  var updateFeatured = function updateFeatured() {\n    //console.log(\"data key\", dataKey) \n    article.featured_en !== null && setSelectedImageEn(article.featured_en);\n    article.featured_fr !== null && setSelectedImageFr(article.featured_fr);\n  };\n\n  var resetArticle = function resetArticle() {\n    setArticle(initialArticle);\n    setSelectedImageEn(\"\");\n    setSelectedImageFr(\"\");\n    setCurrentArticle(\"\");\n    setToast(false);\n  };\n\n  var resetEditArticle = function resetEditArticle() {\n    setArticle(initialEditArticle);\n  };\n\n  var validateArticle = function validateArticle() {\n    setErrors([]);\n    setToast(false);\n    errorCount = 0;\n    var tmpErrors = [];\n\n    if (article.status == \"published\") {\n      if (article.title_en == \"\") {\n        tmpErrors.push(\"Please enter article title (english) before publishing as (published status)\");\n        errorCount++;\n      }\n\n      if (article.body_en == null) {\n        tmpErrors.push(\"Please enter article body (english) before publishing as (published status)\");\n        errorCount++;\n      }\n\n      if (article.category == \"\") {\n        tmpErrors.push(\"Please select category before publishing as (published status)\");\n        errorCount++;\n      }\n    }\n\n    if (article.status == \"draft\") {\n      if (article.title_en == \"\") {\n        tmpErrors.push(\"Please enter article title (english) before publishing as (draft status)\");\n        errorCount++;\n      }\n    }\n\n    errorCount > 0 && setErrors(function (prevError) {\n      return [].concat(_toConsumableArray(prevError), tmpErrors);\n    });\n    editMode == \"new\" && errorCount == 0 && publishArticleApi();\n    editMode == \"update\" && errorCount == 0 && updateArticleApi();\n  };\n\n  var publishArticleApi = function publishArticleApi() {\n    setLoginAction(initialLoginAction);\n    setAuthModal(false);\n    axios.request({\n      method: \"post\",\n      headers: authHeader(),\n      url: API_URL + \"post/new\",\n      data: article\n    }).then(function (response) {\n      // updateGallery([])\n      //   updateGallery(prevGallery=>[\n      //     ...prevGallery,...response.data.data.data.data\n      //   ])\n      setEditMode(\"update\");\n      history.replace({\n        pathname: '/posts/edit/' + response.data.data.data.id,\n        //search: '?query=abc',\n        id: response.data.data.data.id,\n        state: {\n          id: response.data.data.data.id,\n          navType: \"post_save\",\n          data: response.data.data.data\n        }\n      });\n      console.log(\"post response\", response.data.data.data.id);\n    }).catch(function (error) {\n      setErrors([]);\n\n      if (error.response) {\n        if (error.response.status) {\n          switch (error.response.status) {\n            case 500:\n              alert.show(error.response.statusText, {\n                type: 'error'\n              });\n              break;\n\n            case 422:\n              KeysToErrorArray(error.response.data.errors);\n              break;\n\n            case 409:\n              KeysToErrorArray(error.response.data.errors);\n              break;\n\n            case 401:\n              //alert.show(\"Token error\",{type:'notice'})\n              setAuthModal(true);\n              setLoginAction(function (prevArticle) {\n                return _objectSpread(_objectSpread({}, prevArticle), {}, {\n                  func: function func() {\n                    return validateArticle;\n                  }\n                });\n              });\n              break;\n\n            default:\n              !error.response ? alert.show(\"Server currently down\", {\n                type: 'error'\n              }) : alert.show(error.response.statusText, {\n                type: 'error'\n              });\n          }\n        } else {\n          alert.show(\"Server currently down\", {\n            type: 'error'\n          });\n        }\n      } else {\n        alert.show(\"Invalid response\", {\n          type: 'error'\n        });\n      } // switch(error.response) {\n      //   case error.response==500:\n      //       alert.show(error.response.data.statusText,{type: 'error'})\n      //     break;\n      //   case error.response==422:\n      //       KeysToErrorArray(error.response.data.errors)\n      //     break;\n      //     case error.response==409:\n      //       KeysToErrorArray(error.response.data.errors)\n      //     break;\n      //   default:\n      //       !error.response ? alert.show(\"Server currently down\",{type: 'error'}):alert.show(error.response.statusText,{type: 'error'})\n      // }\n      // error.response.status==409 ? setErrors(prevError=>[...prevError,error.response.data.message]) :setErrors(prevError=>[...prevError,error.response.statusText])\n      //console.log(\"error\",error.response)\n\n    });\n  };\n\n  var updateArticleApi = function updateArticleApi() {\n    setLoginAction(initialLoginAction);\n    setAuthModal(false);\n    axios.request({\n      method: \"post\",\n      headers: authHeader(),\n      url: API_URL + \"post/update\",\n      data: article\n    }).then(function (response) {\n      // updateGallery([])\n      //   updateGallery(prevGallery=>[\n      //     ...prevGallery,...response.data.data.data.data\n      //   ])\n      setEditMode(\"update\");\n      setToastType(\"success\");\n      setErrors(function (prevError) {\n        return [].concat(_toConsumableArray(prevError), [\"Updated\"]);\n      });\n      setToast(true);\n      console.log(\"post response\", response.data.data.data.id);\n    }).catch(function (error) {\n      setErrors([]);\n\n      if (error.response) {\n        if (error.response.status) {\n          switch (error.response.status) {\n            case 500:\n              alert.show(error.response.statusText, {\n                type: 'error'\n              });\n              break;\n\n            case 422:\n              KeysToErrorArray(error.response.data.errors);\n              break;\n\n            case 409:\n              KeysToErrorArray(error.response.data.errors);\n              break;\n\n            case 401:\n              //alert.show(\"Token error\",{type:'notice'})\n              setAuthModal(true);\n              setLoginAction(function (prevArticle) {\n                return _objectSpread(_objectSpread({}, prevArticle), {}, {\n                  func: function func() {\n                    return validateArticle;\n                  }\n                });\n              });\n              break;\n\n            default:\n              !error.response ? alert.show(\"Server currently down\", {\n                type: 'error'\n              }) : alert.show(error.response.statusText, {\n                type: 'error'\n              });\n          }\n        } else {\n          alert.show(\"Server currently down\", {\n            type: 'error'\n          });\n        }\n      } else {\n        alert.show(\"Invalid response\", {\n          type: 'error'\n        });\n      } // switch(error.response) {\n      //   case error.response==500:\n      //       alert.show(error.response.data.statusText,{type: 'error'})\n      //     break;\n      //   case error.response==422:\n      //       KeysToErrorArray(error.response.data.errors)\n      //     break;\n      //     case error.response==409:\n      //       KeysToErrorArray(error.response.data.errors)\n      //     break;\n      //   default:\n      //       !error.response ? alert.show(\"Server currently down\",{type: 'error'}):alert.show(error.response.statusText,{type: 'error'})\n      // }\n      // let apiStatus=error.response!==undefined ? error.response.statusText : \"Unknown error\"\n      // setErrors(prevError=>[...prevError,apiStatus])\n\n    });\n  };\n\n  var fetchArticleByIdApi = function fetchArticleByIdApi(id) {\n    setLoginAction(initialLoginAction);\n    setAuthModal(false);\n    axios.get(API_URL + \"post/\" + id, {\n      headers: authHeader()\n    }).then(function (response) {\n      setArticle(function (prevArticle) {\n        return _objectSpread(_objectSpread({}, prevArticle), response.data.data.data);\n      });\n      console.log(\"post response\", response.data.data.data);\n      console.log(\"all articles\", articles);\n    }).catch(function (error) {\n      setErrors([]);\n\n      if (error.response) {\n        if (error.response.status) {\n          switch (error.response.status) {\n            case 500:\n              alert.show(error.response.statusText, {\n                type: 'error'\n              });\n              break;\n\n            case 401:\n              //alert.show(\"Token error\",{type:'notice'})\n              setAuthModal(true);\n              setLoginAction(function (prevArticle) {\n                return _objectSpread(_objectSpread({}, prevArticle), {}, {\n                  func: fetchArticleByIdApi,\n                  params: id\n                });\n              });\n              break;\n\n            default:\n              !error.response ? alert.show(\"Server currently down\", {\n                type: 'error'\n              }) : alert.show(error.response.statusText, {\n                type: 'error'\n              });\n          }\n        } else {\n          alert.show(\"Server currently down\", {\n            type: 'error'\n          });\n        }\n      } else {\n        alert.show(\"Invalid response\", {\n          type: 'error'\n        });\n      } // let apiStatus=error.response!==undefined ? error.response.statusText : \"Unknown error\"\n      // setErrors(prevError=>[...prevError,apiStatus])\n\n    });\n  };\n\n  var fetchArticlesApi = function fetchArticlesApi() {\n    setArticles([]);\n    setFetching(true);\n    setFetchingFailMsg(null);\n    setAuthModal(false);\n    setLoginAction(initialLoginAction); //alert(\"Hi there man\")\n\n    axios.get(API_URL + \"posts\", {\n      headers: authHeader()\n    }).then(function (response) {\n      console.log(\"fetch articles\", response.data.data.data.data);\n      setArticles(function (prevArticle) {\n        return [].concat(_toConsumableArray(prevArticle), _toConsumableArray(response.data.data.data.data));\n      });\n      setPagination(function (prevArticle) {\n        return _objectSpread(_objectSpread({}, prevArticle), response.data.data.data);\n      });\n      setFetching(false);\n      console.log(\"post response all articles\", response.data.data.data);\n    }).catch(function (error) {\n      setErrors([]);\n      setFetching(false);\n\n      if (error.response) {\n        if (error.response.status) {\n          switch (error.response.status) {\n            case 500:\n              alert.show(error.response.statusText, {\n                type: 'error'\n              });\n              break;\n\n            case 401:\n              //alert.show(\"Token error\",{type:'notice'})\n              setAuthModal(true);\n              setLoginAction(function (prevArticle) {\n                return _objectSpread(_objectSpread({}, prevArticle), {}, {\n                  func: fetchArticlesApi,\n                  params: id\n                });\n              });\n              break;\n\n            default:\n              !error.response ? alert.show(\"Server currently down\", {\n                type: 'error'\n              }) : alert.show(error.response.statusText, {\n                type: 'error'\n              });\n          }\n        } else {\n          alert.show(\"Server currently down\", {\n            type: 'error'\n          });\n        }\n      } else {\n        alert.show(\"Invalid response\", {\n          type: 'error'\n        });\n      } // error.response!==undefined ? setFetchingFailMsg(\"No articles found\") : setFetchingFailMsg(\"Unknown error\")\n      // let apiStatus=error.response!==undefined ? error.response.statusText : \"Unknown error\"\n      // setErrors(prevError=>[...prevError,apiStatus])\n\n    });\n  };\n\n  var goToPageApi = function goToPageApi(page) {\n    setArticles([]);\n    setCurrentPage(page);\n    setAuthModal(false);\n    axios.get(pagination.path + \"?page=\" + page, {\n      headers: authHeader()\n    }).then(function (response) {\n      setArticles(function (prevArticle) {\n        return [].concat(_toConsumableArray(prevArticle), _toConsumableArray(response.data.data.data.data));\n      });\n      setPagination(function (prevArticle) {\n        return _objectSpread(_objectSpread({}, prevArticle), response.data.data.data);\n      });\n      console.log(\"post response all articles\", response.data.data.data);\n    }).catch(function (error) {\n      setErrors([]);\n\n      if (error.response) {\n        if (error.response.status) {\n          switch (error.response.status) {\n            case 500:\n              alert.show(error.response.statusText, {\n                type: 'error'\n              });\n              break;\n\n            case 401:\n              //alert.show(\"Token error\",{type:'notice'})\n              setAuthModal(true);\n              setLoginAction(function (prevArticle) {\n                return _objectSpread(_objectSpread({}, prevArticle), {}, {\n                  func: goToPageApi\n                });\n              });\n              break;\n\n            default:\n              !error.response ? alert.show(\"Server currently down\", {\n                type: 'error'\n              }) : alert.show(error.response.statusText, {\n                type: 'error'\n              });\n          }\n        } else {\n          alert.show(\"Server currently down\", {\n            type: 'error'\n          });\n        }\n      } else {\n        alert.show(\"Invalid response\", {\n          type: 'error'\n        });\n      } // let apiStatus=error.response!==undefined ? error.response.statusText : \"Unknown error\"\n      // setErrors(prevError=>[...prevError,apiStatus])\n\n    });\n  };\n\n  var searchByPhraseApi = function searchByPhraseApi() {\n    setArticles([]);\n    setFetching(true);\n    setFetchingFailMsg(null);\n    setAuthModal(false);\n    axios.get(API_URL + \"post/search/\" + searchPhrase, {\n      headers: authHeader()\n    }).then(function (response) {\n      setArticles(function (prevArticle) {\n        return [].concat(_toConsumableArray(prevArticle), _toConsumableArray(response.data.data.data.data));\n      });\n      setPagination(function (prevArticle) {\n        return _objectSpread(_objectSpread({}, prevArticle), response.data.data.data);\n      });\n      setFetching(false);\n      !response.data.data.data.length && setFetchingFailMsg(\"No results found...\"); // alert(JSON.stringify(response.data) )\n\n      console.log(\"get response\", response.data.data.data); //console.log(\"all articles\",articles)\n    }).catch(function (error) {\n      setErrors([]);\n      setFetching(false); //alert(JSON.stringify(error.response))\n\n      error.response !== undefined ? setFetchingFailMsg(\"No articles found\") : setFetchingFailMsg(\"Unknown error\"); // let apiStatus=error.response!==undefined ? error.response.statusText : \"Unknown error\"\n      // setErrors(prevError=>[...prevError,apiStatus])\n    });\n  };\n\n  var articleContext = {\n    article: article,\n    articles: articles,\n    updateArticle: updateArticle,\n    toast: toast,\n    setToast: setToast,\n    modal: modal,\n    setModal: setModal,\n    errors: errors,\n    validateArticle: validateArticle,\n    selectedImageFr: selectedImageFr,\n    selectedImageEn: selectedImageEn,\n    setSelectedImageEn: setSelectedImageEn,\n    setSelectedImageFr: setSelectedImageFr,\n    setFeaturedFor: setFeaturedFor,\n    featuredFor: featuredFor,\n    editMode: editMode,\n    setCurrentArticle: setCurrentArticle,\n    setArticle: setArticle,\n    setEditMode: setEditMode,\n    resetArticle: resetArticle,\n    resetEditArticle: resetEditArticle,\n    initialEditArticle: initialEditArticle,\n    toastType: toastType,\n    setToastType: setToastType,\n    fetchArticleByIdApi: fetchArticleByIdApi,\n    fetchArticlesApi: fetchArticlesApi,\n    pagination: pagination,\n    goToPageApi: goToPageApi,\n    currentPage: currentPage,\n    searchPhrase: searchPhrase,\n    setSearchPhrase: setSearchPhrase,\n    searchByPhraseApi: searchByPhraseApi,\n    setCurrentPage: setCurrentPage,\n    fetching: fetching,\n    fetchingFailMsg: fetchingFailMsg,\n    authModal: authModal,\n    setAuthModal: setAuthModal,\n    loginAction: loginAction\n  }; // pass the value in provider and return\n\n  return /*#__PURE__*/React.createElement(Context.Provider, Object.assign({\n    value: articleContext\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 10\n    }\n  }), children);\n};\n\nvar ArticleProvider = {\n  Provider: Provider,\n  Context: Context\n};\nProvider.propTypes = {\n  article: PropTypes.object\n};\nProvider.defaultProps = {\n  article: {\n    title_en: \"\",\n    body_en: null,\n    featured_en: null,\n    title_fr: \"\",\n    body_fr: null,\n    featured_fr: null,\n    status: \"draft\"\n  }\n};\nexport default ArticleProvider;","map":{"version":3,"sources":["C:/react/lac/src/context/ArticleContext.js"],"names":["React","createContext","useState","useEffect","useHistory","useLocation","useParams","PropTypes","axios","useAlert","authHeader","Context","initialArticle","id","title_en","body_en","featured_en","title_fr","body_fr","featured_fr","status","category","created_at","updated_at","initialEditArticle","initialLoginAction","func","params","API_URL","Provider","props","history","location","alert","errorCount","children","article","setArticle","articles","setArticles","pagination","setPagination","toast","setToast","toastType","setToastType","modal","setModal","authModal","setAuthModal","errors","setErrors","selectedImageEn","setSelectedImageEn","selectedImageFr","setSelectedImageFr","featuredFor","setFeaturedFor","editMode","setEditMode","currentArticle","setCurrentArticle","currentPage","setCurrentPage","searchPhrase","setSearchPhrase","fetching","setFetching","fetchingFailMsg","setFetchingFailMsg","loginAction","setLoginAction","updateFeatured","console","log","KeysToErrorArray","Object","keys","map","key","index","prevError","updateArticle","dataKey","data","prevState","newState","resetArticle","resetEditArticle","validateArticle","tmpErrors","push","publishArticleApi","updateArticleApi","request","method","headers","url","then","response","replace","pathname","state","navType","catch","error","show","statusText","type","prevArticle","fetchArticleByIdApi","get","fetchArticlesApi","goToPageApi","page","path","searchByPhraseApi","length","undefined","articleContext","ArticleProvider","propTypes","object","defaultProps"],"mappings":"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","sourcesContent":["import React, { createContext, useState,useEffect} from \"react\";\r\nimport { useHistory,useLocation,useParams } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\"\r\nimport { useAlert } from 'react-alert'\r\nimport authHeader from \"../services/auth-header\";\r\n\r\nconst Context = createContext({});\r\n\r\nconst initialArticle={\r\n    id:null,\r\n    title_en: \"\",\r\n    body_en: null,\r\n    featured_en:null,\r\n    title_fr: \"\",\r\n    body_fr: null,\r\n    featured_fr:null,\r\n    status:\"draft\",\r\n    category:\"\",\r\n    created_at:null,\r\n    updated_at:null\r\n}\r\n\r\n\r\nconst initialEditArticle={\r\n id:null,\r\n title_en: \"\",\r\n body_en: null,\r\n featured_en:null,\r\n title_fr: \"\",\r\n body_fr: null,\r\n featured_fr:null,\r\n status:\"draft\",\r\n category:\"\",\r\n created_at:null,\r\n updated_at:null\r\n}\r\n\r\n\r\nconst initialLoginAction={func:null,params:null}\r\n\r\nconst API_URL = \"http://192.168.43.122:8080/laravel/site40/public/api/v1/\";\r\n\r\n const Provider = props => {\r\n  // Initial values are obtained from the props\r\n const history = useHistory();\r\n\r\nconst {id} = useParams();\r\n\r\nconst location = useLocation();\r\n\r\nconst alert = useAlert()\r\n\r\nlet errorCount\r\n\r\n\r\n \r\n  const {\r\n    // article:initialArticle,\r\n    children\r\n  } = props;\r\n\r\n  // Use State to keep the values\r\n  const [article,setArticle] = useState(initialArticle);\r\n  const [articles,setArticles] = useState([]);\r\n  const [pagination,setPagination] = useState({});\r\n  const [toast,setToast]=useState(false)\r\n  const [toastType,setToastType]=useState(\"error\")\r\n  const [modal,setModal]=useState(false)\r\n  const [authModal,setAuthModal] = useState(false)\r\n  const [errors,setErrors]=useState([])\r\n  const [selectedImageEn,setSelectedImageEn]=useState(\"\")\r\n  const [selectedImageFr,setSelectedImageFr]=useState(\"\")\r\n  const [featuredFor,setFeaturedFor]=useState(\"\")\r\n  const [editMode,setEditMode]=useState(\"new\")\r\n  const [currentArticle,setCurrentArticle]=useState(\"\")\r\n  const [currentPage,setCurrentPage]=useState(1)\r\n  const [searchPhrase,setSearchPhrase]=useState(\"\")\r\n  const [fetching,setFetching]=useState(false)\r\n  const [fetchingFailMsg,setFetchingFailMsg]=useState(null)\r\n  const [loginAction,setLoginAction] =useState(initialLoginAction)\r\n\r\n\r\n  // const [featuredFor,setFeaturedFor]=useState(\"\")\r\n\r\n  useEffect(()=>{\r\n//console.log(\"id\",id)\r\nupdateFeatured()\r\nconsole.log(\"articles rebuilt\",articles[0])\r\nconsole.log(\"pagination rebuilt\",pagination)\r\nconsole.log(\"article rebuilt\",article)\r\n  },[article,articles,pagination])\r\n\r\n\r\n  const KeysToErrorArray=(errors)=>{\r\n    Object.keys(errors).map((key, index)=> setErrors(prevError=>[...prevError,errors[key]]))\r\n   }\r\n  \r\n\r\n  const updateArticle=(dataKey,data)=> \r\n  {\r\n     //console.log(\"data key\", dataKey) \r\n    return setArticle(prevState => { \r\n         let newState=({...prevState,[dataKey]: data})\r\n          return newState\r\n        })  \r\n  }\r\n\r\n  const updateFeatured=()=> \r\n  {\r\n     //console.log(\"data key\", dataKey) \r\n     article.featured_en!==null && setSelectedImageEn( article.featured_en)\r\n\r\n     article.featured_fr!==null && setSelectedImageFr( article.featured_fr)\r\n    \r\n  }\r\n  \r\n  const resetArticle=()=> \r\n  {\r\n    setArticle(initialArticle)\r\n    setSelectedImageEn(\"\")\r\n    setSelectedImageFr(\"\")\r\n    setCurrentArticle(\"\")\r\n    setToast(false)\r\n  }\r\n\r\n\r\n\r\n  const resetEditArticle=()=> \r\n  {\r\n    setArticle(initialEditArticle)\r\n  }\r\n\r\n\r\n  const validateArticle= ()=>{\r\n      setErrors([])\r\n      setToast(false)\r\n      errorCount=0\r\n      let tmpErrors=[]\r\n        if(article.status==\"published\"){\r\n        if(article.title_en==\"\"){\r\n          tmpErrors.push(\"Please enter article title (english) before publishing as (published status)\")\r\n           errorCount++\r\n        }\r\n\r\n        if(article.body_en==null){\r\n          tmpErrors.push(\"Please enter article body (english) before publishing as (published status)\")\r\n          errorCount++\r\n        } \r\n\r\n        if(article.category==\"\"){\r\n          tmpErrors.push(\"Please select category before publishing as (published status)\")\r\n          errorCount++\r\n      } \r\n\r\n       \r\n\r\n        }\r\n\r\n        if(article.status==\"draft\"){\r\n            if(article.title_en==\"\"){\r\n              tmpErrors.push(\"Please enter article title (english) before publishing as (draft status)\")\r\n          errorCount++\r\n               \r\n            } \r\n            \r\n           \r\n        }\r\n\r\n       \r\n        errorCount>0 && setErrors(prevError=>[...prevError,...tmpErrors])\r\n\r\n       editMode==\"new\" && errorCount==0 && publishArticleApi()\r\n\r\n       editMode==\"update\" && errorCount==0 && updateArticleApi()\r\n       \r\n        \r\n\r\n  }\r\n  \r\n\r\n  const publishArticleApi =()=>{\r\n\r\n    setLoginAction(initialLoginAction)\r\n    setAuthModal(false)\r\n\r\n    axios.request( {\r\n      method: \"post\", \r\n      headers: authHeader(),\r\n      url: API_URL+\"post/new\", \r\n      data: article\r\n    }).then (response => {\r\n      // updateGallery([])\r\n      //   updateGallery(prevGallery=>[\r\n      //     ...prevGallery,...response.data.data.data.data\r\n      //   ])\r\n      setEditMode(\"update\")\r\n      history.replace({\r\n        pathname: '/posts/edit/'+response.data.data.data.id,\r\n        //search: '?query=abc',\r\n        id:response.data.data.data.id,\r\n        state: { id: response.data.data.data.id,navType:\"post_save\",data:response.data.data.data }\r\n    });\r\n      console.log(\"post response\",response.data.data.data.id)\r\n    }).catch(error => {\r\n      setErrors([])\r\n      if(error.response){\r\n        if(error.response.status){\r\n             switch(error.response.status) {\r\n          case 500:\r\n              alert.show(error.response.statusText,{type: 'error'})\r\n            break;\r\n          case 422:\r\n              KeysToErrorArray(error.response.data.errors)\r\n            break;\r\n            case 409:\r\n              KeysToErrorArray(error.response.data.errors)\r\n            break;\r\n            case 401:\r\n              //alert.show(\"Token error\",{type:'notice'})\r\n              setAuthModal(true)\r\n              setLoginAction(prevArticle=>{\r\n                return {...prevArticle,func:()=>validateArticle}\r\n              })\r\n            break;\r\n          default:\r\n              !error.response ? alert.show(\"Server currently down\",{type: 'error'}):\r\n              alert.show(error.response.statusText,{type: 'error'})\r\n        }     \r\n        }else{\r\n          alert.show(\"Server currently down\",{type: 'error'})\r\n        }\r\n      }else{alert.show(\"Invalid response\",{type: 'error'})}\r\n      // switch(error.response) {\r\n      //   case error.response==500:\r\n      //       alert.show(error.response.data.statusText,{type: 'error'})\r\n      //     break;\r\n      //   case error.response==422:\r\n      //       KeysToErrorArray(error.response.data.errors)\r\n      //     break;\r\n      //     case error.response==409:\r\n      //       KeysToErrorArray(error.response.data.errors)\r\n      //     break;\r\n      //   default:\r\n      //       !error.response ? alert.show(\"Server currently down\",{type: 'error'}):alert.show(error.response.statusText,{type: 'error'})\r\n      // }\r\n      // error.response.status==409 ? setErrors(prevError=>[...prevError,error.response.data.message]) :setErrors(prevError=>[...prevError,error.response.statusText])\r\n      //console.log(\"error\",error.response)\r\n      \r\n  });\r\n\r\n  }\r\n\r\n\r\n\r\n  \r\n  const updateArticleApi =()=>{\r\n    \r\n    setLoginAction(initialLoginAction)  \r\n    setAuthModal(false)\r\n\r\n    axios.request( {\r\n      method: \"post\", \r\n      headers: authHeader(),\r\n      url: API_URL+\"post/update\", \r\n      data: article\r\n    }).then (response => {\r\n      // updateGallery([])\r\n      //   updateGallery(prevGallery=>[\r\n      //     ...prevGallery,...response.data.data.data.data\r\n      //   ])\r\n      setEditMode(\"update\")\r\n      setToastType(\"success\")\r\n      setErrors(prevError=>[...prevError,\"Updated\"])\r\n      setToast(true)\r\n      \r\n     \r\n      console.log(\"post response\",response.data.data.data.id)\r\n    }).catch(error => {\r\n      setErrors([])\r\n      if(error.response){\r\n        if(error.response.status){\r\n             switch(error.response.status) {\r\n          case 500:\r\n              alert.show(error.response.statusText,{type: 'error'})\r\n            break;\r\n          case 422:\r\n              KeysToErrorArray(error.response.data.errors)\r\n            break;\r\n            case 409:\r\n              KeysToErrorArray(error.response.data.errors)\r\n            break;\r\n            case 401:\r\n              //alert.show(\"Token error\",{type:'notice'})\r\n              setAuthModal(true)\r\n              setLoginAction(prevArticle=>{\r\n                return {...prevArticle,func:()=>validateArticle}\r\n              })\r\n            break;\r\n          default:\r\n              !error.response ? alert.show(\"Server currently down\",{type: 'error'}):\r\n              alert.show(error.response.statusText,{type: 'error'})\r\n        }     \r\n        }else{\r\n          alert.show(\"Server currently down\",{type: 'error'})\r\n        }\r\n      }else{alert.show(\"Invalid response\",{type: 'error'})}\r\n      // switch(error.response) {\r\n      //   case error.response==500:\r\n      //       alert.show(error.response.data.statusText,{type: 'error'})\r\n      //     break;\r\n      //   case error.response==422:\r\n      //       KeysToErrorArray(error.response.data.errors)\r\n      //     break;\r\n      //     case error.response==409:\r\n      //       KeysToErrorArray(error.response.data.errors)\r\n      //     break;\r\n      //   default:\r\n      //       !error.response ? alert.show(\"Server currently down\",{type: 'error'}):alert.show(error.response.statusText,{type: 'error'})\r\n      // }\r\n      // let apiStatus=error.response!==undefined ? error.response.statusText : \"Unknown error\"\r\n      // setErrors(prevError=>[...prevError,apiStatus])\r\n      \r\n  });\r\n\r\n  }\r\n\r\n\r\n  const fetchArticleByIdApi =(id)=>{\r\n    setLoginAction(initialLoginAction)\r\n    setAuthModal(false)\r\n\r\n    axios.get( API_URL+\"post/\"+id,{headers: authHeader()}).then (response => {\r\n      setArticle(prevArticle=>{\r\n        return {...prevArticle,...response.data.data.data}\r\n      })\r\n      \r\n     \r\n      console.log(\"post response\",response.data.data.data)\r\n      console.log(\"all articles\",articles)\r\n    }).catch(error => {\r\n      setErrors([])\r\n      if(error.response){\r\n        if(error.response.status){\r\n             switch(error.response.status) {\r\n          case 500:\r\n              alert.show(error.response.statusText,{type: 'error'})\r\n            break;\r\n            case 401:\r\n              //alert.show(\"Token error\",{type:'notice'})\r\n              setAuthModal(true)\r\n              setLoginAction(prevArticle=>{\r\n                return {...prevArticle,func:fetchArticleByIdApi,params:id}\r\n              })\r\n              \r\n            break;\r\n          default:\r\n              !error.response ? alert.show(\"Server currently down\",{type: 'error'}):\r\n              alert.show(error.response.statusText,{type: 'error'})\r\n        }     \r\n        }else{\r\n          alert.show(\"Server currently down\",{type: 'error'})\r\n        }\r\n      }else{alert.show(\"Invalid response\",{type: 'error'})}\r\n      // let apiStatus=error.response!==undefined ? error.response.statusText : \"Unknown error\"\r\n      // setErrors(prevError=>[...prevError,apiStatus])\r\n      \r\n  });\r\n\r\n  }\r\n\r\n\r\n\r\n  const fetchArticlesApi =()=>{\r\n    setArticles([])\r\n    setFetching(true)\r\n    setFetchingFailMsg(null)\r\n    setAuthModal(false)\r\n    setLoginAction(initialLoginAction)\r\n\r\n    //alert(\"Hi there man\")\r\n\r\n    axios.get( API_URL+\"posts\",{headers: authHeader()}).then (response => {\r\n\r\n      console.log(\"fetch articles\",response.data.data.data.data)\r\n      setArticles(prevArticle=>{\r\n        return [...prevArticle,...response.data.data.data.data]\r\n      })\r\n\r\n      setPagination(prevArticle=>{\r\n        return {...prevArticle,...response.data.data.data}\r\n      })\r\n      \r\n      setFetching(false)\r\n      console.log(\"post response all articles\",response.data.data.data)\r\n    }).catch(error => {\r\n      setErrors([])\r\n      setFetching(false)\r\n      if(error.response){\r\n        if(error.response.status){\r\n             switch(error.response.status) {\r\n          case 500:\r\n              alert.show(error.response.statusText,{type: 'error'})\r\n            break;\r\n            case 401:\r\n              //alert.show(\"Token error\",{type:'notice'})\r\n              setAuthModal(true)\r\n              setLoginAction(prevArticle=>{\r\n                return {...prevArticle,func:fetchArticlesApi,params:id}\r\n              })\r\n            break;\r\n          default:\r\n              !error.response ? alert.show(\"Server currently down\",{type: 'error'}):\r\n              alert.show(error.response.statusText,{type: 'error'})\r\n        }     \r\n        }else{\r\n          alert.show(\"Server currently down\",{type: 'error'})\r\n        }\r\n      }else{alert.show(\"Invalid response\",{type: 'error'})}\r\n      // error.response!==undefined ? setFetchingFailMsg(\"No articles found\") : setFetchingFailMsg(\"Unknown error\")\r\n      // let apiStatus=error.response!==undefined ? error.response.statusText : \"Unknown error\"\r\n      // setErrors(prevError=>[...prevError,apiStatus])\r\n      \r\n  });\r\n\r\n  }\r\n\r\n\r\n  const goToPageApi =(page)=>{\r\n    setArticles([])\r\n    setCurrentPage(page)\r\n    setAuthModal(false)\r\n\r\n    axios.get( pagination.path+\"?page=\"+page,{headers: authHeader()}).then (response => {\r\n      setArticles(prevArticle=>{\r\n        return [...prevArticle,...response.data.data.data.data]\r\n      })\r\n\r\n      setPagination(prevArticle=>{\r\n        return {...prevArticle,...response.data.data.data}\r\n      })\r\n      \r\n     \r\n      console.log(\"post response all articles\",response.data.data.data)\r\n    }).catch(error => {\r\n      setErrors([])\r\n      if(error.response){\r\n        if(error.response.status){\r\n             switch(error.response.status) {\r\n          case 500:\r\n              alert.show(error.response.statusText,{type: 'error'})\r\n            break;\r\n            case 401:\r\n              //alert.show(\"Token error\",{type:'notice'})\r\n              setAuthModal(true)\r\n              setLoginAction(prevArticle=>{\r\n                return {...prevArticle,func:goToPageApi}\r\n              })\r\n            break;\r\n          default:\r\n              !error.response ? alert.show(\"Server currently down\",{type: 'error'}):\r\n              alert.show(error.response.statusText,{type: 'error'})\r\n        }     \r\n        }else{\r\n          alert.show(\"Server currently down\",{type: 'error'})\r\n        }\r\n      }else{alert.show(\"Invalid response\",{type: 'error'})}\r\n      // let apiStatus=error.response!==undefined ? error.response.statusText : \"Unknown error\"\r\n      // setErrors(prevError=>[...prevError,apiStatus])\r\n      \r\n  });\r\n\r\n  }\r\n\r\n\r\n  const searchByPhraseApi =()=>{\r\n    \r\n    setArticles([])\r\n    setFetching(true)\r\n    setFetchingFailMsg(null)\r\n    setAuthModal(false)\r\n\r\n    axios.get( API_URL+\"post/search/\"+searchPhrase,{headers: authHeader()}).then (response => {\r\n\r\n      \r\n      setArticles(prevArticle=>{\r\n        return [...prevArticle,...response.data.data.data.data]\r\n      })\r\n\r\n      setPagination(prevArticle=>{\r\n        return {...prevArticle,...response.data.data.data}\r\n      })\r\n      \r\n      setFetching(false)\r\n      !response.data.data.data.length && setFetchingFailMsg(\"No results found...\")\r\n      // alert(JSON.stringify(response.data) )\r\n      console.log(\"get response\",response.data.data.data)\r\n      //console.log(\"all articles\",articles)\r\n    }).catch(error => {\r\n      setErrors([])\r\n      setFetching(false)\r\n      //alert(JSON.stringify(error.response))\r\n      error.response!==undefined ? setFetchingFailMsg(\"No articles found\") : setFetchingFailMsg(\"Unknown error\")\r\n      // let apiStatus=error.response!==undefined ? error.response.statusText : \"Unknown error\"\r\n      // setErrors(prevError=>[...prevError,apiStatus])\r\n      \r\n  });\r\n\r\n  }\r\n\r\n\r\n  const articleContext = {\r\n    article,\r\n    articles,\r\n    updateArticle,\r\n    toast,\r\n    setToast,\r\n    modal,\r\n    setModal,\r\n    errors,\r\n    validateArticle,\r\n    selectedImageFr,\r\n    selectedImageEn,\r\n    setSelectedImageEn,\r\n    setSelectedImageFr,\r\n    setFeaturedFor,\r\n    featuredFor,\r\n    editMode,\r\n    setCurrentArticle,\r\n    setArticle,\r\n    setEditMode,\r\n    resetArticle,\r\n    resetEditArticle,\r\n    initialEditArticle,\r\n    toastType,\r\n    setToastType,\r\n    fetchArticleByIdApi,\r\n    fetchArticlesApi,\r\n    pagination,\r\n    goToPageApi,\r\n    currentPage,\r\n    searchPhrase,\r\n    setSearchPhrase,\r\n    searchByPhraseApi,\r\n    setCurrentPage,\r\n    fetching,\r\n    fetchingFailMsg,\r\n    authModal,\r\n    setAuthModal,\r\n    loginAction\r\n\r\n    \r\n\r\n  };\r\n\r\n  // pass the value in provider and return\r\n  return <Context.Provider value={articleContext}  {...props}>{children }</Context.Provider>;\r\n};\r\n\r\n\r\nconst ArticleProvider= {\r\n    Provider,\r\n    Context\r\n};\r\n\r\nProvider.propTypes = {\r\n    article:PropTypes.object,  \r\n};\r\n\r\nProvider.defaultProps = {\r\n  article: {\r\n    title_en: \"\",\r\n    body_en: null,\r\n    featured_en:null,\r\n    title_fr: \"\",\r\n    body_fr: null,\r\n    featured_fr:null,\r\n    status:\"draft\"\r\n  },\r\n\r\n\r\n};\r\n\r\n\r\nexport default ArticleProvider"]},"metadata":{},"sourceType":"module"}