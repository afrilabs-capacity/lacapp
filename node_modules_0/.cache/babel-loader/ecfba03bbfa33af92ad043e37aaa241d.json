{"ast":null,"code":"import _slicedToArray from \"C:\\\\react\\\\lac\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\react\\\\lac\\\\src\\\\Uploaders\\\\image-uploader.js\";\n\nimport React, { useState, useEffect } from 'react';\n\nvar ImageUpload = function ImageUpload(_ref) {\n  var postType = _ref.postType;\n  useEffect(function () {\n    var uploadBt = document.getElementById(\"acpb_upload_button\");\n    var upload_input = document.getElementById(\"upload_input\");\n    uploadBt.addEventListener(\"click\", function (e) {\n      e.preventDefault();\n      alert(\"You clicked the upload button\");\n    });\n  }, []);\n  console.log(\"Post type\", postType);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      imagePreviewUrl = _useState2[0],\n      setImagePreviewUrl = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      image = _useState4[0],\n      setImage = _useState4[1];\n\n  var _onChange = function onChange(e) {\n    //console.log(e.target.value)\n    var files = e.target.files || e.dataTransfer.files; //alert(\"on change for loading files\")\n\n    if (!files.length) return; //this.createImage(files[0]);\n\n    var reader = new FileReader();\n\n    reader.onload = function (e) {\n      setImage(e.target.result);\n      setImagePreviewUrl(e.target.result);\n      console.log(\"image\", e.target.result);\n    };\n\n    reader.readAsDataURL(files[0]);\n  };\n\n  var onFormSubmit = function onFormSubmit(e) {//console.log(e.target.value)\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: function onSubmit() {\n      return onFormSubmit;\n    },\n    encType: \"multipart/form-data\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, !imagePreviewUrl ? /*#__PURE__*/React.createElement(\"input\", {\n    id: \"upload_input\",\n    type: \"file\",\n    hidden: \"true\",\n    onChange: function onChange(e) {\n      return _onChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }) : \"\", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"imgPreview\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, imagePreviewUrl ? /*#__PURE__*/React.createElement(\"img\", {\n    className: \"add_imagem img-fluid\",\n    Name: \"add_imagem\",\n    src: imagePreviewUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 31\n    }\n  }) : 'Upload image'));\n};\n\nexport default ImageUpload;","map":{"version":3,"sources":["C:/react/lac/src/Uploaders/image-uploader.js"],"names":["React","useState","useEffect","ImageUpload","postType","uploadBt","document","getElementById","upload_input","addEventListener","e","preventDefault","alert","console","log","imagePreviewUrl","setImagePreviewUrl","image","setImage","onChange","files","target","dataTransfer","length","reader","FileReader","onload","result","readAsDataURL","onFormSubmit"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;;AAKA,IAAMC,WAAW,GAAE,SAAbA,WAAa,OAAc;AAAA,MAAZC,QAAY,QAAZA,QAAY;AAE7BF,EAAAA,SAAS,CAAC,YAAI;AACV,QAAMG,QAAQ,GAACC,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,CAAf;AACA,QAAMC,YAAY,GAACF,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAnB;AAEAF,IAAAA,QAAQ,CAACI,gBAAT,CAA0B,OAA1B,EAAkC,UAACC,CAAD,EAAK;AACnCA,MAAAA,CAAC,CAACC,cAAF;AACAC,MAAAA,KAAK,CAAC,+BAAD,CAAL;AACH,KAHD;AAIH,GARQ,EAQP,EARO,CAAT;AAWAC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBV,QAAxB;;AAb6B,kBAecH,QAAQ,CAAC,KAAD,CAftB;AAAA;AAAA,MAetBc,eAfsB;AAAA,MAeNC,kBAfM;;AAAA,mBAgBNf,QAAQ,CAAC,EAAD,CAhBF;AAAA;AAAA,MAgBtBgB,KAhBsB;AAAA,MAgBhBC,QAhBgB;;AAkB7B,MAAMC,SAAQ,GAAC,SAATA,QAAS,CAACT,CAAD,EAAK;AAChB;AACA,QAAIU,KAAK,GAAGV,CAAC,CAACW,MAAF,CAASD,KAAT,IAAkBV,CAAC,CAACY,YAAF,CAAeF,KAA7C,CAFgB,CAGhB;;AACA,QAAI,CAACA,KAAK,CAACG,MAAX,EACA,OALgB,CAMhB;;AACA,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,UAAChB,CAAD,EAAO;AACvBQ,MAAAA,QAAQ,CAACR,CAAC,CAACW,MAAF,CAASM,MAAV,CAAR;AACAX,MAAAA,kBAAkB,CAACN,CAAC,CAACW,MAAF,CAASM,MAAV,CAAlB;AACAd,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBJ,CAAC,CAACW,MAAF,CAASM,MAA7B;AACC,KAJD;;AAKAH,IAAAA,MAAM,CAACI,aAAP,CAAqBR,KAAK,CAAC,CAAD,CAA1B;AACH,GAdD;;AAgBA,MAAMS,YAAY,GAAC,SAAbA,YAAa,CAACnB,CAAD,EAAK,CACpB;AACH,GAFD;;AAIA,sBAAQ;AAAM,IAAA,QAAQ,EAAE;AAAA,aAAImB,YAAJ;AAAA,KAAhB;AAAmC,IAAA,OAAO,EAAC,qBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEF,CAACd,eAAD,gBACF;AAAO,IAAA,EAAE,EAAC,cAAV;AAAyB,IAAA,IAAI,EAAC,MAA9B;AAAqC,IAAA,MAAM,EAAC,MAA5C;AAAmD,IAAA,QAAQ,EAAE,kBAACL,CAAD;AAAA,aAAKS,SAAQ,CAACT,CAAD,CAAb;AAAA,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,GACgF,EAH9E,eAMJ;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEK,eAAe,gBAAK;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAsC,IAAA,IAAI,EAAC,YAA3C;AAAwD,IAAA,GAAG,EAAEA,eAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,GAA2F,cAD5G,CANI,CAAR;AAaH,CAnDD;;AAqDA,eAAeZ,WAAf","sourcesContent":["import React,{useState,useEffect} from 'react'\r\n\r\n\r\n\r\n\r\nconst ImageUpload= ({postType})=>{\r\n\r\n    useEffect(()=>{\r\n        const uploadBt=document.getElementById(\"acpb_upload_button\")\r\n        const upload_input=document.getElementById(\"upload_input\")\r\n\r\n        uploadBt.addEventListener(\"click\",(e)=>{\r\n            e.preventDefault()\r\n            alert(\"You clicked the upload button\")\r\n        })\r\n    },[])\r\n\r\n\r\n    console.log(\"Post type\",postType)\r\n\r\n    const [imagePreviewUrl,setImagePreviewUrl]=useState(false)\r\n    const [image,setImage]=useState(\"\")\r\n\r\n    const onChange=(e)=>{\r\n        //console.log(e.target.value)\r\n        let files = e.target.files || e.dataTransfer.files;\r\n        //alert(\"on change for loading files\")\r\n        if (!files.length)\r\n        return;\r\n        //this.createImage(files[0]);\r\n        let reader = new FileReader();\r\n        reader.onload = (e) => {\r\n        setImage(e.target.result)\r\n        setImagePreviewUrl(e.target.result)\r\n        console.log(\"image\",e.target.result)\r\n        };\r\n        reader.readAsDataURL(files[0]);\r\n    }\r\n\r\n    const onFormSubmit=(e)=>{\r\n        //console.log(e.target.value)\r\n    }\r\n\r\n    return (<form onSubmit={()=>onFormSubmit}  encType=\"multipart/form-data\" >\r\n       \r\n         {!imagePreviewUrl ?\r\n        <input id=\"upload_input\" type=\"file\" hidden=\"true\" onChange={(e)=>onChange(e)} />:\"\" }\r\n\r\n\r\n        <div className=\"imgPreview\">\r\n        { imagePreviewUrl ?  (<img className=\"add_imagem img-fluid\" Name=\"add_imagem\" src={imagePreviewUrl} />) : ( 'Upload image' )\r\n        }\r\n        </div>\r\n        </form>)\r\n     \r\n    \r\n}\r\n\r\nexport default ImageUpload"]},"metadata":{},"sourceType":"module"}