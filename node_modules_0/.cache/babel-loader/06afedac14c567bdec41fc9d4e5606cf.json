{"ast":null,"code":"import _defineProperty from \"C:\\\\react\\\\lac\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\react\\\\lac\\\\src\\\\views\\\\dashboard\\\\DashboardAddUser.js\";\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { CBadge, CCard, CCardBody, CCardHeader, CCol, CDataTable, CRow, CFormGroup, CInput, CLabel, CPagination, CButton } from '@coreui/react';\nimport UserProvider from \"../../context/UserContext\";\nimport UserRole from \"../../inputs/user-role\";\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport usersData from '../../views/users/UsersData';\n\nvar getBadge = function getBadge(status) {\n  switch (status) {\n    case 'Active':\n      return 'success';\n\n    case 'Inactive':\n      return 'secondary';\n\n    case 'Pending':\n      return 'warning';\n\n    case 'Banned':\n      return 'danger';\n\n    default:\n      return 'primary';\n  }\n};\n\nvar DashboardAddUser = function DashboardAddUser() {\n  var _React$createElement;\n\n  var _useContext = useContext(UserProvider.Context),\n      fetchUsersApi = _useContext.fetchUsersApi,\n      users = _useContext.users,\n      updateUser = _useContext.updateUser;\n\n  var formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      role: 'editor'\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().max(15, 'Must be 7 characters or less').required('Required'),\n      email: Yup.string().email('Invalid email address').required('Required'),\n      role: Yup.string().required('Required')\n    }),\n    onSubmit: function onSubmit(values) {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  useEffect(function () {// currentPage !== page && setPage(currentPage)\n  }, []);\n  return /*#__PURE__*/React.createElement(CRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    xl: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Add User\"), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CFormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(CInput, {\n    id: \"name\",\n    placeholder: \"Enter your name\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  })), formik.touched.name && formik.errors.name ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 10\n    }\n  }, formik.errors.name) : null)), /*#__PURE__*/React.createElement(CRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CFormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"ccnumber\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(CInput, (_React$createElement = {\n    id: \"email\",\n    type: \"email\",\n    placeholder: \"Enter email here..\"\n  }, _defineProperty(_React$createElement, \"placeholder\", \"Enter your name\"), _defineProperty(_React$createElement, \"onChange\", formik.handleChange), _defineProperty(_React$createElement, \"onBlur\", formik.handleBlur), _defineProperty(_React$createElement, \"value\", formik.values.email), _defineProperty(_React$createElement, \"__self\", _this), _defineProperty(_React$createElement, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 21\n  }), _React$createElement))), formik.touched.email && formik.errors.email ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 10\n    }\n  }, formik.errors.email) : null)), /*#__PURE__*/React.createElement(CRow, {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(UserRole, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 20\n    }\n  }))), /*#__PURE__*/React.createElement(CRow, {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    type: \"submit\",\n    color: \"primary\",\n    size: \"md\",\n    block: true,\n    md: \"10\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 19\n    }\n  }, \"Add\"))))))), /*#__PURE__*/React.createElement(CCol, {\n    xl: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, \"Users\", /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-muted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, \" example\")), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CDataTable, {\n    items: usersData,\n    fields: [{\n      key: 'name',\n      _classes: 'font-weight-bold'\n    }, 'registered', 'role', 'status'],\n    hover: true,\n    striped: true,\n    itemsPerPage: 5,\n    clickableRows: true,\n    onRowClick: function onRowClick(item) {},\n    scopedSlots: {\n      'status': function status(item) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(CBadge, {\n          color: getBadge(item.status),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 21\n          }\n        }, item.status));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  })))));\n};\n\nexport default DashboardAddUser;","map":{"version":3,"sources":["C:/react/lac/src/views/dashboard/DashboardAddUser.js"],"names":["React","useState","useEffect","useContext","useHistory","useLocation","CBadge","CCard","CCardBody","CCardHeader","CCol","CDataTable","CRow","CFormGroup","CInput","CLabel","CPagination","CButton","UserProvider","UserRole","useFormik","Yup","usersData","getBadge","status","DashboardAddUser","Context","fetchUsersApi","users","updateUser","formik","initialValues","name","email","role","validationSchema","object","string","max","required","onSubmit","values","alert","JSON","stringify","handleSubmit","handleChange","handleBlur","touched","errors","key","_classes","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect,useContext } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel,\r\n  CPagination,\r\n  CButton\r\n} from '@coreui/react'\r\nimport UserProvider from \"../../context/UserContext\"\r\nimport UserRole from \"../../inputs/user-role\"\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport usersData from '../../views/users/UsersData'\r\n\r\nconst getBadge = status => {\r\n  switch (status) {\r\n    case 'Active': return 'success'\r\n    case 'Inactive': return 'secondary'\r\n    case 'Pending': return 'warning'\r\n    case 'Banned': return 'danger'\r\n    default: return 'primary'\r\n  }\r\n}\r\n\r\nconst DashboardAddUser = () => {\r\n\r\n\r\n    const {fetchUsersApi,users,updateUser}=useContext(UserProvider.Context)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n          name: '',\r\n          email: '',\r\n          role: 'editor',\r\n        },\r\n        validationSchema: Yup.object({\r\n          name: Yup.string()\r\n            .max(15, 'Must be 7 characters or less')\r\n            .required('Required'),\r\n          email: Yup.string().email('Invalid email address').required('Required'),\r\n          role: Yup.string().required('Required'),\r\n        }),\r\n        onSubmit: values => {\r\n          alert(JSON.stringify(values, null, 2));\r\n        },\r\n      });\r\n\r\n  useEffect(() => {\r\n    // currentPage !== page && setPage(currentPage)\r\n  }, [])\r\n\r\n  return (\r\n      \r\n    <CRow>\r\n      <CCol xl={6}>\r\n        <CCard>\r\n          <CCardHeader>\r\n          Add User\r\n          </CCardHeader>\r\n          <CCardBody>\r\n          <form onSubmit={formik.handleSubmit}>\r\n          <CRow>\r\n                <CCol xs=\"12\">\r\n                  <CFormGroup>\r\n                    <CLabel htmlFor=\"name\">Name</CLabel>\r\n                    <CInput \r\n                    id=\"name\" \r\n                    placeholder=\"Enter your name\" \r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.name}\r\n                     />\r\n                  </CFormGroup>\r\n                  {formik.touched.name && formik.errors.name ? (\r\n         <div className=\"danger\">{formik.errors.name}</div>\r\n       ) : null}\r\n                </CCol>\r\n              </CRow>\r\n              <CRow>\r\n                <CCol xs=\"12\">\r\n                  <CFormGroup>\r\n                    <CLabel htmlFor=\"ccnumber\">Email</CLabel>\r\n                    <CInput id=\"email\"\r\n                     type=\"email\"\r\n                      placeholder=\"Enter email here..\" \r\n                      placeholder=\"Enter your name\" \r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.email}\r\n                      \r\n                       />\r\n                  </CFormGroup>\r\n                  {formik.touched.email && formik.errors.email ? (\r\n         <div>{formik.errors.email}</div>\r\n       ) : null}\r\n                </CCol>\r\n              </CRow>\r\n\r\n              <CRow className=\"text-center\">\r\n              <CCol xs=\"12\">\r\n                   <UserRole />\r\n                  </CCol>\r\n                  </CRow>\r\n\r\n              \r\n              <CRow className=\"text-center\">\r\n              <CCol xs=\"12\">\r\n                  <CButton type=\"submit\" color=\"primary\" size=\"md\" block md=\"10\">Add</CButton>\r\n                  </CCol>\r\n              </CRow>\r\n         </form>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n\r\n\r\n      <CCol xl={6}>\r\n        <CCard>\r\n          <CCardHeader>\r\n            Users\r\n            <small className=\"text-muted\"> example</small>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n          <CDataTable\r\n            items={usersData}\r\n            fields={[\r\n              { key: 'name', _classes: 'font-weight-bold' },\r\n              'registered', 'role', 'status'\r\n            ]}\r\n            hover\r\n            striped\r\n            itemsPerPage={5}\r\n            clickableRows\r\n            onRowClick={(item) => {}}\r\n            scopedSlots = {{\r\n              'status':\r\n                (item)=>(\r\n                  <td>\r\n                    <CBadge color={getBadge(item.status)}>\r\n                      {item.status}\r\n                    </CBadge>\r\n                  </td>\r\n                )\r\n            }}\r\n          />\r\n         \r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default DashboardAddUser\r\n"]},"metadata":{},"sourceType":"module"}