{"ast":null,"code":"import _defineProperty from \"C:\\\\react\\\\lac\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\react\\\\lac\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"C:\\\\react\\\\lac\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\react\\\\lac\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\react\\\\lac\\\\src\\\\context\\\\UserContext.js\";\n\nimport React, { createContext, useState, useEffect, useContext } from \"react\";\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { useAlert } from 'react-alert';\nimport ToastMe from \"../alerts/toaster\";\nimport authHeader from \"../services/auth-header\";\nimport AuthProvider from '../context/AuthContext';\nvar Context = createContext({});\nvar initialLoginAction = {\n  func: null,\n  params: null\n};\nvar API_URL = \"http://192.168.43.122:8080/laravel/site40/public/api/v1/\";\n\nvar Provider = function Provider(props) {\n  // Initial values are obtained from the props\n  var history = useHistory();\n  var alert = useAlert();\n\n  var _useContext = useContext(AuthProvider.Context),\n      modal = _useContext.modal,\n      setModal = _useContext.setModal; //   alert.show(modal)\n  // const initialUser={\n  //    name:\"\",\n  //    email:\"\",\n  //    role:\"editor\"\n  // }\n\n\n  var childrens = props.childrens; // Use State to keep the values\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      authModal = _useState4[0],\n      setAuthModal = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      users = _useState6[0],\n      setUsers = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      pagination = _useState8[0],\n      setPagination = _useState8[1];\n\n  var _useState9 = useState(1),\n      _useState10 = _slicedToArray(_useState9, 2),\n      currentPage = _useState10[0],\n      setCurrentPage = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      searchPhrase = _useState12[0],\n      setSearchPhrase = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      errors = _useState14[0],\n      setErrors = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      fetching = _useState16[0],\n      setFetching = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      fetchingFailMsg = _useState18[0],\n      setFetchingFailMsg = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      toast = _useState20[0],\n      setToast = _useState20[1];\n\n  var _useState21 = useState(\"error\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      toastType = _useState22[0],\n      setToastType = _useState22[1];\n\n  var _useState23 = useState(initialLoginAction),\n      _useState24 = _slicedToArray(_useState23, 2),\n      loginAction = _useState24[0],\n      setLoginAction = _useState24[1]; // const [featuredFor,setFeaturedFor]=useState(\"\")\n\n\n  useEffect(function () {//alert.show(modal)\n  }, []);\n\n  var showLoginModal = function showLoginModal() {\n    return \"hi\";\n  };\n\n  var KeysToErrorArray = function KeysToErrorArray(errors) {\n    Object.keys(errors).map(function (key, index) {\n      return setErrors(function (prevError) {\n        return [].concat(_toConsumableArray(prevError), [errors[key]]);\n      });\n    });\n  };\n\n  var updateUser = function updateUser(dataKey, data) {\n    //console.log(\"data key\", dataKey) \n    return setUser(function (prevState) {\n      var newState = _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, dataKey, data));\n\n      return newState;\n    });\n  };\n\n  var addUserApi = function addUserApi(userdata) {\n    setErrors([]);\n    setLoginAction(initialLoginAction);\n    setAuthModal(false); // setErrors(prevErrors=>[...prevErrors,\"ready to add user\"])\n\n    axios.request({\n      method: \"post\",\n      headers: authHeader(),\n      url: API_URL + \"user/new\",\n      data: userdata\n    }).then(function (response) {\n      alert.show('New user created!', {\n        type: 'success'\n      });\n      fetchUsersApi(); //   console.log(\"post response\",response.data.data.data.id)\n    }).catch(function (error) {\n      setErrors([]);\n\n      if (error.response) {\n        if (error.response.status) {\n          switch (error.response.status) {\n            case 500:\n              alert.show(error.response.statusText, {\n                type: 'error'\n              });\n              break;\n\n            case 422:\n              KeysToErrorArray(error.response.data.errors);\n              break;\n\n            case 409:\n              KeysToErrorArray(error.response.data.errors);\n              break;\n\n            case 401:\n              //alert.show(\"Token error\",{type:'notice'})\n              error.response.data.code == \"402\" && alert.show(error.response.data.status);\n\n              if (!error.response.data.code) {\n                setAuthModal(true);\n                setLoginAction(function (prevArticle) {\n                  return _objectSpread(_objectSpread({}, prevArticle), {}, {\n                    func: addUserApi,\n                    params: userdata\n                  });\n                });\n              }\n\n              break;\n\n            default:\n              !error.response ? alert.show(\"Server currently down\", {\n                type: 'error'\n              }) : alert.show(error.response.statusText, {\n                type: 'error'\n              });\n          }\n        } else {\n          alert.show(\"Server currently down\", {\n            type: 'error'\n          });\n        }\n      } else {\n        alert.show(\"Invalid response\", {\n          type: 'error'\n        });\n      }\n    });\n  };\n\n  var deleteUserApi = function deleteUserApi(id) {\n    setLoginAction(initialLoginAction);\n    setAuthModal(false);\n    setUsers([]);\n    axios.get(API_URL + \"users/delete/\" + id, {\n      headers: authHeader()\n    }).then(function (response) {\n      setUsers(function (prevArticle) {\n        return _objectSpread(_objectSpread({}, prevArticle), response.data.data.data);\n      });\n      setPagination(function (prevArticle) {\n        return _objectSpread(_objectSpread({}, prevArticle), response.data.data.data);\n      });\n      alert.show(\"Article Deleted\", {\n        type: 'success'\n      });\n      console.log(\"post response\", response.data.data.data);\n    }).catch(function (error) {\n      setErrors([]);\n\n      if (error.response) {\n        if (error.response.status) {\n          switch (error.response.status) {\n            case 500:\n              alert.show(error.response.statusText, {\n                type: 'error'\n              });\n              break;\n\n            case 401:\n              //alert.show(\"Token error\",{type:'notice'})\n              error.response.data.code == \"402\" && alert.show(error.response.data.status);\n\n              if (!error.response.data.code) {\n                setAuthModal(true);\n                setLoginAction(function (prevArticle) {\n                  return _objectSpread(_objectSpread({}, prevArticle), {}, {\n                    func: addUserApi,\n                    params: userdata\n                  });\n                });\n              }\n\n              break;\n\n            default:\n              !error.response ? alert.show(\"Server currently down\", {\n                type: 'error'\n              }) : alert.show(error.response.statusText, {\n                type: 'error'\n              });\n          }\n        } else {\n          alert.show(\"Server currently down\", {\n            type: 'error'\n          });\n        }\n      } else {\n        alert.show(\"Invalid response\", {\n          type: 'error'\n        });\n      } // let apiStatus=error.response!==undefined ? error.response.statusText : \"Unknown error\"\n      // setErrors(prevError=>[...prevError,apiStatus])\n\n    });\n  };\n\n  var fetchUsersApi = function fetchUsersApi() {\n    setUsers([]);\n    setFetching(true);\n    setAuthModal(false); //alert(\"Hi there man\")\n\n    axios.get(API_URL + \"users\", {\n      headers: authHeader()\n    }).then(function (response) {\n      console.log(\"fetch articles\", response.data.data.data.data);\n      setUsers(function (prevArticle) {\n        return [].concat(_toConsumableArray(prevArticle), _toConsumableArray(response.data.data.data.data));\n      });\n      setPagination(function (prevArticle) {\n        return _objectSpread(_objectSpread({}, prevArticle), response.data.data.data);\n      });\n      setFetching(false);\n      console.log(\"post response all articles\", response.data.data.data);\n    }).catch(function (error) {\n      setErrors([]);\n      setFetching(false);\n\n      if (error.response) {\n        if (error.response.status) {\n          switch (error.response.status) {\n            case 500:\n              alert.show(error.response.statusText, {\n                type: 'error'\n              });\n              break;\n\n            case 422:\n              KeysToErrorArray(error.response.data.errors);\n              break;\n\n            case 409:\n              KeysToErrorArray(error.response.data.errors);\n              break;\n\n            case 401:\n              setAuthModal(true);\n              setLoginAction(function (prevArticle) {\n                return _objectSpread(_objectSpread({}, prevArticle), {}, {\n                  func: fetchUsersApi\n                });\n              });\n              break;\n\n            default:\n              !error.response ? alert.show(\"Server currently down\", {\n                type: 'error'\n              }) : alert.show(error.response.statusText, {\n                type: 'error'\n              });\n          }\n        } else {\n          alert.show(\"Server currently down\", {\n            type: 'error'\n          });\n        }\n      } else {\n        alert.show(\"Invalid response\", {\n          type: 'error'\n        });\n      } //   error.response!==undefined ? setFetchingFailMsg(\"No programmes found\") : setFetchingFailMsg(\"Unknown error\")\n      // let apiStatus=error.response!==undefined ? error.response.statusText : \"Unknown error\"\n      // setErrors(prevError=>[...prevError,apiStatus])\n\n    });\n  };\n\n  var goToPageApi = function goToPageApi(page) {\n    setUsers([]);\n    setCurrentPage(page);\n    axios.get(pagination.path + \"?page=\" + page, {\n      headers: authHeader()\n    }).then(function (response) {\n      setUsers(function (prevArticle) {\n        return [].concat(_toConsumableArray(prevArticle), _toConsumableArray(response.data.data.data.data));\n      });\n      setPagination(function (prevArticle) {\n        return _objectSpread(_objectSpread({}, prevArticle), response.data.data.data);\n      });\n      console.log(\"post response all articles\", response.data.data.data);\n    }).catch(function (error) {\n      setErrors([]);\n\n      switch (error.response) {\n        case error.response == 500:\n          alert.show(error.response.data.statusText, {\n            type: 'error'\n          });\n          break;\n\n        case error.response == 422:\n          KeysToErrorArray(error.response.data.errors);\n          break;\n\n        case error.response == 409:\n          KeysToErrorArray(error.response.data.errors);\n          break;\n\n        default:\n          !error.response ? alert.show(\"Server currently down\", {\n            type: 'error'\n          }) : alert.show(error.response.statusText, {\n            type: 'error'\n          });\n      } //   let apiStatus=error.response!==undefined ? error.response.statusText : \"Unknown error\"\n      //   setErrors(prevError=>[...prevError,apiStatus])\n\n    });\n  };\n\n  var searchByPhraseApi = function searchByPhraseApi() {\n    setUsers([]);\n    setFetching(true);\n    setFetchingFailMsg(null);\n    axios.get(API_URL + \"programmes/search/\" + searchPhrase).then(function (response) {\n      setUsers(function (prevArticle) {\n        return [].concat(_toConsumableArray(prevArticle), _toConsumableArray(response.data.data.data.data));\n      });\n      setPagination(function (prevArticle) {\n        return _objectSpread(_objectSpread({}, prevArticle), response.data.data.data);\n      });\n      setFetching(false);\n      !response.data.data.data.length && setFetchingFailMsg(\"No results found...\");\n      console.log(\"get response\", response.data.data.data); //console.log(\"all articles\",articles)\n    }).catch(function (error) {\n      setErrors([]);\n      setFetching(false);\n      error.response !== undefined ? setFetchingFailMsg(\"No articles found\") : setFetchingFailMsg(\"Unknown error\"); // let apiStatus=error.response!==undefined ? error.response.statusText : \"Unknown error\"\n      // setErrors(prevError=>[...prevError,apiStatus])\n    });\n  };\n\n  var articleContext = {\n    user: user,\n    errors: errors,\n    users: users,\n    setUser: setUser,\n    fetchUsersApi: fetchUsersApi,\n    pagination: pagination,\n    goToPageApi: goToPageApi,\n    currentPage: currentPage,\n    searchPhrase: searchPhrase,\n    setSearchPhrase: setSearchPhrase,\n    searchByPhraseApi: searchByPhraseApi,\n    fetching: fetching,\n    fetchingFailMsg: fetchingFailMsg,\n    updateUser: updateUser,\n    addUserApi: addUserApi,\n    toast: toast,\n    setToast: setToast,\n    toastType: toastType,\n    authModal: authModal,\n    setAuthModal: setAuthModal,\n    loginAction: loginAction,\n    setLoginAction: setLoginAction,\n    deleteUserApi: deleteUserApi\n  }; // pass the value in provider and return\n\n  return /*#__PURE__*/React.createElement(Context.Provider, Object.assign({\n    value: articleContext\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 10\n    }\n  }));\n};\n\nvar UserProvider = {\n  Provider: Provider,\n  Context: Context\n};\nexport default UserProvider;","map":{"version":3,"sources":["C:/react/lac/src/context/UserContext.js"],"names":["React","createContext","useState","useEffect","useContext","useHistory","useLocation","useParams","PropTypes","axios","useAlert","ToastMe","authHeader","AuthProvider","Context","initialLoginAction","func","params","API_URL","Provider","props","history","alert","modal","setModal","childrens","user","setUser","authModal","setAuthModal","users","setUsers","pagination","setPagination","currentPage","setCurrentPage","searchPhrase","setSearchPhrase","errors","setErrors","fetching","setFetching","fetchingFailMsg","setFetchingFailMsg","toast","setToast","toastType","setToastType","loginAction","setLoginAction","showLoginModal","KeysToErrorArray","Object","keys","map","key","index","prevError","updateUser","dataKey","data","prevState","newState","addUserApi","userdata","request","method","headers","url","then","response","show","type","fetchUsersApi","catch","error","status","statusText","code","prevArticle","deleteUserApi","id","get","console","log","goToPageApi","page","path","searchByPhraseApi","length","undefined","articleContext","UserProvider"],"mappings":"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","sourcesContent":["import React, { createContext, useState,useEffect,useContext} from \"react\";\r\nimport { useHistory,useLocation,useParams } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\"\r\nimport { useAlert } from 'react-alert'\r\nimport ToastMe from \"../alerts/toaster\"\r\nimport authHeader from \"../services/auth-header\";\r\nimport AuthProvider from '../context/AuthContext'\r\n\r\nconst Context = createContext({});\r\n\r\nconst initialLoginAction={func:null,params:null}\r\n\r\nconst API_URL = \"http://192.168.43.122:8080/laravel/site40/public/api/v1/\";\r\n\r\n const Provider = props => {\r\n  // Initial values are obtained from the props\r\n\r\n  const history=useHistory()\r\n\r\n  const alert = useAlert()\r\n\r\n  const {modal,setModal}=useContext(AuthProvider.Context)\r\n\r\n//   alert.show(modal)\r\n\r\n// const initialUser={\r\n//    name:\"\",\r\n//    email:\"\",\r\n//    role:\"editor\"\r\n// }\r\n \r\n  const {\r\n    // article:initialArticle,\r\n    childrens\r\n  } = props;\r\n\r\n  // Use State to keep the values\r\n  const [user,setUser] = useState({});\r\n  const [authModal,setAuthModal] = useState(false)\r\n  const [users,setUsers] = useState([]);\r\n  const [pagination,setPagination] = useState({});\r\n  const [currentPage,setCurrentPage]=useState(1)\r\n  const [searchPhrase,setSearchPhrase]=useState(\"\")\r\n  const [errors,setErrors]=useState([])\r\n  const [fetching,setFetching]=useState(false)\r\n  const [fetchingFailMsg,setFetchingFailMsg]=useState(null)\r\n  const [toast,setToast]=useState(false)\r\n  const [toastType,setToastType]=useState(\"error\")\r\n  const [loginAction,setLoginAction] =useState(initialLoginAction)\r\n\r\n\r\n  // const [featuredFor,setFeaturedFor]=useState(\"\")\r\n  useEffect(()=>{\r\n    //alert.show(modal)\r\n  },[])\r\n\r\n  \r\n  const showLoginModal=()=>\"hi\"\r\n  \r\n  const KeysToErrorArray=(errors)=>{\r\n    Object.keys(errors).map((key, index)=> setErrors(prevError=>[...prevError,errors[key]]))\r\n   }\r\n\r\n\r\n  const updateUser=(dataKey,data)=> \r\n  {\r\n     //console.log(\"data key\", dataKey) \r\n    return setUser(prevState => { \r\n         let newState=({...prevState,[dataKey]: data})\r\n          return newState\r\n        })  \r\n  }\r\n\r\n  const addUserApi =(userdata)=>{\r\n    setErrors([])\r\n    setLoginAction(initialLoginAction)\r\n    setAuthModal(false)\r\n    // setErrors(prevErrors=>[...prevErrors,\"ready to add user\"])\r\n  \r\n    axios.request( {\r\n      method: \"post\", \r\n      headers: authHeader(),\r\n      url: API_URL+\"user/new\", \r\n      data: userdata\r\n    }).then (response => {\r\n  alert.show('New user created!',{type: 'success'})\r\n    fetchUsersApi()\r\n    //   console.log(\"post response\",response.data.data.data.id)\r\n    }).catch(error => {\r\n      setErrors([])\r\n      if(error.response){\r\n        if(error.response.status){\r\n             switch(error.response.status) {\r\n          case 500:\r\n              alert.show(error.response.statusText,{type: 'error'})\r\n            break;\r\n          case 422:\r\n              KeysToErrorArray(error.response.data.errors)\r\n            break;\r\n            case 409:\r\n              KeysToErrorArray(error.response.data.errors)\r\n            break;\r\n            case 401:\r\n              //alert.show(\"Token error\",{type:'notice'})\r\n              error.response.data.code ==\"402\" && alert.show(error.response.data.status)\r\n               if(!error.response.data.code){\r\n                    setAuthModal(true)\r\n                    setLoginAction(prevArticle=>{\r\n                    return {...prevArticle,func:addUserApi,params:userdata}\r\n                   })\r\n               }\r\n             \r\n            break;\r\n          default:\r\n              !error.response ? alert.show(\"Server currently down\",{type: 'error'}):\r\n              alert.show(error.response.statusText,{type: 'error'})\r\n        }     \r\n        }else{\r\n          alert.show(\"Server currently down\",{type: 'error'})\r\n        }\r\n      }else{alert.show(\"Invalid response\",{type: 'error'})}\r\n     \r\n      \r\n  });\r\n\r\n  }\r\n\r\n  \r\n  const deleteUserApi =(id)=>{\r\n    setLoginAction(initialLoginAction)\r\n    setAuthModal(false)\r\n    setUsers([])\r\n\r\n    axios.get( API_URL+\"users/delete/\"+id,{headers: authHeader()}).then (response => {\r\n      setUsers(prevArticle=>{\r\n        return {...prevArticle,...response.data.data.data}\r\n      })\r\n\r\n\r\n      setPagination(prevArticle=>{\r\n        return {...prevArticle,...response.data.data.data}\r\n      })\r\n      \r\n      alert.show(\"Article Deleted\",{type: 'success'})\r\n      console.log(\"post response\",response.data.data.data)\r\n  \r\n    }).catch(error => {\r\n      setErrors([])\r\n      if(error.response){\r\n        if(error.response.status){\r\n             switch(error.response.status) {\r\n          case 500:\r\n              alert.show(error.response.statusText,{type: 'error'})\r\n            break;\r\n            case 401:\r\n              //alert.show(\"Token error\",{type:'notice'})\r\n             error.response.data.code ==\"402\" && alert.show(error.response.data.status)\r\n               if(!error.response.data.code){\r\n                    setAuthModal(true)\r\n                    setLoginAction(prevArticle=>{\r\n                    return {...prevArticle,func:addUserApi,params:userdata}\r\n                   })\r\n               }\r\n              \r\n            break;\r\n          default:\r\n              !error.response ? alert.show(\"Server currently down\",{type: 'error'}):\r\n              alert.show(error.response.statusText,{type: 'error'})\r\n        }     \r\n        }else{\r\n          alert.show(\"Server currently down\",{type: 'error'})\r\n        }\r\n      }else{alert.show(\"Invalid response\",{type: 'error'})}\r\n      // let apiStatus=error.response!==undefined ? error.response.statusText : \"Unknown error\"\r\n      // setErrors(prevError=>[...prevError,apiStatus])\r\n      \r\n  });\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  const fetchUsersApi =()=>{\r\n    setUsers([])\r\n    setFetching(true)\r\n    setAuthModal(false)\r\n\r\n    //alert(\"Hi there man\")\r\n\r\n    axios.get( API_URL+\"users\",{headers: authHeader()}).then (response => {\r\n\r\n      console.log(\"fetch articles\",response.data.data.data.data)\r\n      setUsers(prevArticle=>{\r\n        return [...prevArticle,...response.data.data.data.data]\r\n      })\r\n\r\n      setPagination(prevArticle=>{\r\n        return {...prevArticle,...response.data.data.data}\r\n      })\r\n      \r\n      setFetching(false)\r\n      console.log(\"post response all articles\",response.data.data.data)\r\n    }).catch(error => {\r\n      setErrors([])\r\n      setFetching(false)\r\n      if(error.response){\r\n        if(error.response.status){\r\n             switch(error.response.status) {\r\n          case 500:\r\n              alert.show(error.response.statusText,{type: 'error'})\r\n            break;\r\n          case 422:\r\n              KeysToErrorArray(error.response.data.errors)\r\n            break;\r\n            case 409:\r\n              KeysToErrorArray(error.response.data.errors)\r\n            break;\r\n            case 401:\r\n            \r\n                    setAuthModal(true)\r\n                    setLoginAction(prevArticle=>{\r\n                    return {...prevArticle,func:fetchUsersApi}\r\n                   })\r\n            \r\n             \r\n            break;\r\n          default:\r\n              !error.response ? alert.show(\"Server currently down\",{type: 'error'}):\r\n              alert.show(error.response.statusText,{type: 'error'})\r\n        }     \r\n        }else{\r\n          alert.show(\"Server currently down\",{type: 'error'})\r\n        }\r\n      }else{alert.show(\"Invalid response\",{type: 'error'})}\r\n \r\n    //   error.response!==undefined ? setFetchingFailMsg(\"No programmes found\") : setFetchingFailMsg(\"Unknown error\")\r\n      // let apiStatus=error.response!==undefined ? error.response.statusText : \"Unknown error\"\r\n      // setErrors(prevError=>[...prevError,apiStatus])\r\n      \r\n  });\r\n\r\n  }\r\n\r\n\r\n  const goToPageApi =(page)=>{\r\n    setUsers([])\r\n    setCurrentPage(page)\r\n\r\n    axios.get( pagination.path+\"?page=\"+page,{headers: authHeader()}).then (response => {\r\n        setUsers(prevArticle=>{\r\n        return [...prevArticle,...response.data.data.data.data]\r\n      })\r\n\r\n      setPagination(prevArticle=>{\r\n        return {...prevArticle,...response.data.data.data}\r\n      })\r\n      \r\n     \r\n      console.log(\"post response all articles\",response.data.data.data)\r\n    }).catch(error => {\r\n      setErrors([])\r\n        switch(error.response) {\r\n        case error.response==500:\r\n            alert.show(error.response.data.statusText,{type: 'error'})\r\n          break;\r\n        case error.response==422:\r\n            KeysToErrorArray(error.response.data.errors)\r\n          break;\r\n          case error.response==409:\r\n            KeysToErrorArray(error.response.data.errors)\r\n          break;\r\n        default:\r\n            !error.response ? alert.show(\"Server currently down\",{type: 'error'}):alert.show(error.response.statusText,{type: 'error'})\r\n      }\r\n    //   let apiStatus=error.response!==undefined ? error.response.statusText : \"Unknown error\"\r\n    //   setErrors(prevError=>[...prevError,apiStatus])\r\n      \r\n  });\r\n\r\n  }\r\n\r\n\r\n  const searchByPhraseApi =()=>{\r\n    \r\n    setUsers([])\r\n    setFetching(true)\r\n    setFetchingFailMsg(null)\r\n\r\n    axios.get( API_URL+\"programmes/search/\"+searchPhrase).then (response => {\r\n\r\n      \r\n        setUsers(prevArticle=>{\r\n        return [...prevArticle,...response.data.data.data.data]\r\n      })\r\n\r\n      setPagination(prevArticle=>{\r\n        return {...prevArticle,...response.data.data.data}\r\n      })\r\n      \r\n      setFetching(false)\r\n      !response.data.data.data.length && setFetchingFailMsg(\"No results found...\")\r\n      console.log(\"get response\",response.data.data.data)\r\n      //console.log(\"all articles\",articles)\r\n    }).catch(error => {\r\n      setErrors([])\r\n      setFetching(false)\r\n     \r\n      error.response!==undefined ? setFetchingFailMsg(\"No articles found\") : setFetchingFailMsg(\"Unknown error\")\r\n      // let apiStatus=error.response!==undefined ? error.response.statusText : \"Unknown error\"\r\n      // setErrors(prevError=>[...prevError,apiStatus])\r\n      \r\n  });\r\n\r\n  }\r\n\r\n\r\n  const articleContext = {\r\n    user,\r\n    errors,\r\n    users,\r\n    setUser,\r\n    fetchUsersApi,\r\n    pagination,\r\n    goToPageApi,\r\n    currentPage,\r\n    searchPhrase,\r\n    setSearchPhrase,\r\n    searchByPhraseApi,\r\n    fetching,\r\n    fetchingFailMsg,\r\n    updateUser,\r\n    addUserApi,\r\n    toast,\r\n    setToast,\r\n    toastType,\r\n    authModal,\r\n    setAuthModal,\r\n    loginAction,\r\n    setLoginAction,\r\n    deleteUserApi\r\n    \r\n  };\r\n\r\n  // pass the value in provider and return\r\n  return <Context.Provider value={articleContext}  {...props}></Context.Provider>;\r\n};\r\n\r\n\r\nconst UserProvider= {\r\n    Provider,\r\n    Context\r\n};\r\n\r\n\r\nexport default UserProvider"]},"metadata":{},"sourceType":"module"}