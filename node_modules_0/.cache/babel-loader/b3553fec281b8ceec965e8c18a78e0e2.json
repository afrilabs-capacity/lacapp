{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\react\\\\lac\\\\src\\\\alerts\\\\toaster.js\";\n\nimport React, { useContext } from \"react\";\n\nvar ToastMe = function ToastMe(_ref) {\n  var errors = _ref.errors;\n  // const {toast,toastType,setToast}=useContext(context)\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, errors ? Object.keys(errors).map(function (key, index) {\n    {\n      /* myObject[key] *= 2; */\n    }\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 31\n      }\n    }, key, errors[key]);\n  }) : \"\" //errors.length? setToast(true):\"\"  \n  ));\n};\n\nexport default ToastMe;","map":{"version":3,"sources":["C:/react/lac/src/alerts/toaster.js"],"names":["React","useContext","ToastMe","errors","Object","keys","map","key","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;;AACA,IAAMC,OAAO,GAAC,SAARA,OAAQ,OAAY;AAAA,MAAVC,MAAU,QAAVA,MAAU;AAC1B;AAEI,sBACI,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEeA,MAAM,GAENC,MAAM,CAACC,IAAP,CAAYF,MAAZ,EAAoBG,GAApB,CAAwB,UAASC,GAAT,EAAcC,KAAd,EAAqB;AAC9C;AAAC;AAA0B;AAC3B,wBAAQ;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBD,GAAjB,EAAsBJ,MAAM,CAACI,GAAD,CAA5B,CAAR;AACE,GAHD,CAFM,GAOA,EATrB,CAUgB;AAVhB,GADA,CADJ;AAoBH,CAvBD;;AA2BA,eAAeL,OAAf","sourcesContent":["import React,{useContext} from \"react\"\r\nconst ToastMe=({errors})=>{\r\n// const {toast,toastType,setToast}=useContext(context)\r\n\r\n    return (\r\n        <>\r\n        <ul>\r\n                    {\r\n                       errors ? \r\n                       \r\n                       Object.keys(errors).map(function(key, index) {\r\n                      {/* myObject[key] *= 2; */}\r\n                      return (<li key={index}>{key}{errors[key]}</li>)\r\n                       })\r\n                       \r\n                            :\"\"\r\n                        //errors.length? setToast(true):\"\"  \r\n                           \r\n                    }\r\n                      </ul>\r\n         \r\n        </>\r\n      )\r\n\r\n}\r\n\r\n\r\n\r\nexport default ToastMe"]},"metadata":{},"sourceType":"module"}